// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RuleEditorForm /> spec renders the component 1`] = `
<RuleEditorForm
  cancel={[Function]}
  initialValue={
    Object {
      "author": "",
      "description": "",
      "detection": "",
      "falsePositives": Array [],
      "id": "25b9c01c-350d-4b95-bed1-836d04a4f324",
      "level": "",
      "logType": "",
      "log_source": Object {},
      "name": "",
      "references": Array [],
      "status": "experimental",
      "tags": Array [],
    }
  }
  mode="create"
  notifications={
    Object {
      "toasts": Object {
        "addDanger": [MockFunction],
        "addInfo": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
      },
    }
  }
  submit={[Function]}
  title="title"
>
  <Formik
    initialValues={
      Object {
        "author": "",
        "description": "",
        "detection": "",
        "falsePositives": Array [],
        "id": "25b9c01c-350d-4b95-bed1-836d04a4f324",
        "level": "",
        "logType": "",
        "log_source": Object {},
        "name": "",
        "references": Array [],
        "status": "experimental",
        "tags": Array [],
      }
    }
    onSubmit={[Function]}
    validate={[Function]}
  >
    <Form>
      <form
        action="#"
      >
        <EuiPanel
          className="rule-editor-form"
        >
          <div
            className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow rule-editor-form"
          >
            <PageHeader>
              <EuiTitle>
                <h3
                  className="euiTitle euiTitle--medium"
                >
                  title
                </h3>
              </EuiTitle>
            </PageHeader>
            <EuiButtonGroup
              data-test-subj="change-editor-type"
              idSelected="visual"
              legend="This is editor type selector"
              onChange={[Function]}
              options={
                Array [
                  Object {
                    "id": "visual",
                    "label": "Visual Editor",
                  },
                  Object {
                    "id": "yaml",
                    "label": "YAML Editor",
                  },
                ]
              }
            >
              <fieldset
                className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                data-test-subj="change-editor-type"
                disabled={false}
              >
                <EuiScreenReaderOnly>
                  <legend
                    className="euiScreenReaderOnly"
                  >
                    This is editor type selector
                  </legend>
                </EuiScreenReaderOnly>
                <div
                  className="euiButtonGroup__buttons"
                >
                  <EuiButtonGroupButton
                    color="text"
                    element="label"
                    id="visual"
                    isDisabled={false}
                    isIconOnly={false}
                    isSelected={true}
                    key="0"
                    label="Visual Editor"
                    name="some_html_id"
                    onChange={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButtonGroupButton"
                      className="euiButtonGroupButton-isSelected"
                      color="text"
                      element="label"
                      fill={true}
                      htmlFor="some_html_id"
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      textProps={
                        Object {
                          "className": "euiButtonGroupButton__textShift",
                          "data-text": "Visual Editor",
                          "ref": [Function],
                          "title": "Visual Editor",
                        }
                      }
                    >
                      <label
                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected"
                        disabled={false}
                        htmlFor="some_html_id"
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text euiButtonGroupButton__textShift",
                              "data-text": "Visual Editor",
                              "ref": [Function],
                              "title": "Visual Editor",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text euiButtonGroupButton__textShift"
                              data-text="Visual Editor"
                              title="Visual Editor"
                            >
                              <input
                                checked={true}
                                className="euiScreenReaderOnly"
                                data-test-subj="visual"
                                disabled={false}
                                id="some_html_id"
                                name="some_html_id"
                                onChange={[Function]}
                                type="radio"
                              />
                              Visual Editor
                            </span>
                          </span>
                        </EuiButtonContent>
                      </label>
                    </EuiButtonDisplay>
                  </EuiButtonGroupButton>
                  <EuiButtonGroupButton
                    color="text"
                    element="label"
                    id="yaml"
                    isDisabled={false}
                    isIconOnly={false}
                    isSelected={false}
                    key="1"
                    label="YAML Editor"
                    name="some_html_id"
                    onChange={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButtonGroupButton"
                      className=""
                      color="text"
                      element="label"
                      fill={false}
                      htmlFor="some_html_id"
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      textProps={
                        Object {
                          "className": "euiButtonGroupButton__textShift",
                          "data-text": "YAML Editor",
                          "ref": [Function],
                          "title": "YAML Editor",
                        }
                      }
                    >
                      <label
                        className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small"
                        disabled={false}
                        htmlFor="some_html_id"
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text euiButtonGroupButton__textShift",
                              "data-text": "YAML Editor",
                              "ref": [Function],
                              "title": "YAML Editor",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text euiButtonGroupButton__textShift"
                              data-text="YAML Editor"
                              title="YAML Editor"
                            >
                              <input
                                checked={false}
                                className="euiScreenReaderOnly"
                                data-test-subj="yaml"
                                disabled={false}
                                id="some_html_id"
                                name="some_html_id"
                                onChange={[Function]}
                                type="radio"
                              />
                              YAML Editor
                            </span>
                          </span>
                        </EuiButtonContent>
                      </label>
                    </EuiButtonDisplay>
                  </EuiButtonGroupButton>
                </div>
              </fieldset>
            </EuiButtonGroup>
            <EuiSpacer
              size="xl"
            >
              <div
                className="euiSpacer euiSpacer--xl"
              />
            </EuiSpacer>
            <FormSubmissionErrorToastNotification
              notifications={
                Object {
                  "toasts": Object {
                    "addDanger": [MockFunction],
                    "addInfo": [MockFunction],
                    "addSuccess": [MockFunction],
                    "addWarning": [MockFunction],
                  },
                }
              }
            />
            <EuiTitle>
              <EuiText
                className="euiTitle euiTitle--medium"
              >
                <div
                  className="euiText euiText--medium euiTitle euiTitle--medium"
                >
                  <h2>
                    Rule overview
                  </h2>
                </div>
              </EuiText>
            </EuiTitle>
            <EuiSpacer>
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiCompressedFormRow
              describedByIds={Array []}
              display="rowCompressed"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              helpText="Rule name can be max 256 characters."
              label={
                <EuiText
                  size="s"
                >
                  <strong>
                    Rule name
                  </strong>
                </EuiText>
              }
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--compressed"
                id="some_html_id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="some_html_id"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="some_html_id"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <strong>
                            Rule name
                          </strong>
                        </div>
                      </EuiText>
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <EuiCompressedFieldText
                    aria-describedby="some_html_id-help-0"
                    data-test-subj="rule_name_field"
                    id="some_html_id"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="My custom rule"
                    value=""
                  >
                    <EuiFieldText
                      aria-describedby="some_html_id-help-0"
                      compressed={true}
                      data-test-subj="rule_name_field"
                      id="some_html_id"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="My custom rule"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={true}
                        fullWidth={false}
                        inputId="some_html_id"
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--compressed"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                aria-describedby="some_html_id-help-0"
                                className="euiFieldText euiFieldText--compressed"
                                data-test-subj="rule_name_field"
                                id="some_html_id"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="My custom rule"
                                type="text"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={true}
                            />
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldText>
                  </EuiCompressedFieldText>
                  <EuiFormHelpText
                    className="euiFormRow__text"
                    id="some_html_id-help-0"
                    key="Rule name can be max 256 characters."
                  >
                    <div
                      className="euiFormHelpText euiFormRow__text"
                      id="some_html_id-help-0"
                    >
                      Rule name can be max 256 characters.
                    </div>
                  </EuiFormHelpText>
                </div>
              </div>
            </EuiCompressedFormRow>
            <EuiSpacer
              size="m"
            >
              <div
                className="euiSpacer euiSpacer--m"
              />
            </EuiSpacer>
            <EuiCompressedFormRow
              describedByIds={Array []}
              display="rowCompressed"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              label={
                <EuiText
                  size="s"
                >
                  <strong>
                    Description 
                  </strong>
                  <i>
                    - optional
                  </i>
                </EuiText>
              }
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--compressed"
                id="some_html_id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="some_html_id"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="some_html_id"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <strong>
                            Description 
                          </strong>
                          <i>
                            - optional
                          </i>
                        </div>
                      </EuiText>
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <EuiCompressedFieldText
                    data-test-subj="rule_description_field"
                    id="some_html_id"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Detects ..."
                    value=""
                  >
                    <EuiFieldText
                      compressed={true}
                      data-test-subj="rule_description_field"
                      id="some_html_id"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Detects ..."
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={true}
                        fullWidth={false}
                        inputId="some_html_id"
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--compressed"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldText euiFieldText--compressed"
                                data-test-subj="rule_description_field"
                                id="some_html_id"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Detects ..."
                                type="text"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={true}
                            />
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldText>
                  </EuiCompressedFieldText>
                </div>
              </div>
            </EuiCompressedFormRow>
            <EuiSpacer
              size="m"
            >
              <div
                className="euiSpacer euiSpacer--m"
              />
            </EuiSpacer>
            <EuiCompressedFormRow
              describedByIds={Array []}
              display="rowCompressed"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              helpText="Combine multiple authors separated with a comma"
              label={
                <EuiText
                  size="s"
                >
                  <strong>
                    Author
                  </strong>
                </EuiText>
              }
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--compressed"
                id="some_html_id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="some_html_id"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="some_html_id"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <strong>
                            Author
                          </strong>
                        </div>
                      </EuiText>
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <EuiCompressedFieldText
                    aria-describedby="some_html_id-help-0"
                    data-test-subj="rule_author_field"
                    id="some_html_id"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Enter author name"
                    value=""
                  >
                    <EuiFieldText
                      aria-describedby="some_html_id-help-0"
                      compressed={true}
                      data-test-subj="rule_author_field"
                      id="some_html_id"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="Enter author name"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={true}
                        fullWidth={false}
                        inputId="some_html_id"
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--compressed"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                aria-describedby="some_html_id-help-0"
                                className="euiFieldText euiFieldText--compressed"
                                data-test-subj="rule_author_field"
                                id="some_html_id"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                placeholder="Enter author name"
                                type="text"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={true}
                            />
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldText>
                  </EuiCompressedFieldText>
                  <EuiFormHelpText
                    className="euiFormRow__text"
                    id="some_html_id-help-0"
                    key="Combine multiple authors separated with a comma"
                  >
                    <div
                      className="euiFormHelpText euiFormRow__text"
                      id="some_html_id-help-0"
                    >
                      Combine multiple authors separated with a comma
                    </div>
                  </EuiFormHelpText>
                </div>
              </div>
            </EuiCompressedFormRow>
            <EuiSpacer
              size="xl"
            >
              <div
                className="euiSpacer euiSpacer--xl"
              />
            </EuiSpacer>
            <EuiTitle>
              <EuiText
                className="euiTitle euiTitle--medium"
              >
                <div
                  className="euiText euiText--medium euiTitle euiTitle--medium"
                >
                  <h2>
                    Details
                  </h2>
                </div>
              </EuiText>
            </EuiTitle>
            <EuiSpacer>
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiFlexGroup
              alignItems="flexStart"
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsFlexStart euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem
                  style={
                    Object {
                      "maxWidth": 400,
                    }
                  }
                >
                  <div
                    className="euiFlexItem"
                    style={
                      Object {
                        "maxWidth": 400,
                      }
                    }
                  >
                    <EuiCompressedFormRow
                      describedByIds={Array []}
                      display="rowCompressed"
                      fullWidth={false}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      label={
                        <EuiText
                          size="s"
                        >
                          <strong>
                            Log type
                          </strong>
                        </EuiText>
                      }
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--compressed"
                        id="some_html_id-row"
                      >
                        <div
                          className="euiFormRow__labelWrapper"
                        >
                          <EuiFormLabel
                            className="euiFormRow__label"
                            htmlFor="some_html_id"
                            isFocused={false}
                            type="label"
                          >
                            <label
                              className="euiFormLabel euiFormRow__label"
                              htmlFor="some_html_id"
                            >
                              <EuiText
                                size="s"
                              >
                                <div
                                  className="euiText euiText--small"
                                >
                                  <strong>
                                    Log type
                                  </strong>
                                </div>
                              </EuiText>
                            </label>
                          </EuiFormLabel>
                        </div>
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <EuiCompressedComboBox
                            async={false}
                            compressed={true}
                            data-test-subj="rule_type_dropdown"
                            fullWidth={false}
                            id="some_html_id"
                            isClearable={true}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={Array []}
                            placeholder="Select a log type"
                            selectedOptions={Array []}
                            singleSelection={
                              Object {
                                "asPlainText": true,
                              }
                            }
                            sortMatchesBy="none"
                          >
                            <div
                              aria-expanded={false}
                              aria-haspopup="listbox"
                              className="euiComboBox euiComboBox--compressed"
                              data-test-subj="rule_type_dropdown"
                              onKeyDown={[Function]}
                              role="combobox"
                            >
                              <EuiComboBoxInput
                                autoSizeInputRef={[Function]}
                                compressed={true}
                                fullWidth={false}
                                hasSelectedOptions={false}
                                id="some_html_id"
                                inputRef={[Function]}
                                isListOpen={false}
                                noIcon={false}
                                onChange={[Function]}
                                onClear={[Function]}
                                onClick={[Function]}
                                onCloseListClick={[Function]}
                                onFocus={[Function]}
                                onOpenListClick={[Function]}
                                onRemoveOption={[Function]}
                                placeholder="Select a log type"
                                rootId={[Function]}
                                searchValue=""
                                selectedOptions={Array []}
                                singleSelection={
                                  Object {
                                    "asPlainText": true,
                                  }
                                }
                                toggleButtonRef={[Function]}
                                updatePosition={[Function]}
                                value=""
                              >
                                <EuiFormControlLayout
                                  compressed={true}
                                  fullWidth={false}
                                  icon={
                                    Object {
                                      "aria-label": "Open list of options",
                                      "data-test-subj": "comboBoxToggleListButton",
                                      "disabled": undefined,
                                      "onClick": [Function],
                                      "ref": [Function],
                                      "side": "right",
                                      "type": "arrowDown",
                                    }
                                  }
                                >
                                  <div
                                    className="euiFormControlLayout euiFormControlLayout--compressed"
                                  >
                                    <div
                                      className="euiFormControlLayout__childrenWrapper"
                                    >
                                      <div
                                        className="euiComboBox__inputWrap euiComboBox__inputWrap--compressed euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                        data-test-subj="comboBoxInput"
                                        onClick={[Function]}
                                        tabIndex={-1}
                                      >
                                        <p
                                          className="euiComboBoxPlaceholder"
                                        >
                                          Select a log type
                                        </p>
                                        <AutosizeInput
                                          aria-controls=""
                                          className="euiComboBox__input"
                                          data-test-subj="comboBoxSearchInput"
                                          id="some_html_id"
                                          injectStyles={true}
                                          inputRef={[Function]}
                                          minWidth={1}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          role="textbox"
                                          style={
                                            Object {
                                              "fontSize": 14,
                                            }
                                          }
                                          value=""
                                        >
                                          <div
                                            className="euiComboBox__input"
                                            style={
                                              Object {
                                                "display": "inline-block",
                                                "fontSize": 14,
                                              }
                                            }
                                          >
                                            <input
                                              aria-controls=""
                                              data-test-subj="comboBoxSearchInput"
                                              id="some_html_id"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="textbox"
                                              style={
                                                Object {
                                                  "boxSizing": "content-box",
                                                  "width": "2px",
                                                }
                                              }
                                              value=""
                                            />
                                            <div
                                              style={
                                                Object {
                                                  "height": 0,
                                                  "left": 0,
                                                  "overflow": "scroll",
                                                  "position": "absolute",
                                                  "top": 0,
                                                  "visibility": "hidden",
                                                  "whiteSpace": "pre",
                                                }
                                              }
                                            />
                                          </div>
                                        </AutosizeInput>
                                      </div>
                                      <EuiFormControlLayoutIcons
                                        compressed={true}
                                        icon={
                                          Object {
                                            "aria-label": "Open list of options",
                                            "data-test-subj": "comboBoxToggleListButton",
                                            "disabled": undefined,
                                            "onClick": [Function],
                                            "ref": [Function],
                                            "side": "right",
                                            "type": "arrowDown",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                        >
                                          <EuiFormControlLayoutCustomIcon
                                            aria-label="Open list of options"
                                            data-test-subj="comboBoxToggleListButton"
                                            iconRef={[Function]}
                                            onClick={[Function]}
                                            size="s"
                                            type="arrowDown"
                                          >
                                            <button
                                              aria-label="Open list of options"
                                              className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                              data-test-subj="comboBoxToggleListButton"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiIcon
                                                aria-hidden="true"
                                                className="euiFormControlLayoutCustomIcon__icon"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                EuiIconMock
                                              </EuiIcon>
                                            </button>
                                          </EuiFormControlLayoutCustomIcon>
                                        </div>
                                      </EuiFormControlLayoutIcons>
                                    </div>
                                  </div>
                                </EuiFormControlLayout>
                              </EuiComboBoxInput>
                            </div>
                          </EuiCompressedComboBox>
                        </div>
                      </div>
                    </EuiCompressedFormRow>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "marginTop": 36,
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "marginTop": 36,
                      }
                    }
                  >
                    <EuiSmallButton
                      href="opensearch_security_analytics_dashboards#/log-types"
                      target="_blank"
                    >
                      <EuiButton
                        href="opensearch_security_analytics_dashboards#/log-types"
                        size="s"
                        target="_blank"
                      >
                        <EuiButtonDisplay
                          baseClassName="euiButton"
                          element="a"
                          href="opensearch_security_analytics_dashboards#/log-types"
                          isDisabled={false}
                          rel="noopener noreferrer"
                          size="s"
                          target="_blank"
                        >
                          <a
                            className="euiButton euiButton--primary euiButton--small"
                            disabled={false}
                            href="opensearch_security_analytics_dashboards#/log-types"
                            rel="noopener noreferrer"
                            style={
                              Object {
                                "minWidth": undefined,
                              }
                            }
                            target="_blank"
                          >
                            <EuiButtonContent
                              className="euiButton__content"
                              iconGap="m"
                              iconSide="left"
                              textProps={
                                Object {
                                  "className": "euiButton__text",
                                }
                              }
                            >
                              <span
                                className="euiButtonContent euiButton__content"
                              >
                                <span
                                  className="euiButton__text"
                                >
                                  Manage 
                                  <EuiIcon
                                    type="popout"
                                  >
                                    EuiIconMock
                                  </EuiIcon>
                                </span>
                              </span>
                            </EuiButtonContent>
                          </a>
                        </EuiButtonDisplay>
                      </EuiButton>
                    </EuiSmallButton>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
            <EuiSpacer>
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiCompressedFormRow
              describedByIds={Array []}
              display="rowCompressed"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              label={
                <EuiText
                  size="s"
                >
                  <strong>
                    Rule level (severity)
                  </strong>
                </EuiText>
              }
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--compressed"
                id="some_html_id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="some_html_id"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="some_html_id"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <strong>
                            Rule level (severity)
                          </strong>
                        </div>
                      </EuiText>
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <EuiCompressedComboBox
                    async={false}
                    compressed={true}
                    data-test-subj="rule_severity_dropdown"
                    fullWidth={false}
                    id="some_html_id"
                    isClearable={true}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Critical",
                          "value": "critical",
                        },
                        Object {
                          "label": "High",
                          "value": "high",
                        },
                        Object {
                          "label": "Medium",
                          "value": "medium",
                        },
                        Object {
                          "label": "Low",
                          "value": "low",
                        },
                        Object {
                          "label": "Informational",
                          "value": "informational",
                        },
                      ]
                    }
                    placeholder="Select a rule level"
                    selectedOptions={Array []}
                    singleSelection={
                      Object {
                        "asPlainText": true,
                      }
                    }
                    sortMatchesBy="none"
                  >
                    <div
                      aria-expanded={false}
                      aria-haspopup="listbox"
                      className="euiComboBox euiComboBox--compressed"
                      data-test-subj="rule_severity_dropdown"
                      onKeyDown={[Function]}
                      role="combobox"
                    >
                      <EuiComboBoxInput
                        autoSizeInputRef={[Function]}
                        compressed={true}
                        fullWidth={false}
                        hasSelectedOptions={false}
                        id="some_html_id"
                        inputRef={[Function]}
                        isListOpen={false}
                        noIcon={false}
                        onChange={[Function]}
                        onClear={[Function]}
                        onClick={[Function]}
                        onCloseListClick={[Function]}
                        onFocus={[Function]}
                        onOpenListClick={[Function]}
                        onRemoveOption={[Function]}
                        placeholder="Select a rule level"
                        rootId={[Function]}
                        searchValue=""
                        selectedOptions={Array []}
                        singleSelection={
                          Object {
                            "asPlainText": true,
                          }
                        }
                        toggleButtonRef={[Function]}
                        updatePosition={[Function]}
                        value=""
                      >
                        <EuiFormControlLayout
                          compressed={true}
                          fullWidth={false}
                          icon={
                            Object {
                              "aria-label": "Open list of options",
                              "data-test-subj": "comboBoxToggleListButton",
                              "disabled": undefined,
                              "onClick": [Function],
                              "ref": [Function],
                              "side": "right",
                              "type": "arrowDown",
                            }
                          }
                        >
                          <div
                            className="euiFormControlLayout euiFormControlLayout--compressed"
                          >
                            <div
                              className="euiFormControlLayout__childrenWrapper"
                            >
                              <div
                                className="euiComboBox__inputWrap euiComboBox__inputWrap--compressed euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                data-test-subj="comboBoxInput"
                                onClick={[Function]}
                                tabIndex={-1}
                              >
                                <p
                                  className="euiComboBoxPlaceholder"
                                >
                                  Select a rule level
                                </p>
                                <AutosizeInput
                                  aria-controls=""
                                  className="euiComboBox__input"
                                  data-test-subj="comboBoxSearchInput"
                                  id="some_html_id"
                                  injectStyles={true}
                                  inputRef={[Function]}
                                  minWidth={1}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  role="textbox"
                                  style={
                                    Object {
                                      "fontSize": 14,
                                    }
                                  }
                                  value=""
                                >
                                  <div
                                    className="euiComboBox__input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                        "fontSize": 14,
                                      }
                                    }
                                  >
                                    <input
                                      aria-controls=""
                                      data-test-subj="comboBoxSearchInput"
                                      id="some_html_id"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "2px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </div>
                              <EuiFormControlLayoutIcons
                                compressed={true}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                >
                                  <EuiFormControlLayoutCustomIcon
                                    aria-label="Open list of options"
                                    data-test-subj="comboBoxToggleListButton"
                                    iconRef={[Function]}
                                    onClick={[Function]}
                                    size="s"
                                    type="arrowDown"
                                  >
                                    <button
                                      aria-label="Open list of options"
                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                      data-test-subj="comboBoxToggleListButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <EuiIcon
                                        aria-hidden="true"
                                        className="euiFormControlLayoutCustomIcon__icon"
                                        size="s"
                                        type="arrowDown"
                                      >
                                        EuiIconMock
                                      </EuiIcon>
                                    </button>
                                  </EuiFormControlLayoutCustomIcon>
                                </div>
                              </EuiFormControlLayoutIcons>
                            </div>
                          </div>
                        </EuiFormControlLayout>
                      </EuiComboBoxInput>
                    </div>
                  </EuiCompressedComboBox>
                </div>
              </div>
            </EuiCompressedFormRow>
            <EuiSpacer>
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiCompressedFormRow
              describedByIds={Array []}
              display="rowCompressed"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              label={
                <EuiText
                  size="s"
                >
                  <strong>
                    Rule Status
                  </strong>
                </EuiText>
              }
              labelType="label"
            >
              <div
                className="euiFormRow euiFormRow--compressed"
                id="some_html_id-row"
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="some_html_id"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="some_html_id"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <strong>
                            Rule Status
                          </strong>
                        </div>
                      </EuiText>
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <EuiCompressedComboBox
                    async={false}
                    compressed={true}
                    data-test-subj="rule_status_dropdown"
                    fullWidth={false}
                    id="some_html_id"
                    isClearable={true}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "experimental",
                          "value": "experimental",
                        },
                        Object {
                          "label": "test",
                          "value": "test",
                        },
                        Object {
                          "label": "stable",
                          "value": "stable",
                        },
                      ]
                    }
                    placeholder="Select a rule status"
                    selectedOptions={
                      Array [
                        Object {
                          "label": "experimental",
                          "value": "experimental",
                        },
                      ]
                    }
                    singleSelection={
                      Object {
                        "asPlainText": true,
                      }
                    }
                    sortMatchesBy="none"
                  >
                    <div
                      aria-expanded={false}
                      aria-haspopup="listbox"
                      className="euiComboBox euiComboBox--compressed"
                      data-test-subj="rule_status_dropdown"
                      onKeyDown={[Function]}
                      role="combobox"
                    >
                      <EuiComboBoxInput
                        autoSizeInputRef={[Function]}
                        compressed={true}
                        fullWidth={false}
                        hasSelectedOptions={true}
                        id="some_html_id"
                        inputRef={[Function]}
                        isListOpen={false}
                        noIcon={false}
                        onChange={[Function]}
                        onClear={[Function]}
                        onClick={[Function]}
                        onCloseListClick={[Function]}
                        onFocus={[Function]}
                        onOpenListClick={[Function]}
                        onRemoveOption={[Function]}
                        placeholder="Select a rule status"
                        rootId={[Function]}
                        searchValue=""
                        selectedOptions={
                          Array [
                            Object {
                              "label": "experimental",
                              "value": "experimental",
                            },
                          ]
                        }
                        singleSelection={
                          Object {
                            "asPlainText": true,
                          }
                        }
                        toggleButtonRef={[Function]}
                        updatePosition={[Function]}
                        value="experimental"
                      >
                        <EuiFormControlLayout
                          clear={
                            Object {
                              "data-test-subj": "comboBoxClearButton",
                              "onClick": [Function],
                            }
                          }
                          compressed={true}
                          fullWidth={false}
                          icon={
                            Object {
                              "aria-label": "Open list of options",
                              "data-test-subj": "comboBoxToggleListButton",
                              "disabled": undefined,
                              "onClick": [Function],
                              "ref": [Function],
                              "side": "right",
                              "type": "arrowDown",
                            }
                          }
                        >
                          <div
                            className="euiFormControlLayout euiFormControlLayout--compressed"
                          >
                            <div
                              className="euiFormControlLayout__childrenWrapper"
                            >
                              <div
                                className="euiComboBox__inputWrap euiComboBox__inputWrap--compressed euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                data-test-subj="comboBoxInput"
                                onClick={[Function]}
                                tabIndex={-1}
                              >
                                <EuiComboBoxPill
                                  asPlainText={true}
                                  color="hollow"
                                  key="experimental"
                                  option={
                                    Object {
                                      "label": "experimental",
                                      "value": "experimental",
                                    }
                                  }
                                  value="experimental"
                                >
                                  <span
                                    className="euiComboBoxPill euiComboBoxPill--plainText"
                                    value="experimental"
                                  >
                                    experimental
                                  </span>
                                </EuiComboBoxPill>
                                <AutosizeInput
                                  aria-controls=""
                                  className="euiComboBox__input"
                                  data-test-subj="comboBoxSearchInput"
                                  id="some_html_id"
                                  injectStyles={true}
                                  inputRef={[Function]}
                                  minWidth={1}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  role="textbox"
                                  style={
                                    Object {
                                      "fontSize": 14,
                                    }
                                  }
                                  value=""
                                >
                                  <div
                                    className="euiComboBox__input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                        "fontSize": 14,
                                      }
                                    }
                                  >
                                    <input
                                      aria-controls=""
                                      data-test-subj="comboBoxSearchInput"
                                      id="some_html_id"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      role="textbox"
                                      style={
                                        Object {
                                          "boxSizing": "content-box",
                                          "width": "2px",
                                        }
                                      }
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </div>
                              <EuiFormControlLayoutIcons
                                clear={
                                  Object {
                                    "data-test-subj": "comboBoxClearButton",
                                    "onClick": [Function],
                                  }
                                }
                                compressed={true}
                                icon={
                                  Object {
                                    "aria-label": "Open list of options",
                                    "data-test-subj": "comboBoxToggleListButton",
                                    "disabled": undefined,
                                    "onClick": [Function],
                                    "ref": [Function],
                                    "side": "right",
                                    "type": "arrowDown",
                                  }
                                }
                              >
                                <div
                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                >
                                  <EuiFormControlLayoutClearButton
                                    data-test-subj="comboBoxClearButton"
                                    onClick={[Function]}
                                    size="s"
                                  >
                                    <EuiI18n
                                      default="Clear input"
                                      token="euiFormControlLayoutClearButton.label"
                                    >
                                      <button
                                        aria-label="Clear input"
                                        className="euiFormControlLayoutClearButton euiFormControlLayoutClearButton--small"
                                        data-test-subj="comboBoxClearButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiIcon
                                          className="euiFormControlLayoutClearButton__icon"
                                          type="cross"
                                        >
                                          EuiIconMock
                                        </EuiIcon>
                                      </button>
                                    </EuiI18n>
                                  </EuiFormControlLayoutClearButton>
                                  <EuiFormControlLayoutCustomIcon
                                    aria-label="Open list of options"
                                    data-test-subj="comboBoxToggleListButton"
                                    iconRef={[Function]}
                                    onClick={[Function]}
                                    size="s"
                                    type="arrowDown"
                                  >
                                    <button
                                      aria-label="Open list of options"
                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                      data-test-subj="comboBoxToggleListButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <EuiIcon
                                        aria-hidden="true"
                                        className="euiFormControlLayoutCustomIcon__icon"
                                        size="s"
                                        type="arrowDown"
                                      >
                                        EuiIconMock
                                      </EuiIcon>
                                    </button>
                                  </EuiFormControlLayoutCustomIcon>
                                </div>
                              </EuiFormControlLayoutIcons>
                            </div>
                          </div>
                        </EuiFormControlLayout>
                      </EuiComboBoxInput>
                    </div>
                  </EuiCompressedComboBox>
                </div>
              </div>
            </EuiCompressedFormRow>
            <EuiSpacer
              size="xxl"
            >
              <div
                className="euiSpacer euiSpacer--xxl"
              />
            </EuiSpacer>
            <EuiTitle>
              <EuiText
                className="euiTitle euiTitle--medium"
              >
                <div
                  className="euiText euiText--medium euiTitle euiTitle--medium"
                >
                  <h2>
                    Detection
                  </h2>
                </div>
              </EuiText>
            </EuiTitle>
            <EuiText
              size="s"
            >
              <div
                className="euiText euiText--small"
              >
                <p>
                  Define the detection criteria for the rule
                </p>
              </div>
            </EuiText>
            <EuiSpacer>
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <DetectionVisualEditor
              detectionYml=""
              goToYamlEditor={[Function]}
              onChange={[Function]}
              setIsDetectionInvalid={[Function]}
            >
              <div
                className="detection-visual-editor"
                style={
                  Object {
                    "maxWidth": 1000,
                  }
                }
              >
                <div
                  key="detection-visual-editor-selection-0"
                >
                  <EuiPanel
                    className="detection-visual-editor-selection"
                    data-test-subj="detection-visual-editor-0"
                    key="detection-visual-editor-0"
                  >
                    <div
                      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow detection-visual-editor-selection"
                      data-test-subj="detection-visual-editor-0"
                    >
                      <EuiFlexGroup
                        alignItems="center"
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                        >
                          <EuiFlexItem
                            grow={true}
                          >
                            <div
                              className="euiFlexItem"
                            >
                              <EuiCompressedFormRow
                                describedByIds={Array []}
                                display="rowCompressed"
                                fullWidth={false}
                                hasChildLabel={true}
                                hasEmptyLabelSpace={false}
                                labelType="label"
                              >
                                <div
                                  className="euiFormRow euiFormRow--compressed"
                                  id="some_html_id-row"
                                >
                                  <div
                                    className="euiFormRow__fieldWrapper"
                                  >
                                    <EuiCompressedFieldText
                                      className="detection-visual-editor-name euiTitle--small"
                                      data-test-subj="selection_name"
                                      id="some_html_id"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      placeholder="Enter selection name"
                                      value="Selection_1"
                                    >
                                      <EuiFieldText
                                        className="detection-visual-editor-name euiTitle--small"
                                        compressed={true}
                                        data-test-subj="selection_name"
                                        id="some_html_id"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="Enter selection name"
                                        value="Selection_1"
                                      >
                                        <EuiFormControlLayout
                                          compressed={true}
                                          fullWidth={false}
                                          inputId="some_html_id"
                                        >
                                          <div
                                            className="euiFormControlLayout euiFormControlLayout--compressed"
                                          >
                                            <div
                                              className="euiFormControlLayout__childrenWrapper"
                                            >
                                              <EuiValidatableControl>
                                                <input
                                                  className="euiFieldText detection-visual-editor-name euiTitle--small euiFieldText--compressed"
                                                  data-test-subj="selection_name"
                                                  id="some_html_id"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  placeholder="Enter selection name"
                                                  type="text"
                                                  value="Selection_1"
                                                />
                                              </EuiValidatableControl>
                                              <EuiFormControlLayoutIcons
                                                compressed={true}
                                              />
                                            </div>
                                          </div>
                                        </EuiFormControlLayout>
                                      </EuiFieldText>
                                    </EuiCompressedFieldText>
                                  </div>
                                </div>
                              </EuiCompressedFormRow>
                              <EuiText
                                size="s"
                              >
                                <div
                                  className="euiText euiText--small"
                                >
                                  <p>
                                    Define the search identifier in your data the rule will be applied to.
                                  </p>
                                </div>
                              </EuiText>
                            </div>
                          </EuiFlexItem>
                          <EuiFlexItem
                            className="detection-visual-editor-delete-selection"
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero detection-visual-editor-delete-selection"
                            />
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                      <EuiSpacer>
                        <div
                          className="euiSpacer euiSpacer--l"
                        />
                      </EuiSpacer>
                      <div
                        className="detection-visual-editor-accordion-wrapper"
                        key="Map-0"
                      >
                        <EuiAccordion
                          arrowDisplay="left"
                          buttonContent={
                            <EuiText
                              size="m"
                            >
                              Map 
                              1
                            </EuiText>
                          }
                          className="euiAccordionForm detection-visual-editor-accordion"
                          data-test-subj="Map-0"
                          extraAction={null}
                          id="Map-0"
                          initialIsOpen={true}
                          isLoading={false}
                          isLoadingMessage={false}
                          key="Map-0"
                          paddingSize="m"
                          style={
                            Object {
                              "maxWidth": "70%",
                            }
                          }
                        >
                          <div
                            className="euiAccordion euiAccordion-isOpen euiAccordionForm detection-visual-editor-accordion"
                            data-test-subj="Map-0"
                            style={
                              Object {
                                "maxWidth": "70%",
                              }
                            }
                          >
                            <div
                              className="euiAccordion__triggerWrapper"
                            >
                              <button
                                aria-controls="Map-0"
                                aria-expanded={true}
                                className="euiAccordion__button"
                                id="some_html_id"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="euiAccordion__iconWrapper"
                                >
                                  <EuiIcon
                                    className="euiAccordion__icon euiAccordion__icon-isOpen"
                                    size="m"
                                    type="arrowRight"
                                  >
                                    EuiIconMock
                                  </EuiIcon>
                                </span>
                                <span
                                  className="euiIEFlexWrapFix"
                                >
                                  <EuiText
                                    size="m"
                                  >
                                    <div
                                      className="euiText euiText--medium"
                                    >
                                      Map 
                                      1
                                    </div>
                                  </EuiText>
                                </span>
                              </button>
                            </div>
                            <div
                              aria-labelledby="some_html_id"
                              className="euiAccordion__childWrapper"
                              id="Map-0"
                              role="region"
                              tabIndex={-1}
                            >
                              <EuiResizeObserver
                                onResize={[Function]}
                              >
                                <div>
                                  <div
                                    className="euiAccordion__padding--m"
                                  >
                                    <EuiFlexGroup>
                                      <div
                                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                                      >
                                        <EuiFlexItem
                                          grow={false}
                                          style={
                                            Object {
                                              "minWidth": 200,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFlexItem euiFlexItem--flexGrowZero"
                                            style={
                                              Object {
                                                "minWidth": 200,
                                              }
                                            }
                                          >
                                            <EuiCompressedFormRow
                                              describedByIds={Array []}
                                              display="rowCompressed"
                                              fullWidth={false}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              label={
                                                <EuiText
                                                  size="s"
                                                >
                                                  Key
                                                </EuiText>
                                              }
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow euiFormRow--compressed"
                                                id="some_html_id-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    className="euiFormRow__label"
                                                    htmlFor="some_html_id"
                                                    isFocused={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="some_html_id"
                                                    >
                                                      <EuiText
                                                        size="s"
                                                      >
                                                        <div
                                                          className="euiText euiText--small"
                                                        >
                                                          Key
                                                        </div>
                                                      </EuiText>
                                                    </label>
                                                  </EuiFormLabel>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <EuiCompressedFieldText
                                                    data-test-subj="selection_field_key_name"
                                                    id="some_html_id"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Enter key name"
                                                    value=""
                                                  >
                                                    <EuiFieldText
                                                      compressed={true}
                                                      data-test-subj="selection_field_key_name"
                                                      id="some_html_id"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder="Enter key name"
                                                      value=""
                                                    >
                                                      <EuiFormControlLayout
                                                        compressed={true}
                                                        fullWidth={false}
                                                        inputId="some_html_id"
                                                      >
                                                        <div
                                                          className="euiFormControlLayout euiFormControlLayout--compressed"
                                                        >
                                                          <div
                                                            className="euiFormControlLayout__childrenWrapper"
                                                          >
                                                            <EuiValidatableControl>
                                                              <input
                                                                className="euiFieldText euiFieldText--compressed"
                                                                data-test-subj="selection_field_key_name"
                                                                id="some_html_id"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                placeholder="Enter key name"
                                                                type="text"
                                                                value=""
                                                              />
                                                            </EuiValidatableControl>
                                                            <EuiFormControlLayoutIcons
                                                              compressed={true}
                                                            />
                                                          </div>
                                                        </div>
                                                      </EuiFormControlLayout>
                                                    </EuiFieldText>
                                                  </EuiCompressedFieldText>
                                                </div>
                                              </div>
                                            </EuiCompressedFormRow>
                                          </div>
                                        </EuiFlexItem>
                                        <EuiFlexItem
                                          grow={false}
                                          style={
                                            Object {
                                              "minWidth": 200,
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFlexItem euiFlexItem--flexGrowZero"
                                            style={
                                              Object {
                                                "minWidth": 200,
                                              }
                                            }
                                          >
                                            <EuiCompressedFormRow
                                              describedByIds={Array []}
                                              display="rowCompressed"
                                              fullWidth={false}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              label={
                                                <EuiText
                                                  size="s"
                                                >
                                                  Modifier
                                                </EuiText>
                                              }
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow euiFormRow--compressed"
                                                id="some_html_id-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    className="euiFormRow__label"
                                                    htmlFor="some_html_id"
                                                    isFocused={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="some_html_id"
                                                    >
                                                      <EuiText
                                                        size="s"
                                                      >
                                                        <div
                                                          className="euiText euiText--small"
                                                        >
                                                          Modifier
                                                        </div>
                                                      </EuiText>
                                                    </label>
                                                  </EuiFormLabel>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <EuiCompressedComboBox
                                                    async={false}
                                                    compressed={true}
                                                    data-test-subj="modifier_dropdown"
                                                    fullWidth={false}
                                                    id="some_html_id"
                                                    isClearable={true}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "label": "all",
                                                          "value": "all",
                                                        },
                                                        Object {
                                                          "label": "contains",
                                                          "value": "contains",
                                                        },
                                                        Object {
                                                          "label": "base64",
                                                          "value": "base64",
                                                        },
                                                        Object {
                                                          "label": "endswith",
                                                          "value": "endswith",
                                                        },
                                                        Object {
                                                          "label": "startswith",
                                                          "value": "startswith",
                                                        },
                                                        Object {
                                                          "label": "cidr",
                                                          "value": "cidr",
                                                        },
                                                      ]
                                                    }
                                                    selectedOptions={
                                                      Array [
                                                        Object {
                                                          "label": "all",
                                                          "value": "all",
                                                        },
                                                      ]
                                                    }
                                                    singleSelection={
                                                      Object {
                                                        "asPlainText": true,
                                                      }
                                                    }
                                                    sortMatchesBy="none"
                                                  >
                                                    <div
                                                      aria-expanded={false}
                                                      aria-haspopup="listbox"
                                                      className="euiComboBox euiComboBox--compressed"
                                                      data-test-subj="modifier_dropdown"
                                                      onKeyDown={[Function]}
                                                      role="combobox"
                                                    >
                                                      <EuiComboBoxInput
                                                        autoSizeInputRef={[Function]}
                                                        compressed={true}
                                                        fullWidth={false}
                                                        hasSelectedOptions={true}
                                                        id="some_html_id"
                                                        inputRef={[Function]}
                                                        isListOpen={false}
                                                        noIcon={false}
                                                        onChange={[Function]}
                                                        onClear={[Function]}
                                                        onClick={[Function]}
                                                        onCloseListClick={[Function]}
                                                        onFocus={[Function]}
                                                        onOpenListClick={[Function]}
                                                        onRemoveOption={[Function]}
                                                        rootId={[Function]}
                                                        searchValue=""
                                                        selectedOptions={
                                                          Array [
                                                            Object {
                                                              "label": "all",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                        singleSelection={
                                                          Object {
                                                            "asPlainText": true,
                                                          }
                                                        }
                                                        toggleButtonRef={[Function]}
                                                        updatePosition={[Function]}
                                                        value="all"
                                                      >
                                                        <EuiFormControlLayout
                                                          clear={
                                                            Object {
                                                              "data-test-subj": "comboBoxClearButton",
                                                              "onClick": [Function],
                                                            }
                                                          }
                                                          compressed={true}
                                                          fullWidth={false}
                                                          icon={
                                                            Object {
                                                              "aria-label": "Open list of options",
                                                              "data-test-subj": "comboBoxToggleListButton",
                                                              "disabled": undefined,
                                                              "onClick": [Function],
                                                              "ref": [Function],
                                                              "side": "right",
                                                              "type": "arrowDown",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="euiFormControlLayout euiFormControlLayout--compressed"
                                                          >
                                                            <div
                                                              className="euiFormControlLayout__childrenWrapper"
                                                            >
                                                              <div
                                                                className="euiComboBox__inputWrap euiComboBox__inputWrap--compressed euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                                                data-test-subj="comboBoxInput"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                              >
                                                                <EuiComboBoxPill
                                                                  asPlainText={true}
                                                                  color="hollow"
                                                                  key="all"
                                                                  option={
                                                                    Object {
                                                                      "label": "all",
                                                                      "value": "all",
                                                                    }
                                                                  }
                                                                  value="all"
                                                                >
                                                                  <span
                                                                    className="euiComboBoxPill euiComboBoxPill--plainText"
                                                                    value="all"
                                                                  >
                                                                    all
                                                                  </span>
                                                                </EuiComboBoxPill>
                                                                <AutosizeInput
                                                                  aria-controls=""
                                                                  className="euiComboBox__input"
                                                                  data-test-subj="comboBoxSearchInput"
                                                                  id="some_html_id"
                                                                  injectStyles={true}
                                                                  inputRef={[Function]}
                                                                  minWidth={1}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  role="textbox"
                                                                  style={
                                                                    Object {
                                                                      "fontSize": 14,
                                                                    }
                                                                  }
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="euiComboBox__input"
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                        "fontSize": 14,
                                                                      }
                                                                    }
                                                                  >
                                                                    <input
                                                                      aria-controls=""
                                                                      data-test-subj="comboBoxSearchInput"
                                                                      id="some_html_id"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      role="textbox"
                                                                      style={
                                                                        Object {
                                                                          "boxSizing": "content-box",
                                                                          "width": "2px",
                                                                        }
                                                                      }
                                                                      value=""
                                                                    />
                                                                    <div
                                                                      style={
                                                                        Object {
                                                                          "height": 0,
                                                                          "left": 0,
                                                                          "overflow": "scroll",
                                                                          "position": "absolute",
                                                                          "top": 0,
                                                                          "visibility": "hidden",
                                                                          "whiteSpace": "pre",
                                                                        }
                                                                      }
                                                                    />
                                                                  </div>
                                                                </AutosizeInput>
                                                              </div>
                                                              <EuiFormControlLayoutIcons
                                                                clear={
                                                                  Object {
                                                                    "data-test-subj": "comboBoxClearButton",
                                                                    "onClick": [Function],
                                                                  }
                                                                }
                                                                compressed={true}
                                                                icon={
                                                                  Object {
                                                                    "aria-label": "Open list of options",
                                                                    "data-test-subj": "comboBoxToggleListButton",
                                                                    "disabled": undefined,
                                                                    "onClick": [Function],
                                                                    "ref": [Function],
                                                                    "side": "right",
                                                                    "type": "arrowDown",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                >
                                                                  <EuiFormControlLayoutClearButton
                                                                    data-test-subj="comboBoxClearButton"
                                                                    onClick={[Function]}
                                                                    size="s"
                                                                  >
                                                                    <EuiI18n
                                                                      default="Clear input"
                                                                      token="euiFormControlLayoutClearButton.label"
                                                                    >
                                                                      <button
                                                                        aria-label="Clear input"
                                                                        className="euiFormControlLayoutClearButton euiFormControlLayoutClearButton--small"
                                                                        data-test-subj="comboBoxClearButton"
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <EuiIcon
                                                                          className="euiFormControlLayoutClearButton__icon"
                                                                          type="cross"
                                                                        >
                                                                          EuiIconMock
                                                                        </EuiIcon>
                                                                      </button>
                                                                    </EuiI18n>
                                                                  </EuiFormControlLayoutClearButton>
                                                                  <EuiFormControlLayoutCustomIcon
                                                                    aria-label="Open list of options"
                                                                    data-test-subj="comboBoxToggleListButton"
                                                                    iconRef={[Function]}
                                                                    onClick={[Function]}
                                                                    size="s"
                                                                    type="arrowDown"
                                                                  >
                                                                    <button
                                                                      aria-label="Open list of options"
                                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                      data-test-subj="comboBoxToggleListButton"
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      <EuiIcon
                                                                        aria-hidden="true"
                                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                                        size="s"
                                                                        type="arrowDown"
                                                                      >
                                                                        EuiIconMock
                                                                      </EuiIcon>
                                                                    </button>
                                                                  </EuiFormControlLayoutCustomIcon>
                                                                </div>
                                                              </EuiFormControlLayoutIcons>
                                                            </div>
                                                          </div>
                                                        </EuiFormControlLayout>
                                                      </EuiComboBoxInput>
                                                    </div>
                                                  </EuiCompressedComboBox>
                                                </div>
                                              </div>
                                            </EuiCompressedFormRow>
                                          </div>
                                        </EuiFlexItem>
                                      </div>
                                    </EuiFlexGroup>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                    <EuiCompressedRadioGroup
                                      idSelected="selection-map-value-0-0"
                                      onChange={[Function]}
                                      options={
                                        Array [
                                          Object {
                                            "id": "selection-map-value-0-0",
                                            "label": "Value",
                                          },
                                          Object {
                                            "id": "selection-map-list-0-0",
                                            "label": "List",
                                          },
                                        ]
                                      }
                                    >
                                      <EuiRadioGroup
                                        compressed={true}
                                        idSelected="selection-map-value-0-0"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "id": "selection-map-value-0-0",
                                              "label": "Value",
                                            },
                                            Object {
                                              "id": "selection-map-list-0-0",
                                              "label": "List",
                                            },
                                          ]
                                        }
                                      >
                                        <div>
                                          <EuiRadio
                                            checked={true}
                                            className="euiRadioGroup__item"
                                            compressed={true}
                                            id="selection-map-value-0-0"
                                            key="0"
                                            label="Value"
                                            onChange={[Function]}
                                          >
                                            <div
                                              className="euiRadio euiRadio--compressed euiRadioGroup__item"
                                            >
                                              <input
                                                checked={true}
                                                className="euiRadio__input"
                                                id="selection-map-value-0-0"
                                                onChange={[Function]}
                                                type="radio"
                                              />
                                              <div
                                                className="euiRadio__circle"
                                              />
                                              <label
                                                className="euiRadio__label"
                                                htmlFor="selection-map-value-0-0"
                                              >
                                                Value
                                              </label>
                                            </div>
                                          </EuiRadio>
                                          <EuiRadio
                                            checked={false}
                                            className="euiRadioGroup__item"
                                            compressed={true}
                                            id="selection-map-list-0-0"
                                            key="1"
                                            label="List"
                                            onChange={[Function]}
                                          >
                                            <div
                                              className="euiRadio euiRadio--compressed euiRadioGroup__item"
                                            >
                                              <input
                                                checked={false}
                                                className="euiRadio__input"
                                                id="selection-map-list-0-0"
                                                onChange={[Function]}
                                                type="radio"
                                              />
                                              <div
                                                className="euiRadio__circle"
                                              />
                                              <label
                                                className="euiRadio__label"
                                                htmlFor="selection-map-list-0-0"
                                              >
                                                List
                                              </label>
                                            </div>
                                          </EuiRadio>
                                        </div>
                                      </EuiRadioGroup>
                                    </EuiCompressedRadioGroup>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                    <EuiCompressedFormRow
                                      describedByIds={Array []}
                                      display="rowCompressed"
                                      fullWidth={false}
                                      hasChildLabel={true}
                                      hasEmptyLabelSpace={false}
                                      labelType="label"
                                    >
                                      <div
                                        className="euiFormRow euiFormRow--compressed"
                                        id="some_html_id-row"
                                      >
                                        <div
                                          className="euiFormRow__fieldWrapper"
                                        >
                                          <EuiCompressedFieldText
                                            data-test-subj="selection_field_value"
                                            id="some_html_id"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            placeholder="Value"
                                            value=""
                                          >
                                            <EuiFieldText
                                              compressed={true}
                                              data-test-subj="selection_field_value"
                                              id="some_html_id"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="Value"
                                              value=""
                                            >
                                              <EuiFormControlLayout
                                                compressed={true}
                                                fullWidth={false}
                                                inputId="some_html_id"
                                              >
                                                <div
                                                  className="euiFormControlLayout euiFormControlLayout--compressed"
                                                >
                                                  <div
                                                    className="euiFormControlLayout__childrenWrapper"
                                                  >
                                                    <EuiValidatableControl>
                                                      <input
                                                        className="euiFieldText euiFieldText--compressed"
                                                        data-test-subj="selection_field_value"
                                                        id="some_html_id"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Value"
                                                        type="text"
                                                        value=""
                                                      />
                                                    </EuiValidatableControl>
                                                    <EuiFormControlLayoutIcons
                                                      compressed={true}
                                                    />
                                                  </div>
                                                </div>
                                              </EuiFormControlLayout>
                                            </EuiFieldText>
                                          </EuiCompressedFieldText>
                                        </div>
                                      </div>
                                    </EuiCompressedFormRow>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                  </div>
                                </div>
                              </EuiResizeObserver>
                            </div>
                          </div>
                        </EuiAccordion>
                      </div>
                      <EuiSpacer
                        size="m"
                      >
                        <div
                          className="euiSpacer euiSpacer--m"
                        />
                      </EuiSpacer>
                      <EuiSmallButton
                        disabled={true}
                        iconType="plusInCircle"
                        onClick={[Function]}
                        style={
                          Object {
                            "width": "70%",
                          }
                        }
                      >
                        <EuiButton
                          disabled={true}
                          iconType="plusInCircle"
                          onClick={[Function]}
                          size="s"
                          style={
                            Object {
                              "width": "70%",
                            }
                          }
                        >
                          <EuiButtonDisplay
                            baseClassName="euiButton"
                            disabled={true}
                            element="button"
                            iconType="plusInCircle"
                            isDisabled={true}
                            onClick={[Function]}
                            size="s"
                            style={
                              Object {
                                "width": "70%",
                              }
                            }
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "minWidth": undefined,
                                  "width": "70%",
                                }
                              }
                              type="button"
                            >
                              <EuiButtonContent
                                className="euiButton__content"
                                iconGap="m"
                                iconSide="left"
                                iconType="plusInCircle"
                                textProps={
                                  Object {
                                    "className": "euiButton__text",
                                  }
                                }
                              >
                                <span
                                  className="euiButtonContent euiButton__content"
                                >
                                  <EuiIcon
                                    className="euiButtonContent__icon"
                                    color="inherit"
                                    size="m"
                                    type="plusInCircle"
                                  >
                                    EuiIconMock
                                  </EuiIcon>
                                  <span
                                    className="euiButton__text"
                                  >
                                    Add map
                                  </span>
                                </span>
                              </EuiButtonContent>
                            </button>
                          </EuiButtonDisplay>
                        </EuiButton>
                      </EuiSmallButton>
                    </div>
                  </EuiPanel>
                </div>
                <EuiSpacer
                  size="m"
                >
                  <div
                    className="euiSpacer euiSpacer--m"
                  />
                </EuiSpacer>
                <EuiSmallButton
                  fullWidth={true}
                  iconType="plusInCircle"
                  onClick={[Function]}
                >
                  <EuiButton
                    fullWidth={true}
                    iconType="plusInCircle"
                    onClick={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      fullWidth={true}
                      iconType="plusInCircle"
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--small euiButton--fullWidth"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          iconType="plusInCircle"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <EuiIcon
                              className="euiButtonContent__icon"
                              color="inherit"
                              size="m"
                              type="plusInCircle"
                            >
                              EuiIconMock
                            </EuiIcon>
                            <span
                              className="euiButton__text"
                            >
                              Add selection
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </EuiSmallButton>
                <EuiSpacer>
                  <div
                    className="euiSpacer euiSpacer--l"
                  />
                </EuiSpacer>
                <EuiCompressedFormRow
                  describedByIds={Array []}
                  display="rowCompressed"
                  fullWidth={false}
                  hasChildLabel={true}
                  hasEmptyLabelSpace={false}
                  label={
                    <React.Fragment>
                      <EuiTitle
                        size="s"
                      >
                        <p>
                          Condition
                        </p>
                      </EuiTitle>
                      <EuiText
                        size="xs"
                      >
                        Define how each selection should be included in the final query. For more options use
                         
                        <EuiSmallButtonEmpty
                          className="empty-text-button"
                          onClick={[Function]}
                        >
                          <EuiText
                            size="s"
                          >
                            YAML editor
                          </EuiText>
                        </EuiSmallButtonEmpty>
                        .
                      </EuiText>
                    </React.Fragment>
                  }
                  labelType="label"
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <div
                    className="euiFormRow euiFormRow--compressed"
                    id="some_html_id-row"
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <div
                      className="euiFormRow__labelWrapper"
                    >
                      <EuiFormLabel
                        className="euiFormRow__label"
                        htmlFor="some_html_id"
                        isFocused={false}
                        type="label"
                      >
                        <label
                          className="euiFormLabel euiFormRow__label"
                          htmlFor="some_html_id"
                        >
                          <EuiTitle
                            size="s"
                          >
                            <p
                              className="euiTitle euiTitle--small"
                            >
                              Condition
                            </p>
                          </EuiTitle>
                          <EuiText
                            size="xs"
                          >
                            <div
                              className="euiText euiText--extraSmall"
                            >
                              Define how each selection should be included in the final query. For more options use
                               
                              <EuiSmallButtonEmpty
                                className="empty-text-button"
                                onClick={[Function]}
                              >
                                <EuiButtonEmpty
                                  className="empty-text-button"
                                  onClick={[Function]}
                                  size="s"
                                >
                                  <button
                                    className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small empty-text-button"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <EuiButtonContent
                                      className="euiButtonEmpty__content"
                                      iconGap="m"
                                      iconSide="left"
                                      iconSize="m"
                                      textProps={
                                        Object {
                                          "className": "euiButtonEmpty__text",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiButtonContent euiButtonEmpty__content"
                                      >
                                        <span
                                          className="euiButtonEmpty__text"
                                        >
                                          <EuiText
                                            size="s"
                                          >
                                            <div
                                              className="euiText euiText--small"
                                            >
                                              YAML editor
                                            </div>
                                          </EuiText>
                                        </span>
                                      </span>
                                    </EuiButtonContent>
                                  </button>
                                </EuiButtonEmpty>
                              </EuiSmallButtonEmpty>
                              .
                            </div>
                          </EuiText>
                        </label>
                      </EuiFormLabel>
                    </div>
                    <div
                      className="euiFormRow__fieldWrapper"
                    >
                      <EuiCodeEditor
                        data-test-subj="rule_detection_field"
                        height="50px"
                        id="some_html_id"
                        mode="yaml"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        setOptions={Object {}}
                        value="Selection_1"
                        width="600px"
                      >
                        <div
                          className="euiCodeEditorWrapper"
                          data-test-subj="rule_detection_field"
                          style={
                            Object {
                              "height": "50px",
                              "width": "600px",
                            }
                          }
                        >
                          <button
                            className="euiCodeEditorKeyboardHint"
                            data-test-subj="codeEditorHint"
                            id="some_html_id"
                            onClick={[Function]}
                          >
                            <p
                              className="euiText"
                            >
                              <EuiI18n
                                default="Press Enter to start editing."
                                token="euiCodeEditor.startEditing"
                              >
                                Press Enter to start editing.
                              </EuiI18n>
                            </p>
                            <p
                              className="euiText"
                            >
                              <EuiI18n
                                default="When you're done, press Escape to stop editing."
                                token="euiCodeEditor.stopEditing"
                              >
                                When you're done, press Escape to stop editing.
                              </EuiI18n>
                            </p>
                          </button>
                          <ReactAce
                            commands={
                              Array [
                                Object {
                                  "bindKey": Object {
                                    "mac": "Esc",
                                    "win": "Esc",
                                  },
                                  "exec": [Function],
                                  "name": "stopEditingOnEsc",
                                },
                              ]
                            }
                            cursorStart={1}
                            editorProps={
                              Object {
                                "$blockScrolling": Infinity,
                              }
                            }
                            enableBasicAutocompletion={false}
                            enableLiveAutocompletion={false}
                            enableSnippets={false}
                            focus={false}
                            fontSize={12}
                            height="50px"
                            highlightActiveLine={true}
                            id="some_html_id"
                            maxLines={null}
                            minLines={null}
                            mode="yaml"
                            name="some_html_id"
                            navigateToFileEnd={true}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onLoad={null}
                            onPaste={null}
                            onScroll={null}
                            placeholder={null}
                            readOnly={false}
                            scrollMargin={
                              Array [
                                0,
                                0,
                                0,
                                0,
                              ]
                            }
                            setOptions={Object {}}
                            showGutter={true}
                            showPrintMargin={true}
                            style={Object {}}
                            tabSize={4}
                            theme="textmate"
                            value="Selection_1"
                            width="600px"
                            wrapEnabled={false}
                          >
                            <div
                              id="some_html_id"
                              style={
                                Object {
                                  "height": "50px",
                                  "width": "600px",
                                }
                              }
                            />
                          </ReactAce>
                        </div>
                      </EuiCodeEditor>
                    </div>
                  </div>
                </EuiCompressedFormRow>
              </div>
            </DetectionVisualEditor>
            <EuiSpacer
              size="xl"
            >
              <div
                className="euiSpacer euiSpacer--xl"
              />
            </EuiSpacer>
            <div
              style={
                Object {
                  "maxWidth": 1000,
                }
              }
            >
              <EuiAccordion
                arrowDisplay="left"
                buttonContent={
                  <React.Fragment>
                    Additional details 
                    <i>
                      - optional
                    </i>
                  </React.Fragment>
                }
                id="additional-details"
                initialIsOpen={true}
                isLoading={false}
                isLoadingMessage={false}
                paddingSize="l"
              >
                <div
                  className="euiAccordion euiAccordion-isOpen"
                >
                  <div
                    className="euiAccordion__triggerWrapper"
                  >
                    <button
                      aria-controls="additional-details"
                      aria-expanded={true}
                      className="euiAccordion__button"
                      id="some_html_id"
                      onClick={[Function]}
                      type="button"
                    >
                      <span
                        className="euiAccordion__iconWrapper"
                      >
                        <EuiIcon
                          className="euiAccordion__icon euiAccordion__icon-isOpen"
                          size="m"
                          type="arrowRight"
                        >
                          EuiIconMock
                        </EuiIcon>
                      </span>
                      <span
                        className="euiIEFlexWrapFix"
                      >
                        Additional details 
                        <i>
                          - optional
                        </i>
                      </span>
                    </button>
                  </div>
                  <div
                    aria-labelledby="some_html_id"
                    className="euiAccordion__childWrapper"
                    id="additional-details"
                    role="region"
                    tabIndex={-1}
                  >
                    <EuiResizeObserver
                      onResize={[Function]}
                    >
                      <div>
                        <div
                          className="euiAccordion__padding--l"
                        >
                          <div
                            className="rule-editor-form-additional-details-panel-body"
                          >
                            <FieldTextArray
                              addButtonName="Add tag"
                              data-test-subj="rule_tags_field"
                              fields={Array []}
                              label={
                                <React.Fragment>
                                  <EuiText
                                    size="m"
                                  >
                                    <strong>
                                      Tags 
                                    </strong>
                                    <i>
                                      - optional
                                    </i>
                                  </EuiText>
                                  <EuiSpacer
                                    size="m"
                                  />
                                  <EuiText
                                    size="xs"
                                  >
                                    <strong>
                                      Tag
                                    </strong>
                                  </EuiText>
                                </React.Fragment>
                              }
                              name="tags"
                              onChange={[Function]}
                              placeholder="tag"
                            >
                              <EuiCompressedFormRow
                                describedByIds={Array []}
                                display="rowCompressed"
                                error=""
                                fullWidth={false}
                                hasChildLabel={true}
                                hasEmptyLabelSpace={false}
                                label={
                                  <React.Fragment>
                                    <EuiText
                                      size="m"
                                    >
                                      <strong>
                                        Tags 
                                      </strong>
                                      <i>
                                        - optional
                                      </i>
                                    </EuiText>
                                    <EuiSpacer
                                      size="m"
                                    />
                                    <EuiText
                                      size="xs"
                                    >
                                      <strong>
                                        Tag
                                      </strong>
                                    </EuiText>
                                  </React.Fragment>
                                }
                                labelType="label"
                              >
                                <div
                                  className="euiFormRow euiFormRow--compressed"
                                  id="some_html_id-row"
                                >
                                  <div
                                    className="euiFormRow__labelWrapper"
                                  >
                                    <EuiFormLabel
                                      className="euiFormRow__label"
                                      htmlFor="some_html_id"
                                      isFocused={false}
                                      type="label"
                                    >
                                      <label
                                        className="euiFormLabel euiFormRow__label"
                                        htmlFor="some_html_id"
                                      >
                                        <EuiText
                                          size="m"
                                        >
                                          <div
                                            className="euiText euiText--medium"
                                          >
                                            <strong>
                                              Tags 
                                            </strong>
                                            <i>
                                              - optional
                                            </i>
                                          </div>
                                        </EuiText>
                                        <EuiSpacer
                                          size="m"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--m"
                                          />
                                        </EuiSpacer>
                                        <EuiText
                                          size="xs"
                                        >
                                          <div
                                            className="euiText euiText--extraSmall"
                                          >
                                            <strong>
                                              Tag
                                            </strong>
                                          </div>
                                        </EuiText>
                                      </label>
                                    </EuiFormLabel>
                                  </div>
                                  <div
                                    className="euiFormRow__fieldWrapper"
                                  >
                                    <EuiFlexGroup
                                      key="0"
                                    >
                                      <div
                                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                                      >
                                        <EuiFlexItem
                                          style={
                                            Object {
                                              "minWidth": "100%",
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFlexItem"
                                            style={
                                              Object {
                                                "minWidth": "100%",
                                              }
                                            }
                                          >
                                            <EuiCompressedFieldText
                                              data-test-subj="rule_tags_field_0"
                                              name="tags"
                                              onChange={[Function]}
                                              placeholder="tag"
                                              value=""
                                            >
                                              <EuiFieldText
                                                compressed={true}
                                                data-test-subj="rule_tags_field_0"
                                                name="tags"
                                                onChange={[Function]}
                                                placeholder="tag"
                                                value=""
                                              >
                                                <EuiFormControlLayout
                                                  compressed={true}
                                                  fullWidth={false}
                                                >
                                                  <div
                                                    className="euiFormControlLayout euiFormControlLayout--compressed"
                                                  >
                                                    <div
                                                      className="euiFormControlLayout__childrenWrapper"
                                                    >
                                                      <EuiValidatableControl>
                                                        <input
                                                          className="euiFieldText euiFieldText--compressed"
                                                          data-test-subj="rule_tags_field_0"
                                                          name="tags"
                                                          onChange={[Function]}
                                                          placeholder="tag"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </EuiValidatableControl>
                                                      <EuiFormControlLayoutIcons
                                                        compressed={true}
                                                      />
                                                    </div>
                                                  </div>
                                                </EuiFormControlLayout>
                                              </EuiFieldText>
                                            </EuiCompressedFieldText>
                                          </div>
                                        </EuiFlexItem>
                                      </div>
                                    </EuiFlexGroup>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                    <EuiSmallButton
                                      className="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <EuiButton
                                        className="secondary"
                                        onClick={[Function]}
                                        size="s"
                                        type="button"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButton"
                                          className="secondary"
                                          disabled={false}
                                          element="button"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          type="button"
                                        >
                                          <button
                                            className="euiButton euiButton--primary euiButton--small secondary"
                                            disabled={false}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                            type="button"
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text"
                                                >
                                                  Add tag
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </button>
                                        </EuiButtonDisplay>
                                      </EuiButton>
                                    </EuiSmallButton>
                                  </div>
                                </div>
                              </EuiCompressedFormRow>
                              <EuiSpacer>
                                <div
                                  className="euiSpacer euiSpacer--l"
                                />
                              </EuiSpacer>
                            </FieldTextArray>
                            <FieldTextArray
                              addButtonName="Add URL"
                              data-test-subj="rule_references_field"
                              fields={Array []}
                              label={
                                <React.Fragment>
                                  <EuiText
                                    size="m"
                                  >
                                    <strong>
                                      References 
                                    </strong>
                                    <i>
                                      - optional
                                    </i>
                                  </EuiText>
                                  <EuiSpacer
                                    size="m"
                                  />
                                  <EuiText
                                    size="xs"
                                  >
                                    <strong>
                                      URL
                                    </strong>
                                  </EuiText>
                                </React.Fragment>
                              }
                              name="references"
                              onChange={[Function]}
                              placeholder="http://"
                            >
                              <EuiCompressedFormRow
                                describedByIds={Array []}
                                display="rowCompressed"
                                error=""
                                fullWidth={false}
                                hasChildLabel={true}
                                hasEmptyLabelSpace={false}
                                label={
                                  <React.Fragment>
                                    <EuiText
                                      size="m"
                                    >
                                      <strong>
                                        References 
                                      </strong>
                                      <i>
                                        - optional
                                      </i>
                                    </EuiText>
                                    <EuiSpacer
                                      size="m"
                                    />
                                    <EuiText
                                      size="xs"
                                    >
                                      <strong>
                                        URL
                                      </strong>
                                    </EuiText>
                                  </React.Fragment>
                                }
                                labelType="label"
                              >
                                <div
                                  className="euiFormRow euiFormRow--compressed"
                                  id="some_html_id-row"
                                >
                                  <div
                                    className="euiFormRow__labelWrapper"
                                  >
                                    <EuiFormLabel
                                      className="euiFormRow__label"
                                      htmlFor="some_html_id"
                                      isFocused={false}
                                      type="label"
                                    >
                                      <label
                                        className="euiFormLabel euiFormRow__label"
                                        htmlFor="some_html_id"
                                      >
                                        <EuiText
                                          size="m"
                                        >
                                          <div
                                            className="euiText euiText--medium"
                                          >
                                            <strong>
                                              References 
                                            </strong>
                                            <i>
                                              - optional
                                            </i>
                                          </div>
                                        </EuiText>
                                        <EuiSpacer
                                          size="m"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--m"
                                          />
                                        </EuiSpacer>
                                        <EuiText
                                          size="xs"
                                        >
                                          <div
                                            className="euiText euiText--extraSmall"
                                          >
                                            <strong>
                                              URL
                                            </strong>
                                          </div>
                                        </EuiText>
                                      </label>
                                    </EuiFormLabel>
                                  </div>
                                  <div
                                    className="euiFormRow__fieldWrapper"
                                  >
                                    <EuiFlexGroup
                                      key="0"
                                    >
                                      <div
                                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                                      >
                                        <EuiFlexItem
                                          style={
                                            Object {
                                              "minWidth": "100%",
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFlexItem"
                                            style={
                                              Object {
                                                "minWidth": "100%",
                                              }
                                            }
                                          >
                                            <EuiCompressedFieldText
                                              data-test-subj="rule_references_field_0"
                                              name="references"
                                              onChange={[Function]}
                                              placeholder="http://"
                                              value=""
                                            >
                                              <EuiFieldText
                                                compressed={true}
                                                data-test-subj="rule_references_field_0"
                                                name="references"
                                                onChange={[Function]}
                                                placeholder="http://"
                                                value=""
                                              >
                                                <EuiFormControlLayout
                                                  compressed={true}
                                                  fullWidth={false}
                                                >
                                                  <div
                                                    className="euiFormControlLayout euiFormControlLayout--compressed"
                                                  >
                                                    <div
                                                      className="euiFormControlLayout__childrenWrapper"
                                                    >
                                                      <EuiValidatableControl>
                                                        <input
                                                          className="euiFieldText euiFieldText--compressed"
                                                          data-test-subj="rule_references_field_0"
                                                          name="references"
                                                          onChange={[Function]}
                                                          placeholder="http://"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </EuiValidatableControl>
                                                      <EuiFormControlLayoutIcons
                                                        compressed={true}
                                                      />
                                                    </div>
                                                  </div>
                                                </EuiFormControlLayout>
                                              </EuiFieldText>
                                            </EuiCompressedFieldText>
                                          </div>
                                        </EuiFlexItem>
                                      </div>
                                    </EuiFlexGroup>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                    <EuiSmallButton
                                      className="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <EuiButton
                                        className="secondary"
                                        onClick={[Function]}
                                        size="s"
                                        type="button"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButton"
                                          className="secondary"
                                          disabled={false}
                                          element="button"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          type="button"
                                        >
                                          <button
                                            className="euiButton euiButton--primary euiButton--small secondary"
                                            disabled={false}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                            type="button"
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text"
                                                >
                                                  Add URL
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </button>
                                        </EuiButtonDisplay>
                                      </EuiButton>
                                    </EuiSmallButton>
                                  </div>
                                </div>
                              </EuiCompressedFormRow>
                              <EuiSpacer>
                                <div
                                  className="euiSpacer euiSpacer--l"
                                />
                              </EuiSpacer>
                            </FieldTextArray>
                            <FieldTextArray
                              addButtonName="Add false positive"
                              data-test-subj="rule_falsePositives_field"
                              fields={Array []}
                              label={
                                <React.Fragment>
                                  <EuiText
                                    size="m"
                                  >
                                    <strong>
                                      False positive cases 
                                    </strong>
                                    <i>
                                      - optional
                                    </i>
                                  </EuiText>
                                  <EuiSpacer
                                    size="m"
                                  />
                                  <EuiText
                                    size="xs"
                                  >
                                    <strong>
                                      Description
                                    </strong>
                                  </EuiText>
                                </React.Fragment>
                              }
                              name="false_positives"
                              onChange={[Function]}
                              placeholder="format?"
                            >
                              <EuiCompressedFormRow
                                describedByIds={Array []}
                                display="rowCompressed"
                                error=""
                                fullWidth={false}
                                hasChildLabel={true}
                                hasEmptyLabelSpace={false}
                                label={
                                  <React.Fragment>
                                    <EuiText
                                      size="m"
                                    >
                                      <strong>
                                        False positive cases 
                                      </strong>
                                      <i>
                                        - optional
                                      </i>
                                    </EuiText>
                                    <EuiSpacer
                                      size="m"
                                    />
                                    <EuiText
                                      size="xs"
                                    >
                                      <strong>
                                        Description
                                      </strong>
                                    </EuiText>
                                  </React.Fragment>
                                }
                                labelType="label"
                              >
                                <div
                                  className="euiFormRow euiFormRow--compressed"
                                  id="some_html_id-row"
                                >
                                  <div
                                    className="euiFormRow__labelWrapper"
                                  >
                                    <EuiFormLabel
                                      className="euiFormRow__label"
                                      htmlFor="some_html_id"
                                      isFocused={false}
                                      type="label"
                                    >
                                      <label
                                        className="euiFormLabel euiFormRow__label"
                                        htmlFor="some_html_id"
                                      >
                                        <EuiText
                                          size="m"
                                        >
                                          <div
                                            className="euiText euiText--medium"
                                          >
                                            <strong>
                                              False positive cases 
                                            </strong>
                                            <i>
                                              - optional
                                            </i>
                                          </div>
                                        </EuiText>
                                        <EuiSpacer
                                          size="m"
                                        >
                                          <div
                                            className="euiSpacer euiSpacer--m"
                                          />
                                        </EuiSpacer>
                                        <EuiText
                                          size="xs"
                                        >
                                          <div
                                            className="euiText euiText--extraSmall"
                                          >
                                            <strong>
                                              Description
                                            </strong>
                                          </div>
                                        </EuiText>
                                      </label>
                                    </EuiFormLabel>
                                  </div>
                                  <div
                                    className="euiFormRow__fieldWrapper"
                                  >
                                    <EuiFlexGroup
                                      key="0"
                                    >
                                      <div
                                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                                      >
                                        <EuiFlexItem
                                          style={
                                            Object {
                                              "minWidth": "100%",
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFlexItem"
                                            style={
                                              Object {
                                                "minWidth": "100%",
                                              }
                                            }
                                          >
                                            <EuiCompressedFieldText
                                              data-test-subj="rule_false_positives_field_0"
                                              name="false_positives"
                                              onChange={[Function]}
                                              placeholder="format?"
                                              value=""
                                            >
                                              <EuiFieldText
                                                compressed={true}
                                                data-test-subj="rule_false_positives_field_0"
                                                name="false_positives"
                                                onChange={[Function]}
                                                placeholder="format?"
                                                value=""
                                              >
                                                <EuiFormControlLayout
                                                  compressed={true}
                                                  fullWidth={false}
                                                >
                                                  <div
                                                    className="euiFormControlLayout euiFormControlLayout--compressed"
                                                  >
                                                    <div
                                                      className="euiFormControlLayout__childrenWrapper"
                                                    >
                                                      <EuiValidatableControl>
                                                        <input
                                                          className="euiFieldText euiFieldText--compressed"
                                                          data-test-subj="rule_false_positives_field_0"
                                                          name="false_positives"
                                                          onChange={[Function]}
                                                          placeholder="format?"
                                                          type="text"
                                                          value=""
                                                        />
                                                      </EuiValidatableControl>
                                                      <EuiFormControlLayoutIcons
                                                        compressed={true}
                                                      />
                                                    </div>
                                                  </div>
                                                </EuiFormControlLayout>
                                              </EuiFieldText>
                                            </EuiCompressedFieldText>
                                          </div>
                                        </EuiFlexItem>
                                      </div>
                                    </EuiFlexGroup>
                                    <EuiSpacer
                                      size="m"
                                    >
                                      <div
                                        className="euiSpacer euiSpacer--m"
                                      />
                                    </EuiSpacer>
                                    <EuiSmallButton
                                      className="secondary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <EuiButton
                                        className="secondary"
                                        onClick={[Function]}
                                        size="s"
                                        type="button"
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButton"
                                          className="secondary"
                                          disabled={false}
                                          element="button"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          size="s"
                                          type="button"
                                        >
                                          <button
                                            className="euiButton euiButton--primary euiButton--small secondary"
                                            disabled={false}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                            type="button"
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <span
                                                  className="euiButton__text"
                                                >
                                                  Add false positive
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </button>
                                        </EuiButtonDisplay>
                                      </EuiButton>
                                    </EuiSmallButton>
                                  </div>
                                </div>
                              </EuiCompressedFormRow>
                              <EuiSpacer>
                                <div
                                  className="euiSpacer euiSpacer--l"
                                />
                              </EuiSpacer>
                            </FieldTextArray>
                          </div>
                        </div>
                      </div>
                    </EuiResizeObserver>
                  </div>
                </div>
              </EuiAccordion>
            </div>
          </div>
        </EuiPanel>
        <EuiSpacer>
          <div
            className="euiSpacer euiSpacer--l"
          />
        </EuiSpacer>
        <EuiFlexGroup
          justifyContent="flexEnd"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiSmallButton
                  onClick={[Function]}
                >
                  <EuiButton
                    onClick={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      disabled={false}
                      element="button"
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--small"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text"
                            >
                              Cancel
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </EuiSmallButton>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiSmallButton
                  data-test-subj="submit_rule_form_button"
                  fill={true}
                  onClick={[Function]}
                >
                  <EuiButton
                    data-test-subj="submit_rule_form_button"
                    fill={true}
                    onClick={[Function]}
                    size="s"
                  >
                    <EuiButtonDisplay
                      baseClassName="euiButton"
                      data-test-subj="submit_rule_form_button"
                      disabled={false}
                      element="button"
                      fill={true}
                      isDisabled={false}
                      onClick={[Function]}
                      size="s"
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary euiButton--small euiButton--fill"
                        data-test-subj="submit_rule_form_button"
                        disabled={false}
                        onClick={[Function]}
                        style={
                          Object {
                            "minWidth": undefined,
                          }
                        }
                        type="button"
                      >
                        <EuiButtonContent
                          className="euiButton__content"
                          iconGap="m"
                          iconSide="left"
                          textProps={
                            Object {
                              "className": "euiButton__text",
                            }
                          }
                        >
                          <span
                            className="euiButtonContent euiButton__content"
                          >
                            <span
                              className="euiButton__text"
                            >
                              Create detection rule
                            </span>
                          </span>
                        </EuiButtonContent>
                      </button>
                    </EuiButtonDisplay>
                  </EuiButton>
                </EuiSmallButton>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </form>
    </Form>
  </Formik>
</RuleEditorForm>
`;
