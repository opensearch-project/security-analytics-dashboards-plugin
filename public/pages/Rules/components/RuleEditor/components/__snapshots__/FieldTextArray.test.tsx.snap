// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FieldTextArray /> spec renders the component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="euiFormRow euiFormRow--compressed"
        id="some_html_id-row"
      >
        <div
          class="euiFormRow__labelWrapper"
        >
          <label
            aria-invalid="true"
            class="euiFormLabel euiFormRow__label euiFormLabel-isInvalid"
            for="some_html_id"
          >
            Field label
          </label>
        </div>
        <div
          class="euiFormRow__fieldWrapper"
        >
          <div
            class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <div
              class="euiFlexItem"
              style="min-width: 100%;"
            >
              <div
                class="euiFormControlLayout euiFormControlLayout--compressed"
              >
                <div
                  class="euiFormControlLayout__childrenWrapper"
                >
                  <input
                    class="euiFieldText euiFieldText--compressed"
                    data-test-subj="rule_field_field_0"
                    name="field"
                    placeholder="Field placeholder"
                    type="text"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="euiSpacer euiSpacer--m"
          />
          <button
            class="euiButton euiButton--primary euiButton--small secondary"
            type="button"
          >
            <span
              class="euiButtonContent euiButton__content"
            >
              <span
                class="euiButton__text"
              >
                Add a field
              </span>
            </span>
          </button>
        </div>
      </div>
      <div
        class="euiSpacer euiSpacer--l"
      />
    </div>
  </body>,
  "container": <div>
    <div
      class="euiFormRow euiFormRow--compressed"
      id="some_html_id-row"
    >
      <div
        class="euiFormRow__labelWrapper"
      >
        <label
          aria-invalid="true"
          class="euiFormLabel euiFormRow__label euiFormLabel-isInvalid"
          for="some_html_id"
        >
          Field label
        </label>
      </div>
      <div
        class="euiFormRow__fieldWrapper"
      >
        <div
          class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
        >
          <div
            class="euiFlexItem"
            style="min-width: 100%;"
          >
            <div
              class="euiFormControlLayout euiFormControlLayout--compressed"
            >
              <div
                class="euiFormControlLayout__childrenWrapper"
              >
                <input
                  class="euiFieldText euiFieldText--compressed"
                  data-test-subj="rule_field_field_0"
                  name="field"
                  placeholder="Field placeholder"
                  type="text"
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          class="euiSpacer euiSpacer--m"
        />
        <button
          class="euiButton euiButton--primary euiButton--small secondary"
          type="button"
        >
          <span
            class="euiButtonContent euiButton__content"
          >
            <span
              class="euiButton__text"
            >
              Add a field
            </span>
          </span>
        </button>
      </div>
    </div>
    <div
      class="euiSpacer euiSpacer--l"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
