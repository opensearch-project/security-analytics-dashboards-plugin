// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DetectorRulesView /> spec renders the component 1`] = `
<DetectorRulesView
  detector={
    Object {
      "createdBy": "someone",
      "detector_type": "detector_type",
      "enabled": true,
      "id": "detector_id_1",
      "inputs": Array [
        Object {
          "detector_input": Object {
            "custom_rules": Array [
              Object {
                "_id": "rule_id_1",
                "_index": ".windows",
                "_primary_term": 1,
                "_source": Object {
                  "last_update_time": "12/12/2022",
                  "queries": Array [
                    Object {
                      "value": ".windows",
                    },
                  ],
                  "rule": "rule_name",
                },
                "_version": 1,
                "id": "rule_id_1",
                "prePackaged": true,
              },
            ],
            "description": "detectorDescription",
            "indices": Array [
              ".windows",
            ],
            "pre_packaged_rules": Array [
              Object {
                "_id": "rule_id_1",
                "_index": ".windows",
                "_primary_term": 1,
                "_source": Object {
                  "last_update_time": "12/12/2022",
                  "queries": Array [
                    Object {
                      "value": ".windows",
                    },
                  ],
                  "rule": "rule_name",
                },
                "_version": 1,
                "id": "rule_id_1",
                "prePackaged": true,
              },
            ],
          },
        },
      ],
      "name": "detector_name",
      "schedule": Object {
        "period": Object {
          "interval": 1,
          "unit": "MINUTES",
        },
      },
      "triggers": Array [
        Object {
          "actions": Array [
            Object {
              "destination_id": "some_destination_id_1",
              "id": "trigger_id_1_0",
              "message_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "name": "some_name",
              "subject_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "throttle": Object {
                "unit": "minutes",
                "value": 1,
              },
              "throttle_enabled": true,
            },
            Object {
              "destination_id": "some_destination_id_1",
              "id": "trigger_id_1_1",
              "message_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "name": "some_name",
              "subject_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "throttle": Object {
                "unit": "minutes",
                "value": 1,
              },
              "throttle_enabled": true,
            },
          ],
          "detection_types": Array [
            "rules",
          ],
          "id": "trigger_id_0",
          "ids": Array [
            "rule_id_1",
          ],
          "name": "alert_name",
          "sev_levels": Array [
            "severity_level_low",
          ],
          "severity": "1",
          "tags": Array [
            "any.tag",
          ],
          "types": Array [
            "detector_type_1",
          ],
        },
        Object {
          "actions": Array [
            Object {
              "destination_id": "some_destination_id_1",
              "id": "trigger_id_1_0",
              "message_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "name": "some_name",
              "subject_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "throttle": Object {
                "unit": "minutes",
                "value": 1,
              },
              "throttle_enabled": true,
            },
            Object {
              "destination_id": "some_destination_id_1",
              "id": "trigger_id_1_1",
              "message_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "name": "some_name",
              "subject_template": Object {
                "lang": "some_lang",
                "source": "some_source",
              },
              "throttle": Object {
                "unit": "minutes",
                "value": 1,
              },
              "throttle_enabled": true,
            },
          ],
          "detection_types": Array [
            "rules",
          ],
          "id": "trigger_id_1",
          "ids": Array [
            "rule_id_1",
          ],
          "name": "alert_name",
          "sev_levels": Array [
            "severity_level_low",
          ],
          "severity": "1",
          "tags": Array [
            "any.tag",
          ],
          "types": Array [
            "detector_type_1",
          ],
        },
      ],
      "type": "detector",
    }
  }
  isEditable={true}
  notifications={
    Object {
      "toasts": Object {
        "addDanger": [MockFunction],
        "addInfo": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
      },
    }
  }
  onEditClicked={[MockFunction]}
  rulesCanFold={false}
>
  <ContentPanel
    actions={
      Array [
        <EuiSmallButton
          data-test-subj="edit-detector-rules"
          onClick={[Function]}
        >
          Edit
        </EuiSmallButton>,
      ]
    }
    title="Active rules (2)"
  >
    <EuiPanel
      className=""
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="m"
                >
                  <h3
                    className="euiTitle euiTitle--medium"
                  >
                    Active rules (2)
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem
                      key="0"
                    >
                      <div
                        className="euiFlexItem"
                      >
                        <EuiSmallButton
                          data-test-subj="edit-detector-rules"
                          onClick={[Function]}
                        >
                          <EuiButton
                            data-test-subj="edit-detector-rules"
                            onClick={[Function]}
                            size="s"
                          >
                            <EuiButtonDisplay
                              baseClassName="euiButton"
                              data-test-subj="edit-detector-rules"
                              disabled={false}
                              element="button"
                              isDisabled={false}
                              onClick={[Function]}
                              size="s"
                              type="button"
                            >
                              <button
                                className="euiButton euiButton--primary euiButton--small"
                                data-test-subj="edit-detector-rules"
                                disabled={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "minWidth": undefined,
                                  }
                                }
                                type="button"
                              >
                                <EuiButtonContent
                                  className="euiButton__content"
                                  iconGap="m"
                                  iconSide="left"
                                  textProps={
                                    Object {
                                      "className": "euiButton__text",
                                    }
                                  }
                                >
                                  <span
                                    className="euiButtonContent euiButton__content"
                                  >
                                    <span
                                      className="euiButton__text"
                                    >
                                      Edit
                                    </span>
                                  </span>
                                </EuiButtonContent>
                              </button>
                            </EuiButtonDisplay>
                          </EuiButton>
                        </EuiSmallButton>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiHorizontalRule
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <RulesTable
            loading={false}
            ruleItems={Array []}
            showRuleDetails={[Function]}
          >
            <EuiInMemoryTable
              columns={
                Array [
                  Object {
                    "field": "title",
                    "name": "Rule name",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                    "width": "30%",
                  },
                  Object {
                    "field": "level",
                    "name": "Rule Severity",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                    "width": "10%",
                  },
                  Object {
                    "field": "category",
                    "name": "Log type",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                    "width": "10%",
                  },
                  Object {
                    "field": "source",
                    "name": "Source",
                    "sortable": true,
                    "truncateText": true,
                    "width": "10%",
                  },
                  Object {
                    "field": "description",
                    "name": "Description",
                    "sortable": false,
                    "truncateText": true,
                  },
                ]
              }
              items={Array []}
              loading={false}
              onTableChange={[Function]}
              pagination={
                Object {
                  "pageIndex": 0,
                  "pageSize": 25,
                  "pageSizeOptions": Array [
                    10,
                    25,
                    50,
                  ],
                }
              }
              responsive={true}
              search={
                Object {
                  "box": Object {
                    "placeholder": "Search rules",
                    "schema": true,
                  },
                  "filters": Array [
                    Object {
                      "field": "category",
                      "multiSelect": "or",
                      "name": "Log type",
                      "options": Array [],
                      "type": "field_value_selection",
                    },
                    Object {
                      "field": "level",
                      "multiSelect": "or",
                      "name": "Rule severity",
                      "options": Array [
                        Object {
                          "color": Object {
                            "background": "#cc5642",
                            "text": "white",
                          },
                          "name": "Critical",
                          "priority": "1",
                          "value": "critical",
                        },
                        Object {
                          "color": Object {
                            "background": "#e7664c",
                            "text": "white",
                          },
                          "name": "High",
                          "priority": "2",
                          "value": "high",
                        },
                        Object {
                          "color": Object {
                            "background": "#d6bf57",
                            "text": "black",
                          },
                          "name": "Medium",
                          "priority": "3",
                          "value": "medium",
                        },
                        Object {
                          "color": Object {
                            "background": "#54b399",
                            "text": "white",
                          },
                          "name": "Low",
                          "priority": "4",
                          "value": "low",
                        },
                        Object {
                          "color": Object {
                            "background": "#209280",
                            "text": "white",
                          },
                          "name": "Informational",
                          "priority": "5",
                          "value": "informational",
                        },
                      ],
                      "type": "field_value_selection",
                    },
                    Object {
                      "field": "source",
                      "multiSelect": "or",
                      "name": "Source",
                      "options": Array [
                        Object {
                          "value": "Standard",
                        },
                        Object {
                          "value": "Custom",
                        },
                      ],
                      "type": "field_value_selection",
                    },
                  ],
                }
              }
              sorting={true}
              tableLayout="fixed"
            >
              <div>
                <EuiSearchBar
                  box={
                    Object {
                      "placeholder": "Search rules",
                      "schema": Object {
                        "fields": Object {
                          "category": Object {
                            "type": "string",
                          },
                          "description": Object {
                            "type": "string",
                          },
                          "level": Object {
                            "type": "string",
                          },
                          "source": Object {
                            "type": "string",
                          },
                          "title": Object {
                            "type": "string",
                          },
                        },
                        "strict": true,
                      },
                    }
                  }
                  filters={
                    Array [
                      Object {
                        "field": "category",
                        "multiSelect": "or",
                        "name": "Log type",
                        "options": Array [],
                        "type": "field_value_selection",
                      },
                      Object {
                        "field": "level",
                        "multiSelect": "or",
                        "name": "Rule severity",
                        "options": Array [
                          Object {
                            "color": Object {
                              "background": "#cc5642",
                              "text": "white",
                            },
                            "name": "Critical",
                            "priority": "1",
                            "value": "critical",
                          },
                          Object {
                            "color": Object {
                              "background": "#e7664c",
                              "text": "white",
                            },
                            "name": "High",
                            "priority": "2",
                            "value": "high",
                          },
                          Object {
                            "color": Object {
                              "background": "#d6bf57",
                              "text": "black",
                            },
                            "name": "Medium",
                            "priority": "3",
                            "value": "medium",
                          },
                          Object {
                            "color": Object {
                              "background": "#54b399",
                              "text": "white",
                            },
                            "name": "Low",
                            "priority": "4",
                            "value": "low",
                          },
                          Object {
                            "color": Object {
                              "background": "#209280",
                              "text": "white",
                            },
                            "name": "Informational",
                            "priority": "5",
                            "value": "informational",
                          },
                        ],
                        "type": "field_value_selection",
                      },
                      Object {
                        "field": "source",
                        "multiSelect": "or",
                        "name": "Source",
                        "options": Array [
                          Object {
                            "value": "Standard",
                          },
                          Object {
                            "value": "Custom",
                          },
                        ],
                        "type": "field_value_selection",
                      },
                    ]
                  }
                  onChange={[Function]}
                >
                  <EuiFlexGroup
                    alignItems="center"
                    gutterSize="m"
                    wrap={true}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                    >
                      <EuiFlexItem
                        className="euiSearchBar__searchHolder"
                        grow={true}
                      >
                        <div
                          className="euiFlexItem euiSearchBar__searchHolder"
                        >
                          <EuiSearchBox
                            incremental={false}
                            isInvalid={false}
                            onSearch={[Function]}
                            placeholder="Search rules"
                            query=""
                          >
                            <EuiFieldSearch
                              aria-label="This is a search bar. After typing your query, hit enter to filter the results lower in the page."
                              compressed={false}
                              defaultValue=""
                              fullWidth={true}
                              incremental={false}
                              inputRef={[Function]}
                              isClearable={true}
                              isInvalid={false}
                              isLoading={false}
                              onSearch={[Function]}
                              placeholder="Search rules"
                            >
                              <EuiFormControlLayout
                                compressed={false}
                                fullWidth={true}
                                icon="search"
                                isLoading={false}
                              >
                                <div
                                  className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                >
                                  <div
                                    className="euiFormControlLayout__childrenWrapper"
                                  >
                                    <EuiValidatableControl
                                      isInvalid={false}
                                    >
                                      <input
                                        aria-label="This is a search bar. After typing your query, hit enter to filter the results lower in the page."
                                        className="euiFieldSearch euiFieldSearch--fullWidth"
                                        defaultValue=""
                                        onKeyUp={[Function]}
                                        placeholder="Search rules"
                                        type="search"
                                      />
                                    </EuiValidatableControl>
                                    <EuiFormControlLayoutIcons
                                      compressed={false}
                                      icon="search"
                                      isLoading={false}
                                    >
                                      <div
                                        className="euiFormControlLayoutIcons"
                                      >
                                        <EuiFormControlLayoutCustomIcon
                                          size="m"
                                          type="search"
                                        >
                                          <span
                                            className="euiFormControlLayoutCustomIcon"
                                          >
                                            <EuiIcon
                                              aria-hidden="true"
                                              className="euiFormControlLayoutCustomIcon__icon"
                                              size="m"
                                              type="search"
                                            >
                                              EuiIconMock
                                            </EuiIcon>
                                          </span>
                                        </EuiFormControlLayoutCustomIcon>
                                      </div>
                                    </EuiFormControlLayoutIcons>
                                  </div>
                                </div>
                              </EuiFormControlLayout>
                            </EuiFieldSearch>
                          </EuiSearchBox>
                        </div>
                      </EuiFlexItem>
                      <EuiFlexItem
                        className="euiSearchBar__filtersHolder"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero euiSearchBar__filtersHolder"
                        >
                          <EuiSearchFilters
                            filters={
                              Array [
                                Object {
                                  "field": "category",
                                  "multiSelect": "or",
                                  "name": "Log type",
                                  "options": Array [],
                                  "type": "field_value_selection",
                                },
                                Object {
                                  "field": "level",
                                  "multiSelect": "or",
                                  "name": "Rule severity",
                                  "options": Array [
                                    Object {
                                      "color": Object {
                                        "background": "#cc5642",
                                        "text": "white",
                                      },
                                      "name": "Critical",
                                      "priority": "1",
                                      "value": "critical",
                                    },
                                    Object {
                                      "color": Object {
                                        "background": "#e7664c",
                                        "text": "white",
                                      },
                                      "name": "High",
                                      "priority": "2",
                                      "value": "high",
                                    },
                                    Object {
                                      "color": Object {
                                        "background": "#d6bf57",
                                        "text": "black",
                                      },
                                      "name": "Medium",
                                      "priority": "3",
                                      "value": "medium",
                                    },
                                    Object {
                                      "color": Object {
                                        "background": "#54b399",
                                        "text": "white",
                                      },
                                      "name": "Low",
                                      "priority": "4",
                                      "value": "low",
                                    },
                                    Object {
                                      "color": Object {
                                        "background": "#209280",
                                        "text": "white",
                                      },
                                      "name": "Informational",
                                      "priority": "5",
                                      "value": "informational",
                                    },
                                  ],
                                  "type": "field_value_selection",
                                },
                                Object {
                                  "field": "source",
                                  "multiSelect": "or",
                                  "name": "Source",
                                  "options": Array [
                                    Object {
                                      "value": "Standard",
                                    },
                                    Object {
                                      "value": "Custom",
                                    },
                                  ],
                                  "type": "field_value_selection",
                                },
                              ]
                            }
                            onChange={[Function]}
                            query={
                              Query {
                                "ast": _AST {
                                  "_clauses": Array [],
                                  "_indexedClauses": Object {
                                    "field": Object {},
                                    "group": Array [],
                                    "is": Object {},
                                    "term": Array [],
                                  },
                                },
                                "syntax": Object {
                                  "parse": [Function],
                                  "print": [Function],
                                  "printClause": [Function],
                                },
                                "text": "",
                              }
                            }
                          >
                            <EuiFilterGroup>
                              <div
                                className="euiFilterGroup"
                              >
                                <FieldValueSelectionFilter
                                  config={
                                    Object {
                                      "compressed": undefined,
                                      "field": "category",
                                      "multiSelect": "or",
                                      "name": "Log type",
                                      "options": Array [],
                                      "type": "field_value_selection",
                                    }
                                  }
                                  index={0}
                                  onChange={[Function]}
                                  query={
                                    Query {
                                      "ast": _AST {
                                        "_clauses": Array [],
                                        "_indexedClauses": Object {
                                          "field": Object {},
                                          "group": Array [],
                                          "is": Object {},
                                          "term": Array [],
                                        },
                                      },
                                      "syntax": Object {
                                        "parse": [Function],
                                        "print": [Function],
                                        "printClause": [Function],
                                      },
                                      "text": "",
                                    }
                                  }
                                >
                                  <EuiPopover
                                    anchorPosition="downCenter"
                                    button={
                                      <EuiFilterButton
                                        grow={true}
                                        hasActiveFilters={false}
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                      >
                                        Log type
                                      </EuiFilterButton>
                                    }
                                    closePopover={[Function]}
                                    display="inlineBlock"
                                    hasArrow={true}
                                    id="field_value_selection_0"
                                    isOpen={false}
                                    ownFocus={true}
                                    panelClassName="euiFilterGroup__popoverPanel"
                                    panelPaddingSize="none"
                                  >
                                    <div
                                      className="euiPopover euiPopover--anchorDownCenter"
                                      id="field_value_selection_0"
                                    >
                                      <div
                                        className="euiPopover__anchor"
                                      >
                                        <EuiFilterButton
                                          grow={true}
                                          hasActiveFilters={false}
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                        >
                                          <EuiButtonEmpty
                                            className="euiFilterButton euiFilterButton--hasIcon"
                                            color="text"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            textProps={
                                              Object {
                                                "className": "",
                                              }
                                            }
                                            type="button"
                                          >
                                            <button
                                              className="euiButtonEmpty euiButtonEmpty--text euiFilterButton euiFilterButton--hasIcon"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiButtonContent
                                                className="euiButtonEmpty__content"
                                                iconGap="m"
                                                iconSide="right"
                                                iconSize="m"
                                                iconType="arrowDown"
                                                textProps={
                                                  Object {
                                                    "className": "euiButtonEmpty__text",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                >
                                                  <EuiIcon
                                                    className="euiButtonContent__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    EuiIconMock
                                                  </EuiIcon>
                                                  <span
                                                    className="euiButtonEmpty__text"
                                                  >
                                                    <span
                                                      className="euiFilterButton__textShift"
                                                      data-text="Log type"
                                                      title="Log type"
                                                    >
                                                      Log type
                                                    </span>
                                                  </span>
                                                </span>
                                              </EuiButtonContent>
                                            </button>
                                          </EuiButtonEmpty>
                                        </EuiFilterButton>
                                      </div>
                                    </div>
                                  </EuiPopover>
                                </FieldValueSelectionFilter>
                                <FieldValueSelectionFilter
                                  config={
                                    Object {
                                      "compressed": undefined,
                                      "field": "level",
                                      "multiSelect": "or",
                                      "name": "Rule severity",
                                      "options": Array [
                                        Object {
                                          "color": Object {
                                            "background": "#cc5642",
                                            "text": "white",
                                          },
                                          "name": "Critical",
                                          "priority": "1",
                                          "value": "critical",
                                        },
                                        Object {
                                          "color": Object {
                                            "background": "#e7664c",
                                            "text": "white",
                                          },
                                          "name": "High",
                                          "priority": "2",
                                          "value": "high",
                                        },
                                        Object {
                                          "color": Object {
                                            "background": "#d6bf57",
                                            "text": "black",
                                          },
                                          "name": "Medium",
                                          "priority": "3",
                                          "value": "medium",
                                        },
                                        Object {
                                          "color": Object {
                                            "background": "#54b399",
                                            "text": "white",
                                          },
                                          "name": "Low",
                                          "priority": "4",
                                          "value": "low",
                                        },
                                        Object {
                                          "color": Object {
                                            "background": "#209280",
                                            "text": "white",
                                          },
                                          "name": "Informational",
                                          "priority": "5",
                                          "value": "informational",
                                        },
                                      ],
                                      "type": "field_value_selection",
                                    }
                                  }
                                  index={1}
                                  onChange={[Function]}
                                  query={
                                    Query {
                                      "ast": _AST {
                                        "_clauses": Array [],
                                        "_indexedClauses": Object {
                                          "field": Object {},
                                          "group": Array [],
                                          "is": Object {},
                                          "term": Array [],
                                        },
                                      },
                                      "syntax": Object {
                                        "parse": [Function],
                                        "print": [Function],
                                        "printClause": [Function],
                                      },
                                      "text": "",
                                    }
                                  }
                                >
                                  <EuiPopover
                                    anchorPosition="downCenter"
                                    button={
                                      <EuiFilterButton
                                        grow={true}
                                        hasActiveFilters={false}
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                      >
                                        Rule severity
                                      </EuiFilterButton>
                                    }
                                    closePopover={[Function]}
                                    display="inlineBlock"
                                    hasArrow={true}
                                    id="field_value_selection_1"
                                    isOpen={false}
                                    ownFocus={true}
                                    panelClassName="euiFilterGroup__popoverPanel"
                                    panelPaddingSize="none"
                                  >
                                    <div
                                      className="euiPopover euiPopover--anchorDownCenter"
                                      id="field_value_selection_1"
                                    >
                                      <div
                                        className="euiPopover__anchor"
                                      >
                                        <EuiFilterButton
                                          grow={true}
                                          hasActiveFilters={false}
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                        >
                                          <EuiButtonEmpty
                                            className="euiFilterButton euiFilterButton--hasIcon"
                                            color="text"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            textProps={
                                              Object {
                                                "className": "",
                                              }
                                            }
                                            type="button"
                                          >
                                            <button
                                              className="euiButtonEmpty euiButtonEmpty--text euiFilterButton euiFilterButton--hasIcon"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiButtonContent
                                                className="euiButtonEmpty__content"
                                                iconGap="m"
                                                iconSide="right"
                                                iconSize="m"
                                                iconType="arrowDown"
                                                textProps={
                                                  Object {
                                                    "className": "euiButtonEmpty__text",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                >
                                                  <EuiIcon
                                                    className="euiButtonContent__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    EuiIconMock
                                                  </EuiIcon>
                                                  <span
                                                    className="euiButtonEmpty__text"
                                                  >
                                                    <span
                                                      className="euiFilterButton__textShift"
                                                      data-text="Rule severity"
                                                      title="Rule severity"
                                                    >
                                                      Rule severity
                                                    </span>
                                                  </span>
                                                </span>
                                              </EuiButtonContent>
                                            </button>
                                          </EuiButtonEmpty>
                                        </EuiFilterButton>
                                      </div>
                                    </div>
                                  </EuiPopover>
                                </FieldValueSelectionFilter>
                                <FieldValueSelectionFilter
                                  config={
                                    Object {
                                      "compressed": undefined,
                                      "field": "source",
                                      "multiSelect": "or",
                                      "name": "Source",
                                      "options": Array [
                                        Object {
                                          "value": "Standard",
                                        },
                                        Object {
                                          "value": "Custom",
                                        },
                                      ],
                                      "type": "field_value_selection",
                                    }
                                  }
                                  index={2}
                                  onChange={[Function]}
                                  query={
                                    Query {
                                      "ast": _AST {
                                        "_clauses": Array [],
                                        "_indexedClauses": Object {
                                          "field": Object {},
                                          "group": Array [],
                                          "is": Object {},
                                          "term": Array [],
                                        },
                                      },
                                      "syntax": Object {
                                        "parse": [Function],
                                        "print": [Function],
                                        "printClause": [Function],
                                      },
                                      "text": "",
                                    }
                                  }
                                >
                                  <EuiPopover
                                    anchorPosition="downCenter"
                                    button={
                                      <EuiFilterButton
                                        grow={true}
                                        hasActiveFilters={false}
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                      >
                                        Source
                                      </EuiFilterButton>
                                    }
                                    closePopover={[Function]}
                                    display="inlineBlock"
                                    hasArrow={true}
                                    id="field_value_selection_2"
                                    isOpen={false}
                                    ownFocus={true}
                                    panelClassName="euiFilterGroup__popoverPanel"
                                    panelPaddingSize="none"
                                  >
                                    <div
                                      className="euiPopover euiPopover--anchorDownCenter"
                                      id="field_value_selection_2"
                                    >
                                      <div
                                        className="euiPopover__anchor"
                                      >
                                        <EuiFilterButton
                                          grow={true}
                                          hasActiveFilters={false}
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                        >
                                          <EuiButtonEmpty
                                            className="euiFilterButton euiFilterButton--hasIcon"
                                            color="text"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            textProps={
                                              Object {
                                                "className": "",
                                              }
                                            }
                                            type="button"
                                          >
                                            <button
                                              className="euiButtonEmpty euiButtonEmpty--text euiFilterButton euiFilterButton--hasIcon"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiButtonContent
                                                className="euiButtonEmpty__content"
                                                iconGap="m"
                                                iconSide="right"
                                                iconSize="m"
                                                iconType="arrowDown"
                                                textProps={
                                                  Object {
                                                    "className": "euiButtonEmpty__text",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                >
                                                  <EuiIcon
                                                    className="euiButtonContent__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    EuiIconMock
                                                  </EuiIcon>
                                                  <span
                                                    className="euiButtonEmpty__text"
                                                  >
                                                    <span
                                                      className="euiFilterButton__textShift"
                                                      data-text="Source"
                                                      title="Source"
                                                    >
                                                      Source
                                                    </span>
                                                  </span>
                                                </span>
                                              </EuiButtonContent>
                                            </button>
                                          </EuiButtonEmpty>
                                        </EuiFilterButton>
                                      </div>
                                    </div>
                                  </EuiPopover>
                                </FieldValueSelectionFilter>
                              </div>
                            </EuiFilterGroup>
                          </EuiSearchFilters>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </EuiSearchBar>
                <EuiSpacer
                  size="l"
                >
                  <div
                    className="euiSpacer euiSpacer--l"
                  />
                </EuiSpacer>
                <EuiBasicTable
                  columns={
                    Array [
                      Object {
                        "field": "title",
                        "name": "Rule name",
                        "render": [Function],
                        "sortable": true,
                        "truncateText": true,
                        "width": "30%",
                      },
                      Object {
                        "field": "level",
                        "name": "Rule Severity",
                        "render": [Function],
                        "sortable": true,
                        "truncateText": true,
                        "width": "10%",
                      },
                      Object {
                        "field": "category",
                        "name": "Log type",
                        "render": [Function],
                        "sortable": true,
                        "truncateText": true,
                        "width": "10%",
                      },
                      Object {
                        "field": "source",
                        "name": "Source",
                        "sortable": true,
                        "truncateText": true,
                        "width": "10%",
                      },
                      Object {
                        "field": "description",
                        "name": "Description",
                        "sortable": false,
                        "truncateText": true,
                      },
                    ]
                  }
                  items={Array []}
                  loading={false}
                  noItemsMessage="No items found"
                  onChange={[Function]}
                  pagination={
                    Object {
                      "hidePerPageOptions": undefined,
                      "pageIndex": 0,
                      "pageSize": 25,
                      "pageSizeOptions": Array [
                        10,
                        25,
                        50,
                      ],
                      "totalItemCount": 0,
                    }
                  }
                  responsive={true}
                  sorting={
                    Object {
                      "allowNeutralSort": true,
                      "sort": undefined,
                    }
                  }
                  tableLayout="fixed"
                >
                  <div
                    className="euiBasicTable"
                  >
                    <div>
                      <EuiTableHeaderMobile>
                        <div
                          className="euiTableHeaderMobile"
                        >
                          <EuiFlexGroup
                            alignItems="baseline"
                            justifyContent="spaceBetween"
                            responsive={false}
                          >
                            <div
                              className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                            >
                              <EuiFlexItem
                                grow={false}
                              >
                                <div
                                  className="euiFlexItem euiFlexItem--flexGrowZero"
                                />
                              </EuiFlexItem>
                              <EuiFlexItem
                                grow={false}
                              >
                                <div
                                  className="euiFlexItem euiFlexItem--flexGrowZero"
                                >
                                  <EuiTableSortMobile
                                    items={
                                      Array [
                                        Object {
                                          "isSortAscending": undefined,
                                          "isSorted": false,
                                          "key": "_data_s_title_0",
                                          "name": "Rule name",
                                          "onSort": [Function],
                                        },
                                        Object {
                                          "isSortAscending": undefined,
                                          "isSorted": false,
                                          "key": "_data_s_level_1",
                                          "name": "Rule Severity",
                                          "onSort": [Function],
                                        },
                                        Object {
                                          "isSortAscending": undefined,
                                          "isSorted": false,
                                          "key": "_data_s_category_2",
                                          "name": "Log type",
                                          "onSort": [Function],
                                        },
                                        Object {
                                          "isSortAscending": undefined,
                                          "isSorted": false,
                                          "key": "_data_s_source_3",
                                          "name": "Source",
                                          "onSort": [Function],
                                        },
                                      ]
                                    }
                                  >
                                    <div
                                      className="euiTableSortMobile"
                                    >
                                      <EuiPopover
                                        anchorPosition="downRight"
                                        button={
                                          <EuiButtonEmpty
                                            flush="right"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            size="xs"
                                          >
                                            <EuiI18n
                                              default="Sorting"
                                              token="euiTableSortMobile.sorting"
                                            />
                                          </EuiButtonEmpty>
                                        }
                                        closePopover={[Function]}
                                        display="inlineBlock"
                                        hasArrow={true}
                                        isOpen={false}
                                        ownFocus={true}
                                        panelPaddingSize="none"
                                      >
                                        <div
                                          className="euiPopover euiPopover--anchorDownRight"
                                        >
                                          <div
                                            className="euiPopover__anchor"
                                          >
                                            <EuiButtonEmpty
                                              flush="right"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                              size="xs"
                                            >
                                              <button
                                                className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButtonEmpty__content"
                                                  iconGap="m"
                                                  iconSide="right"
                                                  iconSize="s"
                                                  iconType="arrowDown"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButtonEmpty__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                  >
                                                    <EuiIcon
                                                      className="euiButtonContent__icon"
                                                      color="inherit"
                                                      size="s"
                                                      type="arrowDown"
                                                    >
                                                      EuiIconMock
                                                    </EuiIcon>
                                                    <span
                                                      className="euiButtonEmpty__text"
                                                    >
                                                      <EuiI18n
                                                        default="Sorting"
                                                        token="euiTableSortMobile.sorting"
                                                      >
                                                        Sorting
                                                      </EuiI18n>
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonEmpty>
                                          </div>
                                        </div>
                                      </EuiPopover>
                                    </div>
                                  </EuiTableSortMobile>
                                </div>
                              </EuiFlexItem>
                            </div>
                          </EuiFlexGroup>
                        </div>
                      </EuiTableHeaderMobile>
                      <EuiTable
                        id="some_html_id"
                        responsive={true}
                        tableLayout="fixed"
                      >
                        <table
                          className="euiTable euiTable--responsive"
                          id="some_html_id"
                          tabIndex={-1}
                        >
                          <EuiScreenReaderOnly>
                            <caption
                              className="euiScreenReaderOnly euiTableCaption"
                            >
                              <EuiDelayRender
                                delay={500}
                              />
                            </caption>
                          </EuiScreenReaderOnly>
                          <EuiTableHeader>
                            <thead>
                              <tr>
                                <EuiTableHeaderCell
                                  align="left"
                                  data-test-subj="tableHeaderCell_title_0"
                                  isSorted={false}
                                  key="_data_h_title_0"
                                  onSort={[Function]}
                                  width="30%"
                                >
                                  <th
                                    aria-live="polite"
                                    aria-sort="none"
                                    className="euiTableHeaderCell"
                                    data-test-subj="tableHeaderCell_title_0"
                                    role="columnheader"
                                    scope="col"
                                    style={
                                      Object {
                                        "width": "30%",
                                      }
                                    }
                                  >
                                    <button
                                      className="euiTableHeaderButton"
                                      data-test-subj="tableHeaderSortButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <CellContents
                                        className="euiTableCellContent"
                                        isSorted={false}
                                        showSortMsg={true}
                                      >
                                        <span
                                          className="euiTableCellContent"
                                        >
                                          <EuiInnerText>
                                            <EuiI18n
                                              default="{innerText}; {description}"
                                              token="euiTableHeaderCell.titleTextWithDesc"
                                              values={
                                                Object {
                                                  "description": undefined,
                                                  "innerText": "Rule name",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiTableCellContent__text"
                                                title="Rule name"
                                              >
                                                Rule name
                                              </span>
                                            </EuiI18n>
                                          </EuiInnerText>
                                        </span>
                                      </CellContents>
                                    </button>
                                  </th>
                                </EuiTableHeaderCell>
                                <EuiTableHeaderCell
                                  align="left"
                                  data-test-subj="tableHeaderCell_level_1"
                                  isSorted={false}
                                  key="_data_h_level_1"
                                  onSort={[Function]}
                                  width="10%"
                                >
                                  <th
                                    aria-live="polite"
                                    aria-sort="none"
                                    className="euiTableHeaderCell"
                                    data-test-subj="tableHeaderCell_level_1"
                                    role="columnheader"
                                    scope="col"
                                    style={
                                      Object {
                                        "width": "10%",
                                      }
                                    }
                                  >
                                    <button
                                      className="euiTableHeaderButton"
                                      data-test-subj="tableHeaderSortButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <CellContents
                                        className="euiTableCellContent"
                                        isSorted={false}
                                        showSortMsg={true}
                                      >
                                        <span
                                          className="euiTableCellContent"
                                        >
                                          <EuiInnerText>
                                            <EuiI18n
                                              default="{innerText}; {description}"
                                              token="euiTableHeaderCell.titleTextWithDesc"
                                              values={
                                                Object {
                                                  "description": undefined,
                                                  "innerText": "Rule Severity",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiTableCellContent__text"
                                                title="Rule Severity"
                                              >
                                                Rule Severity
                                              </span>
                                            </EuiI18n>
                                          </EuiInnerText>
                                        </span>
                                      </CellContents>
                                    </button>
                                  </th>
                                </EuiTableHeaderCell>
                                <EuiTableHeaderCell
                                  align="left"
                                  data-test-subj="tableHeaderCell_category_2"
                                  isSorted={false}
                                  key="_data_h_category_2"
                                  onSort={[Function]}
                                  width="10%"
                                >
                                  <th
                                    aria-live="polite"
                                    aria-sort="none"
                                    className="euiTableHeaderCell"
                                    data-test-subj="tableHeaderCell_category_2"
                                    role="columnheader"
                                    scope="col"
                                    style={
                                      Object {
                                        "width": "10%",
                                      }
                                    }
                                  >
                                    <button
                                      className="euiTableHeaderButton"
                                      data-test-subj="tableHeaderSortButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <CellContents
                                        className="euiTableCellContent"
                                        isSorted={false}
                                        showSortMsg={true}
                                      >
                                        <span
                                          className="euiTableCellContent"
                                        >
                                          <EuiInnerText>
                                            <EuiI18n
                                              default="{innerText}; {description}"
                                              token="euiTableHeaderCell.titleTextWithDesc"
                                              values={
                                                Object {
                                                  "description": undefined,
                                                  "innerText": "Log type",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiTableCellContent__text"
                                                title="Log type"
                                              >
                                                Log type
                                              </span>
                                            </EuiI18n>
                                          </EuiInnerText>
                                        </span>
                                      </CellContents>
                                    </button>
                                  </th>
                                </EuiTableHeaderCell>
                                <EuiTableHeaderCell
                                  align="left"
                                  data-test-subj="tableHeaderCell_source_3"
                                  isSorted={false}
                                  key="_data_h_source_3"
                                  onSort={[Function]}
                                  width="10%"
                                >
                                  <th
                                    aria-live="polite"
                                    aria-sort="none"
                                    className="euiTableHeaderCell"
                                    data-test-subj="tableHeaderCell_source_3"
                                    role="columnheader"
                                    scope="col"
                                    style={
                                      Object {
                                        "width": "10%",
                                      }
                                    }
                                  >
                                    <button
                                      className="euiTableHeaderButton"
                                      data-test-subj="tableHeaderSortButton"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <CellContents
                                        className="euiTableCellContent"
                                        isSorted={false}
                                        showSortMsg={true}
                                      >
                                        <span
                                          className="euiTableCellContent"
                                        >
                                          <EuiInnerText>
                                            <EuiI18n
                                              default="{innerText}; {description}"
                                              token="euiTableHeaderCell.titleTextWithDesc"
                                              values={
                                                Object {
                                                  "description": undefined,
                                                  "innerText": "Source",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiTableCellContent__text"
                                                title="Source"
                                              >
                                                Source
                                              </span>
                                            </EuiI18n>
                                          </EuiInnerText>
                                        </span>
                                      </CellContents>
                                    </button>
                                  </th>
                                </EuiTableHeaderCell>
                                <EuiTableHeaderCell
                                  align="left"
                                  data-test-subj="tableHeaderCell_description_4"
                                  key="_data_h_description_4"
                                >
                                  <th
                                    className="euiTableHeaderCell"
                                    data-test-subj="tableHeaderCell_description_4"
                                    role="columnheader"
                                    scope="col"
                                    style={
                                      Object {
                                        "width": undefined,
                                      }
                                    }
                                  >
                                    <CellContents
                                      className="euiTableCellContent"
                                      showSortMsg={false}
                                    >
                                      <span
                                        className="euiTableCellContent"
                                      >
                                        <EuiInnerText>
                                          <EuiI18n
                                            default="{innerText}; {description}"
                                            token="euiTableHeaderCell.titleTextWithDesc"
                                            values={
                                              Object {
                                                "description": undefined,
                                                "innerText": "Description",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiTableCellContent__text"
                                              title="Description"
                                            >
                                              Description
                                            </span>
                                          </EuiI18n>
                                        </EuiInnerText>
                                      </span>
                                    </CellContents>
                                  </th>
                                </EuiTableHeaderCell>
                              </tr>
                            </thead>
                          </EuiTableHeader>
                          <EuiTableBody>
                            <tbody>
                              <EuiTableRow>
                                <tr
                                  className="euiTableRow"
                                >
                                  <EuiTableRowCell
                                    align="center"
                                    colSpan={5}
                                    isMobileFullWidth={true}
                                  >
                                    <td
                                      className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                      colSpan={5}
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <div
                                        className="euiTableCellContent euiTableCellContent--alignCenter"
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                        >
                                          No items found
                                        </span>
                                      </div>
                                    </td>
                                  </EuiTableRowCell>
                                </tr>
                              </EuiTableRow>
                            </tbody>
                          </EuiTableBody>
                        </table>
                      </EuiTable>
                    </div>
                  </div>
                </EuiBasicTable>
              </div>
            </EuiInMemoryTable>
          </RulesTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</DetectorRulesView>
`;
