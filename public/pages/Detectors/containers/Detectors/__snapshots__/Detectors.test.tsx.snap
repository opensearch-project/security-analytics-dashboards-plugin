// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Detectors /> spec renders the component 1`] = `
<Detectors
  detectorService={
    DetectorService {
      "createDetector": [Function],
      "dataSourceEnabled": undefined,
      "deleteDetector": [Function],
      "getDetector": [Function],
      "getDetectors": [Function],
      "osDriver": Object {
        "delete": [MockFunction],
        "get": [MockFunction],
        "head": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
      "searchDetectors": [Function],
      "updateDetector": [Function],
    }
  }
  notifications={
    Object {
      "toasts": Object {
        "addDanger": [MockFunction],
        "addInfo": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
      },
    }
  }
>
  <EuiFlexGroup
    direction="column"
    gutterSize="m"
  >
    <div
      className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
    >
      <PageHeader
        appRightControls={
          Array [
            Object {
              "renderComponent": <EuiSmallButton
                data-test-subj="detectorsCreateButton"
                fill={true}
                href="#/create-detector"
                iconGap="s"
                iconSide="left"
                iconType="plus"
              >
                Create detector
              </EuiSmallButton>,
            },
          ]
        }
      >
        <EuiFlexItem>
          <div
            className="euiFlexItem"
          >
            <EuiFlexGroup>
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiText
                      size="s"
                    >
                      <div
                        className="euiText euiText--small"
                      >
                        <h1>
                          Threat detectors
                        </h1>
                      </div>
                    </EuiText>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFlexGroup
                      justifyContent="flexEnd"
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                      >
                        <EuiFlexItem
                          grow={false}
                          key="0"
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiSmallButton
                              data-test-subj="detectorsCreateButton"
                              fill={true}
                              href="#/create-detector"
                              iconGap="s"
                              iconSide="left"
                              iconType="plus"
                            >
                              <EuiButton
                                data-test-subj="detectorsCreateButton"
                                fill={true}
                                href="#/create-detector"
                                iconGap="s"
                                iconSide="left"
                                iconType="plus"
                                size="s"
                              >
                                <EuiButtonDisplay
                                  baseClassName="euiButton"
                                  data-test-subj="detectorsCreateButton"
                                  element="a"
                                  fill={true}
                                  href="#/create-detector"
                                  iconGap="s"
                                  iconSide="left"
                                  iconType="plus"
                                  isDisabled={false}
                                  rel="noreferrer"
                                  size="s"
                                >
                                  <a
                                    className="euiButton euiButton--primary euiButton--small euiButton--fill"
                                    data-test-subj="detectorsCreateButton"
                                    disabled={false}
                                    href="#/create-detector"
                                    rel="noreferrer"
                                    style={
                                      Object {
                                        "minWidth": undefined,
                                      }
                                    }
                                  >
                                    <EuiButtonContent
                                      className="euiButton__content"
                                      iconGap="s"
                                      iconSide="left"
                                      iconType="plus"
                                      textProps={
                                        Object {
                                          "className": "euiButton__text",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiButtonContent euiButtonContent--smallIconGap euiButton__content"
                                      >
                                        <EuiIcon
                                          className="euiButtonContent__icon"
                                          color="inherit"
                                          size="m"
                                          type="plus"
                                        >
                                          EuiIconMock
                                        </EuiIcon>
                                        <span
                                          className="euiButton__text"
                                        >
                                          Create detector
                                        </span>
                                      </span>
                                    </EuiButtonContent>
                                  </a>
                                </EuiButtonDisplay>
                              </EuiButton>
                            </EuiSmallButton>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </div>
        </EuiFlexItem>
      </PageHeader>
      <EuiFlexItem>
        <div
          className="euiFlexItem"
        >
          <EuiPanel>
            <div
              className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
            >
              <EuiInMemoryTable
                columns={
                  Array [
                    Object {
                      "dataType": "string",
                      "field": "detectorName",
                      "name": "Detector name",
                      "render": [Function],
                      "sortable": true,
                    },
                    Object {
                      "dataType": "string",
                      "field": "status",
                      "name": "Status",
                      "sortable": true,
                    },
                    Object {
                      "dataType": "string",
                      "field": "logType",
                      "name": "Log type",
                      "render": [Function],
                      "sortable": true,
                    },
                    Object {
                      "align": "left",
                      "dataType": "number",
                      "field": "rulesCount",
                      "name": "Active rules",
                      "render": [Function],
                      "sortable": true,
                    },
                    Object {
                      "dataType": "date",
                      "field": "lastUpdatedTime",
                      "name": "Last updated time",
                      "render": [Function],
                      "sortable": true,
                    },
                  ]
                }
                isSelectable={true}
                itemId={[Function]}
                items={
                  Array [
                    Object {
                      "_id": "detector_id_1",
                      "_index": ".windows",
                      "_source": Object {
                        "createdBy": "someone",
                        "detector_type": "detector_type",
                        "enabled": true,
                        "enabled_time": 1,
                        "id": "detector_id_1",
                        "inputs": Array [
                          Object {
                            "detector_input": Object {
                              "custom_rules": Array [
                                Object {
                                  "_id": "rule_id_1",
                                  "_index": ".windows",
                                  "_primary_term": 1,
                                  "_source": Object {
                                    "last_update_time": "12/12/2022",
                                    "queries": Array [
                                      Object {
                                        "value": ".windows",
                                      },
                                    ],
                                    "rule": "rule_name",
                                  },
                                  "_version": 1,
                                  "id": "rule_id_1",
                                  "prePackaged": true,
                                },
                              ],
                              "description": "detectorDescription",
                              "indices": Array [
                                ".windows",
                              ],
                              "pre_packaged_rules": Array [
                                Object {
                                  "_id": "rule_id_1",
                                  "_index": ".windows",
                                  "_primary_term": 1,
                                  "_source": Object {
                                    "last_update_time": "12/12/2022",
                                    "queries": Array [
                                      Object {
                                        "value": ".windows",
                                      },
                                    ],
                                    "rule": "rule_name",
                                  },
                                  "_version": 1,
                                  "id": "rule_id_1",
                                  "prePackaged": true,
                                },
                              ],
                            },
                          },
                        ],
                        "last_update_time": 1,
                        "name": "detector_name",
                        "schedule": Object {
                          "period": Object {
                            "interval": 1,
                            "unit": "MINUTES",
                          },
                        },
                        "triggers": Array [
                          Object {
                            "actions": Array [
                              Object {
                                "destination_id": "some_destination_id_1",
                                "id": "trigger_id_1_0",
                                "message_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "name": "some_name",
                                "subject_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "throttle": Object {
                                  "unit": "minutes",
                                  "value": 1,
                                },
                                "throttle_enabled": true,
                              },
                              Object {
                                "destination_id": "some_destination_id_1",
                                "id": "trigger_id_1_1",
                                "message_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "name": "some_name",
                                "subject_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "throttle": Object {
                                  "unit": "minutes",
                                  "value": 1,
                                },
                                "throttle_enabled": true,
                              },
                            ],
                            "detection_types": Array [
                              "rules",
                            ],
                            "id": "trigger_id_0",
                            "ids": Array [
                              "rule_id_1",
                            ],
                            "name": "alert_name",
                            "sev_levels": Array [
                              "severity_level_low",
                            ],
                            "severity": "1",
                            "tags": Array [
                              "any.tag",
                            ],
                            "types": Array [
                              "detector_type_1",
                            ],
                          },
                          Object {
                            "actions": Array [
                              Object {
                                "destination_id": "some_destination_id_1",
                                "id": "trigger_id_1_0",
                                "message_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "name": "some_name",
                                "subject_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "throttle": Object {
                                  "unit": "minutes",
                                  "value": 1,
                                },
                                "throttle_enabled": true,
                              },
                              Object {
                                "destination_id": "some_destination_id_1",
                                "id": "trigger_id_1_1",
                                "message_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "name": "some_name",
                                "subject_template": Object {
                                  "lang": "some_lang",
                                  "source": "some_source",
                                },
                                "throttle": Object {
                                  "unit": "minutes",
                                  "value": 1,
                                },
                                "throttle_enabled": true,
                              },
                            ],
                            "detection_types": Array [
                              "rules",
                            ],
                            "id": "trigger_id_1",
                            "ids": Array [
                              "rule_id_1",
                            ],
                            "name": "alert_name",
                            "sev_levels": Array [
                              "severity_level_low",
                            ],
                            "severity": "1",
                            "tags": Array [
                              "any.tag",
                            ],
                            "types": Array [
                              "detector_type_1",
                            ],
                          },
                        ],
                        "type": "detector",
                      },
                      "detectorName": "detector_name",
                      "lastUpdatedTime": 1,
                      "logType": "detector_type",
                      "rulesCount": 2,
                      "status": "Active",
                    },
                  ]
                }
                loading={false}
                message={
                  <EuiEmptyPrompt
                    actions={
                      Array [
                        undefined,
                      ]
                    }
                    body={
                      <EuiText
                        size="s"
                      >
                        <p>
                          There are no existing detectors.
                        </p>
                      </EuiText>
                    }
                    style={
                      Object {
                        "maxWidth": "45em",
                      }
                    }
                  />
                }
                pagination={true}
                responsive={true}
                search={
                  Object {
                    "box": Object {
                      "compressed": true,
                      "incremental": true,
                      "placeholder": "Search threat detectors",
                      "schema": true,
                    },
                    "filters": Array [
                      Object {
                        "compressed": true,
                        "field": "status",
                        "multiSelect": "or",
                        "name": "Status",
                        "options": Array [
                          Object {
                            "name": "Active",
                            "value": "Active",
                          },
                        ],
                        "type": "field_value_selection",
                      },
                      Object {
                        "compressed": true,
                        "field": "logType",
                        "multiSelect": "or",
                        "name": "Log type",
                        "options": Array [],
                        "type": "field_value_selection",
                      },
                    ],
                    "toolsLeft": Array [
                      <EuiSmallButton
                        color="danger"
                        data-test-subj="deleteButton"
                        disabled={true}
                        iconType="trash"
                        onClick={[Function]}
                      >
                        Delete detectors
                      </EuiSmallButton>,
                    ],
                    "toolsRight": Array [
                      <EuiSmallButton
                        data-test-subj="detectorsRefreshButton"
                        iconType="refresh"
                        onClick={[Function]}
                      >
                        Refresh
                      </EuiSmallButton>,
                      <EuiPopover
                        anchorPosition="downLeft"
                        button={
                          <EuiSmallButton
                            data-test-subj="detectorsActionsButton"
                            disabled={true}
                            iconSide="right"
                            iconType="arrowDown"
                            isLoading={false}
                            onClick={[Function]}
                          >
                            Actions
                          </EuiSmallButton>
                        }
                        closePopover={[Function]}
                        data-test-subj="detectorsActionsPopover"
                        display="inlineBlock"
                        hasArrow={true}
                        id="detectorsActionsPopover"
                        isOpen={false}
                        ownFocus={true}
                        panelPaddingSize="none"
                      >
                        <EuiContextMenuPanel
                          hasFocus={true}
                          items={Array []}
                          size="s"
                        />
                      </EuiPopover>,
                    ],
                  }
                }
                selection={
                  Object {
                    "onSelectionChange": [Function],
                  }
                }
                sorting={
                  Object {
                    "sort": Object {
                      "direction": "asc",
                      "field": "name",
                    },
                  }
                }
                tableLayout="fixed"
              >
                <div>
                  <EuiSearchBar
                    box={
                      Object {
                        "compressed": true,
                        "incremental": true,
                        "placeholder": "Search threat detectors",
                        "schema": Object {
                          "fields": Object {
                            "detectorName": Object {
                              "type": "string",
                            },
                            "lastUpdatedTime": Object {
                              "type": "date",
                            },
                            "logType": Object {
                              "type": "string",
                            },
                            "rulesCount": Object {
                              "type": "number",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "strict": true,
                        },
                      }
                    }
                    filters={
                      Array [
                        Object {
                          "compressed": true,
                          "field": "status",
                          "multiSelect": "or",
                          "name": "Status",
                          "options": Array [
                            Object {
                              "name": "Active",
                              "value": "Active",
                            },
                          ],
                          "type": "field_value_selection",
                        },
                        Object {
                          "compressed": true,
                          "field": "logType",
                          "multiSelect": "or",
                          "name": "Log type",
                          "options": Array [],
                          "type": "field_value_selection",
                        },
                      ]
                    }
                    onChange={[Function]}
                    toolsLeft={
                      Array [
                        <EuiSmallButton
                          color="danger"
                          data-test-subj="deleteButton"
                          disabled={true}
                          iconType="trash"
                          onClick={[Function]}
                        >
                          Delete detectors
                        </EuiSmallButton>,
                      ]
                    }
                    toolsRight={
                      Array [
                        <EuiSmallButton
                          data-test-subj="detectorsRefreshButton"
                          iconType="refresh"
                          onClick={[Function]}
                        >
                          Refresh
                        </EuiSmallButton>,
                        <EuiPopover
                          anchorPosition="downLeft"
                          button={
                            <EuiSmallButton
                              data-test-subj="detectorsActionsButton"
                              disabled={true}
                              iconSide="right"
                              iconType="arrowDown"
                              isLoading={false}
                              onClick={[Function]}
                            >
                              Actions
                            </EuiSmallButton>
                          }
                          closePopover={[Function]}
                          data-test-subj="detectorsActionsPopover"
                          display="inlineBlock"
                          hasArrow={true}
                          id="detectorsActionsPopover"
                          isOpen={false}
                          ownFocus={true}
                          panelPaddingSize="none"
                        >
                          <EuiContextMenuPanel
                            hasFocus={true}
                            items={Array []}
                            size="s"
                          />
                        </EuiPopover>,
                      ]
                    }
                  >
                    <EuiFlexGroup
                      alignItems="center"
                      gutterSize="m"
                      wrap={true}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                      >
                        <EuiFlexItem
                          grow={false}
                          key="Delete"
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiSmallButton
                              color="danger"
                              data-test-subj="deleteButton"
                              disabled={true}
                              iconType="trash"
                              key="Delete"
                              onClick={[Function]}
                            >
                              <EuiButton
                                color="danger"
                                data-test-subj="deleteButton"
                                disabled={true}
                                iconType="trash"
                                onClick={[Function]}
                                size="s"
                              >
                                <EuiButtonDisplay
                                  baseClassName="euiButton"
                                  color="danger"
                                  data-test-subj="deleteButton"
                                  disabled={true}
                                  element="button"
                                  iconType="trash"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  size="s"
                                  type="button"
                                >
                                  <button
                                    className="euiButton euiButton--danger euiButton--small euiButton-isDisabled"
                                    data-test-subj="deleteButton"
                                    disabled={true}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "minWidth": undefined,
                                      }
                                    }
                                    type="button"
                                  >
                                    <EuiButtonContent
                                      className="euiButton__content"
                                      iconGap="m"
                                      iconSide="left"
                                      iconType="trash"
                                      textProps={
                                        Object {
                                          "className": "euiButton__text",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiButtonContent euiButton__content"
                                      >
                                        <EuiIcon
                                          className="euiButtonContent__icon"
                                          color="inherit"
                                          size="m"
                                          type="trash"
                                        >
                                          EuiIconMock
                                        </EuiIcon>
                                        <span
                                          className="euiButton__text"
                                        >
                                          Delete detectors
                                        </span>
                                      </span>
                                    </EuiButtonContent>
                                  </button>
                                </EuiButtonDisplay>
                              </EuiButton>
                            </EuiSmallButton>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          className="euiSearchBar__searchHolder"
                          grow={true}
                        >
                          <div
                            className="euiFlexItem euiSearchBar__searchHolder"
                          >
                            <EuiSearchBox
                              compressed={true}
                              incremental={true}
                              isInvalid={false}
                              onSearch={[Function]}
                              placeholder="Search threat detectors"
                              query=""
                            >
                              <EuiFieldSearch
                                aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                compressed={true}
                                defaultValue=""
                                fullWidth={true}
                                incremental={true}
                                inputRef={[Function]}
                                isClearable={true}
                                isInvalid={false}
                                isLoading={false}
                                onSearch={[Function]}
                                placeholder="Search threat detectors"
                              >
                                <EuiFormControlLayout
                                  compressed={true}
                                  fullWidth={true}
                                  icon="search"
                                  isLoading={false}
                                >
                                  <div
                                    className="euiFormControlLayout euiFormControlLayout--fullWidth euiFormControlLayout--compressed"
                                  >
                                    <div
                                      className="euiFormControlLayout__childrenWrapper"
                                    >
                                      <EuiValidatableControl
                                        isInvalid={false}
                                      >
                                        <input
                                          aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                          className="euiFieldSearch euiFieldSearch--fullWidth euiFieldSearch--compressed"
                                          defaultValue=""
                                          onKeyUp={[Function]}
                                          placeholder="Search threat detectors"
                                          type="search"
                                        />
                                      </EuiValidatableControl>
                                      <EuiFormControlLayoutIcons
                                        compressed={true}
                                        icon="search"
                                        isLoading={false}
                                      >
                                        <div
                                          className="euiFormControlLayoutIcons"
                                        >
                                          <EuiFormControlLayoutCustomIcon
                                            size="s"
                                            type="search"
                                          >
                                            <span
                                              className="euiFormControlLayoutCustomIcon"
                                            >
                                              <EuiIcon
                                                aria-hidden="true"
                                                className="euiFormControlLayoutCustomIcon__icon"
                                                size="s"
                                                type="search"
                                              >
                                                EuiIconMock
                                              </EuiIcon>
                                            </span>
                                          </EuiFormControlLayoutCustomIcon>
                                        </div>
                                      </EuiFormControlLayoutIcons>
                                    </div>
                                  </div>
                                </EuiFormControlLayout>
                              </EuiFieldSearch>
                            </EuiSearchBox>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          className="euiSearchBar__filtersHolder"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero euiSearchBar__filtersHolder"
                          >
                            <EuiSearchFilters
                              filters={
                                Array [
                                  Object {
                                    "compressed": true,
                                    "field": "status",
                                    "multiSelect": "or",
                                    "name": "Status",
                                    "options": Array [
                                      Object {
                                        "name": "Active",
                                        "value": "Active",
                                      },
                                    ],
                                    "type": "field_value_selection",
                                  },
                                  Object {
                                    "compressed": true,
                                    "field": "logType",
                                    "multiSelect": "or",
                                    "name": "Log type",
                                    "options": Array [],
                                    "type": "field_value_selection",
                                  },
                                ]
                              }
                              onChange={[Function]}
                              query={
                                Query {
                                  "ast": _AST {
                                    "_clauses": Array [],
                                    "_indexedClauses": Object {
                                      "field": Object {},
                                      "group": Array [],
                                      "is": Object {},
                                      "term": Array [],
                                    },
                                  },
                                  "syntax": Object {
                                    "parse": [Function],
                                    "print": [Function],
                                    "printClause": [Function],
                                  },
                                  "text": "",
                                }
                              }
                            >
                              <EuiFilterGroup>
                                <div
                                  className="euiFilterGroup"
                                >
                                  <FieldValueSelectionFilter
                                    config={
                                      Object {
                                        "compressed": true,
                                        "field": "status",
                                        "multiSelect": "or",
                                        "name": "Status",
                                        "options": Array [
                                          Object {
                                            "name": "Active",
                                            "value": "Active",
                                          },
                                        ],
                                        "type": "field_value_selection",
                                      }
                                    }
                                    index={0}
                                    onChange={[Function]}
                                    query={
                                      Query {
                                        "ast": _AST {
                                          "_clauses": Array [],
                                          "_indexedClauses": Object {
                                            "field": Object {},
                                            "group": Array [],
                                            "is": Object {},
                                            "term": Array [],
                                          },
                                        },
                                        "syntax": Object {
                                          "parse": [Function],
                                          "print": [Function],
                                          "printClause": [Function],
                                        },
                                        "text": "",
                                      }
                                    }
                                  >
                                    <EuiPopover
                                      anchorPosition="downCenter"
                                      button={
                                        <EuiFilterButton
                                          grow={true}
                                          hasActiveFilters={false}
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                          size="s"
                                        >
                                          Status
                                        </EuiFilterButton>
                                      }
                                      closePopover={[Function]}
                                      display="inlineBlock"
                                      hasArrow={true}
                                      id="field_value_selection_0"
                                      isOpen={false}
                                      ownFocus={true}
                                      panelClassName="euiFilterGroup__popoverPanel"
                                      panelPaddingSize="none"
                                    >
                                      <div
                                        className="euiPopover euiPopover--anchorDownCenter"
                                        id="field_value_selection_0"
                                      >
                                        <div
                                          className="euiPopover__anchor"
                                        >
                                          <EuiFilterButton
                                            grow={true}
                                            hasActiveFilters={false}
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            size="s"
                                          >
                                            <EuiButtonEmpty
                                              className="euiFilterButton euiFilterButton--hasIcon"
                                              color="text"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                              size="s"
                                              textProps={
                                                Object {
                                                  "className": "",
                                                }
                                              }
                                              type="button"
                                            >
                                              <button
                                                className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiFilterButton euiFilterButton--hasIcon"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButtonEmpty__content"
                                                  iconGap="m"
                                                  iconSide="right"
                                                  iconSize="m"
                                                  iconType="arrowDown"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButtonEmpty__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                  >
                                                    <EuiIcon
                                                      className="euiButtonContent__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="arrowDown"
                                                    >
                                                      EuiIconMock
                                                    </EuiIcon>
                                                    <span
                                                      className="euiButtonEmpty__text"
                                                    >
                                                      <span
                                                        className="euiFilterButton__textShift"
                                                        data-text="Status"
                                                        title="Status"
                                                      >
                                                        Status
                                                      </span>
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonEmpty>
                                          </EuiFilterButton>
                                        </div>
                                      </div>
                                    </EuiPopover>
                                  </FieldValueSelectionFilter>
                                  <FieldValueSelectionFilter
                                    config={
                                      Object {
                                        "compressed": true,
                                        "field": "logType",
                                        "multiSelect": "or",
                                        "name": "Log type",
                                        "options": Array [],
                                        "type": "field_value_selection",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                    query={
                                      Query {
                                        "ast": _AST {
                                          "_clauses": Array [],
                                          "_indexedClauses": Object {
                                            "field": Object {},
                                            "group": Array [],
                                            "is": Object {},
                                            "term": Array [],
                                          },
                                        },
                                        "syntax": Object {
                                          "parse": [Function],
                                          "print": [Function],
                                          "printClause": [Function],
                                        },
                                        "text": "",
                                      }
                                    }
                                  >
                                    <EuiPopover
                                      anchorPosition="downCenter"
                                      button={
                                        <EuiFilterButton
                                          grow={true}
                                          hasActiveFilters={false}
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                          size="s"
                                        >
                                          Log type
                                        </EuiFilterButton>
                                      }
                                      closePopover={[Function]}
                                      display="inlineBlock"
                                      hasArrow={true}
                                      id="field_value_selection_1"
                                      isOpen={false}
                                      ownFocus={true}
                                      panelClassName="euiFilterGroup__popoverPanel"
                                      panelPaddingSize="none"
                                    >
                                      <div
                                        className="euiPopover euiPopover--anchorDownCenter"
                                        id="field_value_selection_1"
                                      >
                                        <div
                                          className="euiPopover__anchor"
                                        >
                                          <EuiFilterButton
                                            grow={true}
                                            hasActiveFilters={false}
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            size="s"
                                          >
                                            <EuiButtonEmpty
                                              className="euiFilterButton euiFilterButton--hasIcon"
                                              color="text"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                              size="s"
                                              textProps={
                                                Object {
                                                  "className": "",
                                                }
                                              }
                                              type="button"
                                            >
                                              <button
                                                className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiFilterButton euiFilterButton--hasIcon"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButtonEmpty__content"
                                                  iconGap="m"
                                                  iconSide="right"
                                                  iconSize="m"
                                                  iconType="arrowDown"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButtonEmpty__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                  >
                                                    <EuiIcon
                                                      className="euiButtonContent__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="arrowDown"
                                                    >
                                                      EuiIconMock
                                                    </EuiIcon>
                                                    <span
                                                      className="euiButtonEmpty__text"
                                                    >
                                                      <span
                                                        className="euiFilterButton__textShift"
                                                        data-text="Log type"
                                                        title="Log type"
                                                      >
                                                        Log type
                                                      </span>
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonEmpty>
                                          </EuiFilterButton>
                                        </div>
                                      </div>
                                    </EuiPopover>
                                  </FieldValueSelectionFilter>
                                </div>
                              </EuiFilterGroup>
                            </EuiSearchFilters>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiSmallButton
                              data-test-subj="detectorsRefreshButton"
                              iconType="refresh"
                              onClick={[Function]}
                            >
                              <EuiButton
                                data-test-subj="detectorsRefreshButton"
                                iconType="refresh"
                                onClick={[Function]}
                                size="s"
                              >
                                <EuiButtonDisplay
                                  baseClassName="euiButton"
                                  data-test-subj="detectorsRefreshButton"
                                  disabled={false}
                                  element="button"
                                  iconType="refresh"
                                  isDisabled={false}
                                  onClick={[Function]}
                                  size="s"
                                  type="button"
                                >
                                  <button
                                    className="euiButton euiButton--primary euiButton--small"
                                    data-test-subj="detectorsRefreshButton"
                                    disabled={false}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "minWidth": undefined,
                                      }
                                    }
                                    type="button"
                                  >
                                    <EuiButtonContent
                                      className="euiButton__content"
                                      iconGap="m"
                                      iconSide="left"
                                      iconType="refresh"
                                      textProps={
                                        Object {
                                          "className": "euiButton__text",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiButtonContent euiButton__content"
                                      >
                                        <EuiIcon
                                          className="euiButtonContent__icon"
                                          color="inherit"
                                          size="m"
                                          type="refresh"
                                        >
                                          EuiIconMock
                                        </EuiIcon>
                                        <span
                                          className="euiButton__text"
                                        >
                                          Refresh
                                        </span>
                                      </span>
                                    </EuiButtonContent>
                                  </button>
                                </EuiButtonDisplay>
                              </EuiButton>
                            </EuiSmallButton>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiPopover
                              anchorPosition="downLeft"
                              button={
                                <EuiSmallButton
                                  data-test-subj="detectorsActionsButton"
                                  disabled={true}
                                  iconSide="right"
                                  iconType="arrowDown"
                                  isLoading={false}
                                  onClick={[Function]}
                                >
                                  Actions
                                </EuiSmallButton>
                              }
                              closePopover={[Function]}
                              data-test-subj="detectorsActionsPopover"
                              display="inlineBlock"
                              hasArrow={true}
                              id="detectorsActionsPopover"
                              isOpen={false}
                              ownFocus={true}
                              panelPaddingSize="none"
                            >
                              <div
                                className="euiPopover euiPopover--anchorDownLeft"
                                data-test-subj="detectorsActionsPopover"
                                id="detectorsActionsPopover"
                              >
                                <div
                                  className="euiPopover__anchor"
                                >
                                  <EuiSmallButton
                                    data-test-subj="detectorsActionsButton"
                                    disabled={true}
                                    iconSide="right"
                                    iconType="arrowDown"
                                    isLoading={false}
                                    onClick={[Function]}
                                  >
                                    <EuiButton
                                      data-test-subj="detectorsActionsButton"
                                      disabled={true}
                                      iconSide="right"
                                      iconType="arrowDown"
                                      isLoading={false}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButton"
                                        data-test-subj="detectorsActionsButton"
                                        disabled={true}
                                        element="button"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        isDisabled={true}
                                        isLoading={false}
                                        onClick={[Function]}
                                        size="s"
                                        type="button"
                                      >
                                        <button
                                          className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                                          data-test-subj="detectorsActionsButton"
                                          disabled={true}
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconGap="m"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            isLoading={false}
                                            textProps={
                                              Object {
                                                "className": "euiButton__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButton__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="m"
                                                type="arrowDown"
                                              >
                                                EuiIconMock
                                              </EuiIcon>
                                              <span
                                                className="euiButton__text"
                                              >
                                                Actions
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonDisplay>
                                    </EuiButton>
                                  </EuiSmallButton>
                                </div>
                              </div>
                            </EuiPopover>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </EuiSearchBar>
                  <EuiSpacer
                    size="l"
                  >
                    <div
                      className="euiSpacer euiSpacer--l"
                    />
                  </EuiSpacer>
                  <EuiBasicTable
                    columns={
                      Array [
                        Object {
                          "dataType": "string",
                          "field": "detectorName",
                          "name": "Detector name",
                          "render": [Function],
                          "sortable": true,
                        },
                        Object {
                          "dataType": "string",
                          "field": "status",
                          "name": "Status",
                          "sortable": true,
                        },
                        Object {
                          "dataType": "string",
                          "field": "logType",
                          "name": "Log type",
                          "render": [Function],
                          "sortable": true,
                        },
                        Object {
                          "align": "left",
                          "dataType": "number",
                          "field": "rulesCount",
                          "name": "Active rules",
                          "render": [Function],
                          "sortable": true,
                        },
                        Object {
                          "dataType": "date",
                          "field": "lastUpdatedTime",
                          "name": "Last updated time",
                          "render": [Function],
                          "sortable": true,
                        },
                      ]
                    }
                    isSelectable={true}
                    itemId={[Function]}
                    items={
                      Array [
                        Object {
                          "_id": "detector_id_1",
                          "_index": ".windows",
                          "_source": Object {
                            "createdBy": "someone",
                            "detector_type": "detector_type",
                            "enabled": true,
                            "enabled_time": 1,
                            "id": "detector_id_1",
                            "inputs": Array [
                              Object {
                                "detector_input": Object {
                                  "custom_rules": Array [
                                    Object {
                                      "_id": "rule_id_1",
                                      "_index": ".windows",
                                      "_primary_term": 1,
                                      "_source": Object {
                                        "last_update_time": "12/12/2022",
                                        "queries": Array [
                                          Object {
                                            "value": ".windows",
                                          },
                                        ],
                                        "rule": "rule_name",
                                      },
                                      "_version": 1,
                                      "id": "rule_id_1",
                                      "prePackaged": true,
                                    },
                                  ],
                                  "description": "detectorDescription",
                                  "indices": Array [
                                    ".windows",
                                  ],
                                  "pre_packaged_rules": Array [
                                    Object {
                                      "_id": "rule_id_1",
                                      "_index": ".windows",
                                      "_primary_term": 1,
                                      "_source": Object {
                                        "last_update_time": "12/12/2022",
                                        "queries": Array [
                                          Object {
                                            "value": ".windows",
                                          },
                                        ],
                                        "rule": "rule_name",
                                      },
                                      "_version": 1,
                                      "id": "rule_id_1",
                                      "prePackaged": true,
                                    },
                                  ],
                                },
                              },
                            ],
                            "last_update_time": 1,
                            "name": "detector_name",
                            "schedule": Object {
                              "period": Object {
                                "interval": 1,
                                "unit": "MINUTES",
                              },
                            },
                            "triggers": Array [
                              Object {
                                "actions": Array [
                                  Object {
                                    "destination_id": "some_destination_id_1",
                                    "id": "trigger_id_1_0",
                                    "message_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "name": "some_name",
                                    "subject_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "throttle": Object {
                                      "unit": "minutes",
                                      "value": 1,
                                    },
                                    "throttle_enabled": true,
                                  },
                                  Object {
                                    "destination_id": "some_destination_id_1",
                                    "id": "trigger_id_1_1",
                                    "message_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "name": "some_name",
                                    "subject_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "throttle": Object {
                                      "unit": "minutes",
                                      "value": 1,
                                    },
                                    "throttle_enabled": true,
                                  },
                                ],
                                "detection_types": Array [
                                  "rules",
                                ],
                                "id": "trigger_id_0",
                                "ids": Array [
                                  "rule_id_1",
                                ],
                                "name": "alert_name",
                                "sev_levels": Array [
                                  "severity_level_low",
                                ],
                                "severity": "1",
                                "tags": Array [
                                  "any.tag",
                                ],
                                "types": Array [
                                  "detector_type_1",
                                ],
                              },
                              Object {
                                "actions": Array [
                                  Object {
                                    "destination_id": "some_destination_id_1",
                                    "id": "trigger_id_1_0",
                                    "message_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "name": "some_name",
                                    "subject_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "throttle": Object {
                                      "unit": "minutes",
                                      "value": 1,
                                    },
                                    "throttle_enabled": true,
                                  },
                                  Object {
                                    "destination_id": "some_destination_id_1",
                                    "id": "trigger_id_1_1",
                                    "message_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "name": "some_name",
                                    "subject_template": Object {
                                      "lang": "some_lang",
                                      "source": "some_source",
                                    },
                                    "throttle": Object {
                                      "unit": "minutes",
                                      "value": 1,
                                    },
                                    "throttle_enabled": true,
                                  },
                                ],
                                "detection_types": Array [
                                  "rules",
                                ],
                                "id": "trigger_id_1",
                                "ids": Array [
                                  "rule_id_1",
                                ],
                                "name": "alert_name",
                                "sev_levels": Array [
                                  "severity_level_low",
                                ],
                                "severity": "1",
                                "tags": Array [
                                  "any.tag",
                                ],
                                "types": Array [
                                  "detector_type_1",
                                ],
                              },
                            ],
                            "type": "detector",
                          },
                          "detectorName": "detector_name",
                          "lastUpdatedTime": 1,
                          "logType": "detector_type",
                          "rulesCount": 2,
                          "status": "Active",
                        },
                      ]
                    }
                    loading={false}
                    noItemsMessage={
                      <EuiEmptyPrompt
                        actions={
                          Array [
                            undefined,
                          ]
                        }
                        body={
                          <EuiText
                            size="s"
                          >
                            <p>
                              There are no existing detectors.
                            </p>
                          </EuiText>
                        }
                        style={
                          Object {
                            "maxWidth": "45em",
                          }
                        }
                      />
                    }
                    onChange={[Function]}
                    pagination={
                      Object {
                        "hidePerPageOptions": undefined,
                        "pageIndex": 0,
                        "pageSize": 10,
                        "pageSizeOptions": Array [
                          10,
                          25,
                          50,
                        ],
                        "totalItemCount": 1,
                      }
                    }
                    responsive={true}
                    selection={
                      Object {
                        "onSelectionChange": [Function],
                      }
                    }
                    sorting={
                      Object {
                        "allowNeutralSort": true,
                        "sort": undefined,
                      }
                    }
                    tableLayout="fixed"
                  >
                    <div
                      className="euiBasicTable"
                    >
                      <div>
                        <EuiTableHeaderMobile>
                          <div
                            className="euiTableHeaderMobile"
                          >
                            <EuiFlexGroup
                              alignItems="baseline"
                              justifyContent="spaceBetween"
                              responsive={false}
                            >
                              <div
                                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                              >
                                <EuiFlexItem
                                  grow={false}
                                >
                                  <div
                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                  >
                                    <EuiI18n
                                      default="Select all rows"
                                      token="euiBasicTable.selectAllRows"
                                    >
                                      <EuiCheckbox
                                        aria-label="Select all rows"
                                        checked={false}
                                        compressed={false}
                                        disabled={false}
                                        id="_selection_column-checkbox_some_html_id"
                                        indeterminate={false}
                                        label="Select all rows"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="euiCheckbox"
                                        >
                                          <input
                                            aria-label="Select all rows"
                                            checked={false}
                                            className="euiCheckbox__input"
                                            disabled={false}
                                            id="_selection_column-checkbox_some_html_id"
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                          <div
                                            className="euiCheckbox__square"
                                          />
                                          <label
                                            className="euiCheckbox__label"
                                            htmlFor="_selection_column-checkbox_some_html_id"
                                          >
                                            Select all rows
                                          </label>
                                        </div>
                                      </EuiCheckbox>
                                    </EuiI18n>
                                  </div>
                                </EuiFlexItem>
                                <EuiFlexItem
                                  grow={false}
                                >
                                  <div
                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                  >
                                    <EuiTableSortMobile
                                      items={
                                        Array [
                                          Object {
                                            "isSortAscending": undefined,
                                            "isSorted": false,
                                            "key": "_data_s_detectorName_0",
                                            "name": "Detector name",
                                            "onSort": [Function],
                                          },
                                          Object {
                                            "isSortAscending": undefined,
                                            "isSorted": false,
                                            "key": "_data_s_status_1",
                                            "name": "Status",
                                            "onSort": [Function],
                                          },
                                          Object {
                                            "isSortAscending": undefined,
                                            "isSorted": false,
                                            "key": "_data_s_logType_2",
                                            "name": "Log type",
                                            "onSort": [Function],
                                          },
                                          Object {
                                            "isSortAscending": undefined,
                                            "isSorted": false,
                                            "key": "_data_s_rulesCount_3",
                                            "name": "Active rules",
                                            "onSort": [Function],
                                          },
                                          Object {
                                            "isSortAscending": undefined,
                                            "isSorted": false,
                                            "key": "_data_s_lastUpdatedTime_4",
                                            "name": "Last updated time",
                                            "onSort": [Function],
                                          },
                                        ]
                                      }
                                    >
                                      <div
                                        className="euiTableSortMobile"
                                      >
                                        <EuiPopover
                                          anchorPosition="downRight"
                                          button={
                                            <EuiButtonEmpty
                                              flush="right"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              onClick={[Function]}
                                              size="xs"
                                            >
                                              <EuiI18n
                                                default="Sorting"
                                                token="euiTableSortMobile.sorting"
                                              />
                                            </EuiButtonEmpty>
                                          }
                                          closePopover={[Function]}
                                          display="inlineBlock"
                                          hasArrow={true}
                                          isOpen={false}
                                          ownFocus={true}
                                          panelPaddingSize="none"
                                        >
                                          <div
                                            className="euiPopover euiPopover--anchorDownRight"
                                          >
                                            <div
                                              className="euiPopover__anchor"
                                            >
                                              <EuiButtonEmpty
                                                flush="right"
                                                iconSide="right"
                                                iconType="arrowDown"
                                                onClick={[Function]}
                                                size="xs"
                                              >
                                                <button
                                                  className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <EuiButtonContent
                                                    className="euiButtonEmpty__content"
                                                    iconGap="m"
                                                    iconSide="right"
                                                    iconSize="s"
                                                    iconType="arrowDown"
                                                    textProps={
                                                      Object {
                                                        "className": "euiButtonEmpty__text",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                    >
                                                      <EuiIcon
                                                        className="euiButtonContent__icon"
                                                        color="inherit"
                                                        size="s"
                                                        type="arrowDown"
                                                      >
                                                        EuiIconMock
                                                      </EuiIcon>
                                                      <span
                                                        className="euiButtonEmpty__text"
                                                      >
                                                        <EuiI18n
                                                          default="Sorting"
                                                          token="euiTableSortMobile.sorting"
                                                        >
                                                          Sorting
                                                        </EuiI18n>
                                                      </span>
                                                    </span>
                                                  </EuiButtonContent>
                                                </button>
                                              </EuiButtonEmpty>
                                            </div>
                                          </div>
                                        </EuiPopover>
                                      </div>
                                    </EuiTableSortMobile>
                                  </div>
                                </EuiFlexItem>
                              </div>
                            </EuiFlexGroup>
                          </div>
                        </EuiTableHeaderMobile>
                        <EuiTable
                          id="some_html_id"
                          responsive={true}
                          tableLayout="fixed"
                        >
                          <table
                            className="euiTable euiTable--responsive"
                            id="some_html_id"
                            tabIndex={-1}
                          >
                            <EuiScreenReaderOnly>
                              <caption
                                className="euiScreenReaderOnly euiTableCaption"
                              >
                                <EuiDelayRender
                                  delay={500}
                                />
                              </caption>
                            </EuiScreenReaderOnly>
                            <EuiTableHeader>
                              <thead>
                                <tr>
                                  <EuiTableHeaderCellCheckbox
                                    key="_selection_column_h"
                                  >
                                    <th
                                      className="euiTableHeaderCellCheckbox"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <div
                                        className="euiTableCellContent"
                                      >
                                        <EuiI18n
                                          default="Select all rows"
                                          token="euiBasicTable.selectAllRows"
                                        >
                                          <EuiCheckbox
                                            aria-label="Select all rows"
                                            checked={false}
                                            compressed={false}
                                            data-test-subj="checkboxSelectAll"
                                            disabled={false}
                                            id="_selection_column-checkbox_some_html_id"
                                            indeterminate={false}
                                            label={null}
                                            onChange={[Function]}
                                            type="inList"
                                          >
                                            <div
                                              className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                            >
                                              <input
                                                aria-label="Select all rows"
                                                checked={false}
                                                className="euiCheckbox__input"
                                                data-test-subj="checkboxSelectAll"
                                                disabled={false}
                                                id="_selection_column-checkbox_some_html_id"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <div
                                                className="euiCheckbox__square"
                                              />
                                            </div>
                                          </EuiCheckbox>
                                        </EuiI18n>
                                      </div>
                                    </th>
                                  </EuiTableHeaderCellCheckbox>
                                  <EuiTableHeaderCell
                                    align="left"
                                    data-test-subj="tableHeaderCell_detectorName_0"
                                    isSorted={false}
                                    key="_data_h_detectorName_0"
                                    onSort={[Function]}
                                  >
                                    <th
                                      aria-live="polite"
                                      aria-sort="none"
                                      className="euiTableHeaderCell"
                                      data-test-subj="tableHeaderCell_detectorName_0"
                                      role="columnheader"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <button
                                        className="euiTableHeaderButton"
                                        data-test-subj="tableHeaderSortButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <CellContents
                                          className="euiTableCellContent"
                                          isSorted={false}
                                          showSortMsg={true}
                                        >
                                          <span
                                            className="euiTableCellContent"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Detector name",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Detector name"
                                                >
                                                  Detector name
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </button>
                                    </th>
                                  </EuiTableHeaderCell>
                                  <EuiTableHeaderCell
                                    align="left"
                                    data-test-subj="tableHeaderCell_status_1"
                                    isSorted={false}
                                    key="_data_h_status_1"
                                    onSort={[Function]}
                                  >
                                    <th
                                      aria-live="polite"
                                      aria-sort="none"
                                      className="euiTableHeaderCell"
                                      data-test-subj="tableHeaderCell_status_1"
                                      role="columnheader"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <button
                                        className="euiTableHeaderButton"
                                        data-test-subj="tableHeaderSortButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <CellContents
                                          className="euiTableCellContent"
                                          isSorted={false}
                                          showSortMsg={true}
                                        >
                                          <span
                                            className="euiTableCellContent"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Status",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Status"
                                                >
                                                  Status
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </button>
                                    </th>
                                  </EuiTableHeaderCell>
                                  <EuiTableHeaderCell
                                    align="left"
                                    data-test-subj="tableHeaderCell_logType_2"
                                    isSorted={false}
                                    key="_data_h_logType_2"
                                    onSort={[Function]}
                                  >
                                    <th
                                      aria-live="polite"
                                      aria-sort="none"
                                      className="euiTableHeaderCell"
                                      data-test-subj="tableHeaderCell_logType_2"
                                      role="columnheader"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <button
                                        className="euiTableHeaderButton"
                                        data-test-subj="tableHeaderSortButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <CellContents
                                          className="euiTableCellContent"
                                          isSorted={false}
                                          showSortMsg={true}
                                        >
                                          <span
                                            className="euiTableCellContent"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Log type",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Log type"
                                                >
                                                  Log type
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </button>
                                    </th>
                                  </EuiTableHeaderCell>
                                  <EuiTableHeaderCell
                                    align="left"
                                    data-test-subj="tableHeaderCell_rulesCount_3"
                                    isSorted={false}
                                    key="_data_h_rulesCount_3"
                                    onSort={[Function]}
                                  >
                                    <th
                                      aria-live="polite"
                                      aria-sort="none"
                                      className="euiTableHeaderCell"
                                      data-test-subj="tableHeaderCell_rulesCount_3"
                                      role="columnheader"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <button
                                        className="euiTableHeaderButton"
                                        data-test-subj="tableHeaderSortButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <CellContents
                                          className="euiTableCellContent"
                                          isSorted={false}
                                          showSortMsg={true}
                                        >
                                          <span
                                            className="euiTableCellContent"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Active rules",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Active rules"
                                                >
                                                  Active rules
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </button>
                                    </th>
                                  </EuiTableHeaderCell>
                                  <EuiTableHeaderCell
                                    align="left"
                                    data-test-subj="tableHeaderCell_lastUpdatedTime_4"
                                    isSorted={false}
                                    key="_data_h_lastUpdatedTime_4"
                                    onSort={[Function]}
                                  >
                                    <th
                                      aria-live="polite"
                                      aria-sort="none"
                                      className="euiTableHeaderCell"
                                      data-test-subj="tableHeaderCell_lastUpdatedTime_4"
                                      role="columnheader"
                                      scope="col"
                                      style={
                                        Object {
                                          "width": undefined,
                                        }
                                      }
                                    >
                                      <button
                                        className="euiTableHeaderButton"
                                        data-test-subj="tableHeaderSortButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <CellContents
                                          className="euiTableCellContent"
                                          isSorted={false}
                                          showSortMsg={true}
                                        >
                                          <span
                                            className="euiTableCellContent"
                                          >
                                            <EuiInnerText>
                                              <EuiI18n
                                                default="{innerText}; {description}"
                                                token="euiTableHeaderCell.titleTextWithDesc"
                                                values={
                                                  Object {
                                                    "description": undefined,
                                                    "innerText": "Last updated time",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiTableCellContent__text"
                                                  title="Last updated time"
                                                >
                                                  Last updated time
                                                </span>
                                              </EuiI18n>
                                            </EuiInnerText>
                                          </span>
                                        </CellContents>
                                      </button>
                                    </th>
                                  </EuiTableHeaderCell>
                                </tr>
                              </thead>
                            </EuiTableHeader>
                            <EuiTableBody
                              bodyRef={[Function]}
                            >
                              <tbody>
                                <EuiTableRow
                                  isSelectable={true}
                                  isSelected={false}
                                >
                                  <tr
                                    className="euiTableRow euiTableRow-isSelectable"
                                  >
                                    <EuiTableRowCellCheckbox
                                      key="_selection_column_detector_id_1"
                                    >
                                      <td
                                        className="euiTableRowCellCheckbox"
                                      >
                                        <div
                                          className="euiTableCellContent"
                                        >
                                          <EuiI18n
                                            default="Select this row"
                                            token="euiBasicTable.selectThisRow"
                                          >
                                            <EuiCheckbox
                                              aria-label="Select this row"
                                              checked={false}
                                              compressed={false}
                                              data-test-subj="checkboxSelectRow-detector_id_1"
                                              disabled={false}
                                              id="_selection_column_detector_id_1-checkbox"
                                              indeterminate={false}
                                              onChange={[Function]}
                                              title="Select this row"
                                              type="inList"
                                            >
                                              <div
                                                className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                              >
                                                <input
                                                  aria-label="Select this row"
                                                  checked={false}
                                                  className="euiCheckbox__input"
                                                  data-test-subj="checkboxSelectRow-detector_id_1"
                                                  disabled={false}
                                                  id="_selection_column_detector_id_1-checkbox"
                                                  onChange={[Function]}
                                                  title="Select this row"
                                                  type="checkbox"
                                                />
                                                <div
                                                  className="euiCheckbox__square"
                                                />
                                              </div>
                                            </EuiCheckbox>
                                          </EuiI18n>
                                        </div>
                                      </td>
                                    </EuiTableRowCellCheckbox>
                                    <EuiTableRowCell
                                      align="left"
                                      key="_data_column_detectorName_detector_id_1_0"
                                      mobileOptions={
                                        Object {
                                          "header": "Detector name",
                                          "render": undefined,
                                        }
                                      }
                                      setScopeRow={false}
                                      textOnly={false}
                                    >
                                      <td
                                        className="euiTableRowCell"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <div
                                          className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                        >
                                          Detector name
                                        </div>
                                        <div
                                          className="euiTableCellContent euiTableCellContent--overflowingContent"
                                        >
                                          <EuiLink
                                            className=""
                                            key=".0"
                                            onClick={[Function]}
                                          >
                                            <button
                                              className="euiLink euiLink--primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              detector_name
                                            </button>
                                          </EuiLink>
                                        </div>
                                      </td>
                                    </EuiTableRowCell>
                                    <EuiTableRowCell
                                      align="left"
                                      key="_data_column_status_detector_id_1_1"
                                      mobileOptions={
                                        Object {
                                          "header": "Status",
                                          "render": undefined,
                                        }
                                      }
                                      setScopeRow={false}
                                      textOnly={true}
                                    >
                                      <td
                                        className="euiTableRowCell"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <div
                                          className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                        >
                                          Status
                                        </div>
                                        <div
                                          className="euiTableCellContent"
                                        >
                                          <span
                                            className="euiTableCellContent__text"
                                          >
                                            Active
                                          </span>
                                        </div>
                                      </td>
                                    </EuiTableRowCell>
                                    <EuiTableRowCell
                                      align="left"
                                      key="_data_column_logType_detector_id_1_2"
                                      mobileOptions={
                                        Object {
                                          "header": "Log type",
                                          "render": undefined,
                                        }
                                      }
                                      setScopeRow={false}
                                      textOnly={false}
                                    >
                                      <td
                                        className="euiTableRowCell"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <div
                                          className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                        >
                                          Log type
                                        </div>
                                        <div
                                          className="euiTableCellContent euiTableCellContent--overflowingContent"
                                        >
                                          -
                                        </div>
                                      </td>
                                    </EuiTableRowCell>
                                    <EuiTableRowCell
                                      align="left"
                                      key="_data_column_rulesCount_detector_id_1_3"
                                      mobileOptions={
                                        Object {
                                          "header": "Active rules",
                                          "render": undefined,
                                        }
                                      }
                                      setScopeRow={false}
                                      textOnly={false}
                                    >
                                      <td
                                        className="euiTableRowCell"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <div
                                          className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                        >
                                          Active rules
                                        </div>
                                        <div
                                          className="euiTableCellContent euiTableCellContent--overflowingContent"
                                        >
                                          2
                                        </div>
                                      </td>
                                    </EuiTableRowCell>
                                    <EuiTableRowCell
                                      align="left"
                                      key="_data_column_lastUpdatedTime_detector_id_1_4"
                                      mobileOptions={
                                        Object {
                                          "header": "Last updated time",
                                          "render": undefined,
                                        }
                                      }
                                      setScopeRow={false}
                                      textOnly={false}
                                    >
                                      <td
                                        className="euiTableRowCell"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      >
                                        <div
                                          className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                        >
                                          Last updated time
                                        </div>
                                        <div
                                          className="euiTableCellContent euiTableCellContent--overflowingContent"
                                        >
                                          2023-01-25T10:05
                                        </div>
                                      </td>
                                    </EuiTableRowCell>
                                  </tr>
                                </EuiTableRow>
                              </tbody>
                            </EuiTableBody>
                          </table>
                        </EuiTable>
                      </div>
                      <PaginationBar
                        aria-controls="some_html_id"
                        onPageChange={[Function]}
                        onPageSizeChange={[Function]}
                        pagination={
                          Object {
                            "hidePerPageOptions": undefined,
                            "pageIndex": 0,
                            "pageSize": 10,
                            "pageSizeOptions": Array [
                              10,
                              25,
                              50,
                            ],
                            "totalItemCount": 1,
                          }
                        }
                      >
                        <div>
                          <EuiSpacer
                            size="m"
                          >
                            <div
                              className="euiSpacer euiSpacer--m"
                            />
                          </EuiSpacer>
                          <EuiTablePagination
                            activePage={0}
                            aria-controls="some_html_id"
                            itemsPerPage={10}
                            itemsPerPageOptions={
                              Array [
                                10,
                                25,
                                50,
                              ]
                            }
                            onChangeItemsPerPage={[Function]}
                            onChangePage={[Function]}
                            pageCount={1}
                          >
                            <EuiFlexGroup
                              alignItems="center"
                              justifyContent="spaceBetween"
                              responsive={false}
                            >
                              <div
                                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                              >
                                <EuiFlexItem
                                  grow={false}
                                >
                                  <div
                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                  >
                                    <EuiPopover
                                      anchorPosition="upRight"
                                      button={
                                        <EuiButtonEmpty
                                          color="text"
                                          data-test-subj="tablePaginationPopoverButton"
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                          size="xs"
                                        >
                                          <EuiI18n
                                            default="Rows per page"
                                            token="euiTablePagination.rowsPerPage"
                                          />
                                          : 
                                          10
                                        </EuiButtonEmpty>
                                      }
                                      closePopover={[Function]}
                                      display="inlineBlock"
                                      hasArrow={true}
                                      isOpen={false}
                                      ownFocus={true}
                                      panelPaddingSize="none"
                                    >
                                      <div
                                        className="euiPopover euiPopover--anchorUpRight"
                                      >
                                        <div
                                          className="euiPopover__anchor"
                                        >
                                          <EuiButtonEmpty
                                            color="text"
                                            data-test-subj="tablePaginationPopoverButton"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            onClick={[Function]}
                                            size="xs"
                                          >
                                            <button
                                              className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--xSmall"
                                              data-test-subj="tablePaginationPopoverButton"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <EuiButtonContent
                                                className="euiButtonEmpty__content"
                                                iconGap="m"
                                                iconSide="right"
                                                iconSize="s"
                                                iconType="arrowDown"
                                                textProps={
                                                  Object {
                                                    "className": "euiButtonEmpty__text",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                >
                                                  <EuiIcon
                                                    className="euiButtonContent__icon"
                                                    color="inherit"
                                                    size="s"
                                                    type="arrowDown"
                                                  >
                                                    EuiIconMock
                                                  </EuiIcon>
                                                  <span
                                                    className="euiButtonEmpty__text"
                                                  >
                                                    <EuiI18n
                                                      default="Rows per page"
                                                      token="euiTablePagination.rowsPerPage"
                                                    >
                                                      Rows per page
                                                    </EuiI18n>
                                                    : 
                                                    10
                                                  </span>
                                                </span>
                                              </EuiButtonContent>
                                            </button>
                                          </EuiButtonEmpty>
                                        </div>
                                      </div>
                                    </EuiPopover>
                                  </div>
                                </EuiFlexItem>
                                <EuiFlexItem
                                  grow={false}
                                >
                                  <div
                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                  >
                                    <EuiPagination
                                      activePage={0}
                                      aria-controls="some_html_id"
                                      onPageClick={[Function]}
                                      pageCount={1}
                                    >
                                      <nav
                                        className="euiPagination"
                                      >
                                        <EuiI18n
                                          default="Previous page, {page}"
                                          token="euiPagination.previousPage"
                                          values={
                                            Object {
                                              "page": 0,
                                            }
                                          }
                                        >
                                          <EuiI18n
                                            default="Previous page"
                                            token="euiPagination.disabledPreviousPage"
                                          >
                                            <EuiButtonIcon
                                              aria-label="Previous page"
                                              color="text"
                                              data-test-subj="pagination-button-previous"
                                              disabled={true}
                                              iconType="arrowLeft"
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Previous page"
                                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                                data-test-subj="pagination-button-previous"
                                                disabled={true}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiIcon
                                                  aria-hidden="true"
                                                  className="euiButtonIcon__icon"
                                                  color="inherit"
                                                  size="m"
                                                  type="arrowLeft"
                                                >
                                                  EuiIconMock
                                                </EuiIcon>
                                              </button>
                                            </EuiButtonIcon>
                                          </EuiI18n>
                                        </EuiI18n>
                                        <ul
                                          className="euiPagination__list"
                                        >
                                          <PaginationButton
                                            key="0"
                                            pageIndex={0}
                                          >
                                            <li
                                              className="euiPagination__item"
                                            >
                                              <EuiPaginationButton
                                                aria-controls="some_html_id"
                                                hideOnMobile={true}
                                                isActive={true}
                                                onClick={[Function]}
                                                pageIndex={0}
                                                totalPages={1}
                                              >
                                                <EuiI18n
                                                  default="Page {page} of {totalPages}"
                                                  token="euiPaginationButton.longPageString"
                                                  values={
                                                    Object {
                                                      "page": 1,
                                                      "totalPages": 1,
                                                    }
                                                  }
                                                >
                                                  <EuiI18n
                                                    default="Page {page}"
                                                    token="euiPaginationButton.shortPageString"
                                                    values={
                                                      Object {
                                                        "page": 1,
                                                      }
                                                    }
                                                  >
                                                    <EuiButtonEmpty
                                                      aria-controls="some_html_id"
                                                      aria-current={true}
                                                      aria-label="Page 1 of 1"
                                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                      color="text"
                                                      data-test-subj="pagination-button-0"
                                                      href="#some_html_id"
                                                      isDisabled={true}
                                                      onClick={[Function]}
                                                      size="s"
                                                    >
                                                      <button
                                                        aria-controls="some_html_id"
                                                        aria-current={true}
                                                        aria-label="Page 1 of 1"
                                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                        data-test-subj="pagination-button-0"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiButtonContent
                                                          className="euiButtonEmpty__content"
                                                          iconGap="m"
                                                          iconSide="left"
                                                          iconSize="m"
                                                          textProps={
                                                            Object {
                                                              "className": "euiButtonEmpty__text",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiButtonContent euiButtonEmpty__content"
                                                          >
                                                            <span
                                                              className="euiButtonEmpty__text"
                                                            >
                                                              1
                                                            </span>
                                                          </span>
                                                        </EuiButtonContent>
                                                      </button>
                                                    </EuiButtonEmpty>
                                                  </EuiI18n>
                                                </EuiI18n>
                                              </EuiPaginationButton>
                                            </li>
                                          </PaginationButton>
                                        </ul>
                                        <EuiI18n
                                          default="Next page, {page}"
                                          token="euiPagination.nextPage"
                                          values={
                                            Object {
                                              "page": 2,
                                            }
                                          }
                                        >
                                          <EuiI18n
                                            default="Next page"
                                            token="euiPagination.disabledNextPage"
                                          >
                                            <EuiButtonIcon
                                              aria-label="Next page"
                                              color="text"
                                              data-test-subj="pagination-button-next"
                                              disabled={true}
                                              iconType="arrowRight"
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Next page"
                                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                                data-test-subj="pagination-button-next"
                                                disabled={true}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiIcon
                                                  aria-hidden="true"
                                                  className="euiButtonIcon__icon"
                                                  color="inherit"
                                                  size="m"
                                                  type="arrowRight"
                                                >
                                                  EuiIconMock
                                                </EuiIcon>
                                              </button>
                                            </EuiButtonIcon>
                                          </EuiI18n>
                                        </EuiI18n>
                                      </nav>
                                    </EuiPagination>
                                  </div>
                                </EuiFlexItem>
                              </div>
                            </EuiFlexGroup>
                          </EuiTablePagination>
                        </div>
                      </PaginationBar>
                    </div>
                  </EuiBasicTable>
                </div>
              </EuiInMemoryTable>
            </div>
          </EuiPanel>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
</Detectors>
`;
