// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Alerts /> spec renders the component 1`] = `
<withRouter(Alerts)
  alertService={
    AlertService {
      "acknowledgeAlerts": [Function],
      "dataSourceEnabled": undefined,
      "getAlerts": [Function],
      "getThreatIntelAlerts": [Function],
      "osDriver": Object {
        "delete": [MockFunction],
        "get": [MockFunction],
        "head": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
      "updateThreatIntelAlertsState": [Function],
    }
  }
  dateTimeFilter={
    Object {
      "endTime": "now",
      "startTime": "now-24h",
    }
  }
  detectorService={
    DetectorService {
      "createDetector": [Function],
      "dataSourceEnabled": undefined,
      "deleteDetector": [Function],
      "getDetector": [Function],
      "getDetectors": [Function],
      "osDriver": Object {
        "delete": [MockFunction],
        "get": [MockFunction],
        "head": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
      "searchDetectors": [Function],
      "updateDetector": [Function],
    }
  }
  findingService={
    FindingsService {
      "getFindings": [Function],
      "getThreatIntelFindings": [Function],
      "httpClient": [MockFunction],
      "notifications": undefined,
    }
  }
  match={[MockFunction]}
  notifications={
    Object {
      "toasts": Object {
        "addDanger": [MockFunction],
        "addInfo": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
      },
    }
  }
  opensearchService={
    OpenSearchService {
      "getDocuments": [Function],
      "getIndexPatterns": [Function],
      "getPlugins": [Function],
      "httpClient": [MockFunction],
      "savedObjectsClient": Object {
        "delete": [MockFunction],
        "get": [MockFunction],
        "head": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
    }
  }
  ruleService={
    RuleService {
      "createRule": [Function],
      "deleteRule": [Function],
      "getRules": [Function],
      "httpClient": [MockFunction],
      "updateRule": [Function],
    }
  }
  setDateTimeFilter={[MockFunction]}
>
  <Alerts
    alertService={
      AlertService {
        "acknowledgeAlerts": [Function],
        "dataSourceEnabled": undefined,
        "getAlerts": [Function],
        "getThreatIntelAlerts": [Function],
        "osDriver": Object {
          "delete": [MockFunction],
          "get": [MockFunction],
          "head": [MockFunction],
          "post": [MockFunction],
          "put": [MockFunction],
        },
        "updateThreatIntelAlertsState": [Function],
      }
    }
    dateTimeFilter={
      Object {
        "endTime": "now",
        "startTime": "now-24h",
      }
    }
    detectorService={
      DetectorService {
        "createDetector": [Function],
        "dataSourceEnabled": undefined,
        "deleteDetector": [Function],
        "getDetector": [Function],
        "getDetectors": [Function],
        "osDriver": Object {
          "delete": [MockFunction],
          "get": [MockFunction],
          "head": [MockFunction],
          "post": [MockFunction],
          "put": [MockFunction],
        },
        "searchDetectors": [Function],
        "updateDetector": [Function],
      }
    }
    findingService={
      FindingsService {
        "getFindings": [Function],
        "getThreatIntelFindings": [Function],
        "httpClient": [MockFunction],
        "notifications": undefined,
      }
    }
    history={
      Object {
        "listen": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "location": Object {
          "pathname": "",
        },
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    location={
      Object {
        "pathname": "",
      }
    }
    match={
      Object {
        "isExact": false,
        "params": Object {},
        "path": "/",
        "url": "/",
      }
    }
    notifications={
      Object {
        "toasts": Object {
          "addDanger": [MockFunction],
          "addInfo": [MockFunction],
          "addSuccess": [MockFunction],
          "addWarning": [MockFunction],
        },
      }
    }
    opensearchService={
      OpenSearchService {
        "getDocuments": [Function],
        "getIndexPatterns": [Function],
        "getPlugins": [Function],
        "httpClient": [MockFunction],
        "savedObjectsClient": Object {
          "delete": [MockFunction],
          "get": [MockFunction],
          "head": [MockFunction],
          "post": [MockFunction],
          "put": [MockFunction],
        },
      }
    }
    ruleService={
      RuleService {
        "createRule": [Function],
        "deleteRule": [Function],
        "getRules": [Function],
        "httpClient": [MockFunction],
        "updateRule": [Function],
      }
    }
    setDateTimeFilter={[MockFunction]}
  >
    <EuiFlexGroup
      direction="column"
      gutterSize="m"
    >
      <div
        className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--directionColumn euiFlexGroup--responsive"
      >
        <PageHeader
          appRightControls={
            Array [
              Object {
                "renderComponent": <EuiCompressedSuperDatePicker
                  commonlyUsedRanges={
                    Array [
                      Object {
                        "end": "now/d",
                        "label": "Today",
                        "start": "now/d",
                      },
                      Object {
                        "end": "now/w",
                        "label": "This week",
                        "start": "now/w",
                      },
                      Object {
                        "end": "now/M",
                        "label": "This month",
                        "start": "now/M",
                      },
                      Object {
                        "end": "now/y",
                        "label": "This year",
                        "start": "now/y",
                      },
                      Object {
                        "end": "now-1d/d",
                        "label": "Yesterday",
                        "start": "now-1d/d",
                      },
                      Object {
                        "end": "now",
                        "label": "Week to date",
                        "start": "now/w",
                      },
                      Object {
                        "end": "now",
                        "label": "Month to date",
                        "start": "now/M",
                      },
                      Object {
                        "end": "now",
                        "label": "Year to date",
                        "start": "now/y",
                      },
                    ]
                  }
                  compressed={true}
                  dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                  end="now"
                  isAutoRefreshOnly={false}
                  isDisabled={false}
                  isLoading={true}
                  isPaused={true}
                  onRefresh={[Function]}
                  onTimeChange={[Function]}
                  recentlyUsedRanges={
                    Array [
                      Object {
                        "end": "now",
                        "start": "now-24h",
                      },
                    ]
                  }
                  refreshInterval={0}
                  showUpdateButton={true}
                  start="now-24h"
                  timeFormat="HH:mm"
                  updateButtonProps={
                    Object {
                      "fill": false,
                    }
                  }
                />,
              },
            ]
          }
        >
          <EuiFlexItem>
            <div
              className="euiFlexItem"
            >
              <EuiFlexGroup
                gutterSize="s"
                justifyContent="spaceBetween"
              >
                <div
                  className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <EuiFlexItem>
                    <div
                      className="euiFlexItem"
                    >
                      <EuiText
                        size="s"
                      >
                        <div
                          className="euiText euiText--small"
                        >
                          <h1>
                            Security alerts
                          </h1>
                        </div>
                      </EuiText>
                    </div>
                  </EuiFlexItem>
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    >
                      <EuiCompressedSuperDatePicker
                        commonlyUsedRanges={
                          Array [
                            Object {
                              "end": "now/d",
                              "label": "Today",
                              "start": "now/d",
                            },
                            Object {
                              "end": "now/w",
                              "label": "This week",
                              "start": "now/w",
                            },
                            Object {
                              "end": "now/M",
                              "label": "This month",
                              "start": "now/M",
                            },
                            Object {
                              "end": "now/y",
                              "label": "This year",
                              "start": "now/y",
                            },
                            Object {
                              "end": "now-1d/d",
                              "label": "Yesterday",
                              "start": "now-1d/d",
                            },
                            Object {
                              "end": "now",
                              "label": "Week to date",
                              "start": "now/w",
                            },
                            Object {
                              "end": "now",
                              "label": "Month to date",
                              "start": "now/M",
                            },
                            Object {
                              "end": "now",
                              "label": "Year to date",
                              "start": "now/y",
                            },
                          ]
                        }
                        compressed={true}
                        dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                        end="now"
                        isAutoRefreshOnly={false}
                        isDisabled={false}
                        isLoading={true}
                        isPaused={true}
                        onRefresh={[Function]}
                        onTimeChange={[Function]}
                        recentlyUsedRanges={
                          Array [
                            Object {
                              "end": "now",
                              "start": "now-24h",
                            },
                          ]
                        }
                        refreshInterval={0}
                        showUpdateButton={true}
                        start="now-24h"
                        timeFormat="HH:mm"
                        updateButtonProps={
                          Object {
                            "fill": false,
                          }
                        }
                      >
                        <EuiFlexGroup
                          className="euiSuperDatePicker__flexWrapper"
                          gutterSize="s"
                          responsive={false}
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiSuperDatePicker__flexWrapper"
                          >
                            <EuiFlexItem>
                              <div
                                className="euiFlexItem"
                              >
                                <EuiFormControlLayout
                                  className="euiSuperDatePicker"
                                  compressed={true}
                                  isDisabled={false}
                                  prepend={
                                    <EuiQuickSelectPopover
                                      applyTime={[Function]}
                                      commonlyUsedRanges={
                                        Array [
                                          Object {
                                            "end": "now/d",
                                            "label": "Today",
                                            "start": "now/d",
                                          },
                                          Object {
                                            "end": "now/w",
                                            "label": "This week",
                                            "start": "now/w",
                                          },
                                          Object {
                                            "end": "now/M",
                                            "label": "This month",
                                            "start": "now/M",
                                          },
                                          Object {
                                            "end": "now/y",
                                            "label": "This year",
                                            "start": "now/y",
                                          },
                                          Object {
                                            "end": "now-1d/d",
                                            "label": "Yesterday",
                                            "start": "now-1d/d",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Week to date",
                                            "start": "now/w",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Month to date",
                                            "start": "now/M",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Year to date",
                                            "start": "now/y",
                                          },
                                        ]
                                      }
                                      dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                      end="now"
                                      isAutoRefreshOnly={false}
                                      isDisabled={false}
                                      isPaused={true}
                                      recentlyUsedRanges={
                                        Array [
                                          Object {
                                            "end": "now",
                                            "start": "now-24h",
                                          },
                                        ]
                                      }
                                      refreshInterval={0}
                                      start="now-24h"
                                    />
                                  }
                                >
                                  <div
                                    className="euiFormControlLayout euiFormControlLayout--compressed euiFormControlLayout--group euiSuperDatePicker"
                                  >
                                    <EuiQuickSelectPopover
                                      applyTime={[Function]}
                                      className="euiFormControlLayout__prepend"
                                      commonlyUsedRanges={
                                        Array [
                                          Object {
                                            "end": "now/d",
                                            "label": "Today",
                                            "start": "now/d",
                                          },
                                          Object {
                                            "end": "now/w",
                                            "label": "This week",
                                            "start": "now/w",
                                          },
                                          Object {
                                            "end": "now/M",
                                            "label": "This month",
                                            "start": "now/M",
                                          },
                                          Object {
                                            "end": "now/y",
                                            "label": "This year",
                                            "start": "now/y",
                                          },
                                          Object {
                                            "end": "now-1d/d",
                                            "label": "Yesterday",
                                            "start": "now-1d/d",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Week to date",
                                            "start": "now/w",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Month to date",
                                            "start": "now/M",
                                          },
                                          Object {
                                            "end": "now",
                                            "label": "Year to date",
                                            "start": "now/y",
                                          },
                                        ]
                                      }
                                      dateFormat="MMM D, YYYY @ HH:mm:ss.SSS"
                                      end="now"
                                      isAutoRefreshOnly={false}
                                      isDisabled={false}
                                      isPaused={true}
                                      key="0/.0"
                                      recentlyUsedRanges={
                                        Array [
                                          Object {
                                            "end": "now",
                                            "start": "now-24h",
                                          },
                                        ]
                                      }
                                      refreshInterval={0}
                                      start="now-24h"
                                    >
                                      <EuiPopover
                                        anchorClassName="euiQuickSelectPopover__anchor"
                                        anchorPosition="downLeft"
                                        button={
                                          <EuiButtonEmpty
                                            aria-label="Date quick select"
                                            className="euiFormControlLayout__prepend"
                                            data-test-subj="superDatePickerToggleQuickMenuButton"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            isDisabled={false}
                                            onClick={[Function]}
                                            size="xs"
                                            textProps={
                                              Object {
                                                "className": "euiQuickSelectPopover__buttonText",
                                              }
                                            }
                                          >
                                            <EuiIcon
                                              type="calendar"
                                            />
                                          </EuiButtonEmpty>
                                        }
                                        closePopover={[Function]}
                                        display="inlineBlock"
                                        hasArrow={true}
                                        isOpen={false}
                                        ownFocus={true}
                                        panelPaddingSize="s"
                                      >
                                        <div
                                          className="euiPopover euiPopover--anchorDownLeft"
                                        >
                                          <div
                                            className="euiPopover__anchor euiQuickSelectPopover__anchor"
                                          >
                                            <EuiButtonEmpty
                                              aria-label="Date quick select"
                                              className="euiFormControlLayout__prepend"
                                              data-test-subj="superDatePickerToggleQuickMenuButton"
                                              iconSide="right"
                                              iconType="arrowDown"
                                              isDisabled={false}
                                              onClick={[Function]}
                                              size="xs"
                                              textProps={
                                                Object {
                                                  "className": "euiQuickSelectPopover__buttonText",
                                                }
                                              }
                                            >
                                              <button
                                                aria-label="Date quick select"
                                                className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiFormControlLayout__prepend"
                                                data-test-subj="superDatePickerToggleQuickMenuButton"
                                                disabled={false}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButtonEmpty__content"
                                                  iconGap="m"
                                                  iconSide="right"
                                                  iconSize="s"
                                                  iconType="arrowDown"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButtonEmpty__text euiQuickSelectPopover__buttonText",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                  >
                                                    <EuiIcon
                                                      className="euiButtonContent__icon"
                                                      color="inherit"
                                                      size="s"
                                                      type="arrowDown"
                                                    >
                                                      EuiIconMock
                                                    </EuiIcon>
                                                    <span
                                                      className="euiButtonEmpty__text euiQuickSelectPopover__buttonText"
                                                    >
                                                      <EuiIcon
                                                        type="calendar"
                                                      >
                                                        EuiIconMock
                                                      </EuiIcon>
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonEmpty>
                                          </div>
                                        </div>
                                      </EuiPopover>
                                    </EuiQuickSelectPopover>
                                    <div
                                      className="euiFormControlLayout__childrenWrapper"
                                    >
                                      <EuiDatePickerRange
                                        className="euiDatePickerRange--inGroup"
                                        endDateControl={<div />}
                                        iconType={false}
                                        isCustom={true}
                                        startDateControl={<div />}
                                      >
                                        <div
                                          className="euiDatePickerRange euiDatePickerRange--inGroup"
                                        >
                                          <button
                                            className="euiSuperDatePicker__prettyFormat euiSuperDatePicker__prettyFormat--compressed"
                                            data-test-subj="superDatePickerShowDatesButton"
                                            disabled={false}
                                            onClick={[Function]}
                                          >
                                            Last 24 hours
                                            <span
                                              className="euiSuperDatePicker__prettyFormatLink"
                                            >
                                              <EuiI18n
                                                default="Show dates"
                                                token="euiSuperDatePicker.showDatesButtonLabel"
                                              >
                                                Show dates
                                              </EuiI18n>
                                            </span>
                                          </button>
                                        </div>
                                      </EuiDatePickerRange>
                                      <EuiFormControlLayoutIcons
                                        compressed={true}
                                      />
                                    </div>
                                  </div>
                                </EuiFormControlLayout>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiSuperUpdateButton
                                  compressed={true}
                                  data-test-subj="superDatePickerApplyTimeButton"
                                  fill={false}
                                  isDisabled={false}
                                  isLoading={true}
                                  needsUpdate={false}
                                  onClick={[Function]}
                                  showTooltip={true}
                                >
                                  <EuiToolTip
                                    delay="regular"
                                    position="bottom"
                                  >
                                    <span
                                      className="euiToolTipAnchor"
                                      onKeyUp={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <EuiButton
                                        className="euiSuperUpdateButton"
                                        color="success"
                                        data-test-subj="superDatePickerApplyTimeButton"
                                        fill={false}
                                        iconType="refresh"
                                        isDisabled={false}
                                        isLoading={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiSuperUpdateButton__text",
                                          }
                                        }
                                      >
                                        <EuiButtonDisplay
                                          baseClassName="euiButton"
                                          className="euiSuperUpdateButton"
                                          color="success"
                                          data-test-subj="superDatePickerApplyTimeButton"
                                          disabled={true}
                                          element="button"
                                          fill={false}
                                          iconType="refresh"
                                          isDisabled={true}
                                          isLoading={true}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          size="s"
                                          textProps={
                                            Object {
                                              "className": "euiSuperUpdateButton__text",
                                            }
                                          }
                                          type="button"
                                        >
                                          <button
                                            className="euiButton euiButton--success euiButton--small euiButton-isDisabled euiSuperUpdateButton"
                                            data-test-subj="superDatePickerApplyTimeButton"
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            style={
                                              Object {
                                                "minWidth": undefined,
                                              }
                                            }
                                            type="button"
                                          >
                                            <EuiButtonContent
                                              className="euiButton__content"
                                              iconGap="m"
                                              iconSide="left"
                                              iconType="refresh"
                                              isLoading={true}
                                              textProps={
                                                Object {
                                                  "className": "euiButton__text euiSuperUpdateButton__text",
                                                }
                                              }
                                            >
                                              <span
                                                className="euiButtonContent euiButton__content"
                                              >
                                                <EuiLoadingSpinner
                                                  className="euiButtonContent__spinner"
                                                  size="m"
                                                >
                                                  <span
                                                    className="euiLoadingSpinner euiLoadingSpinner--medium euiButtonContent__spinner"
                                                  />
                                                </EuiLoadingSpinner>
                                                <span
                                                  className="euiButton__text euiSuperUpdateButton__text"
                                                >
                                                  <EuiI18n
                                                    default="Updating"
                                                    token="euiSuperUpdateButton.updatingButtonLabel"
                                                  >
                                                    Updating
                                                  </EuiI18n>
                                                </span>
                                              </span>
                                            </EuiButtonContent>
                                          </button>
                                        </EuiButtonDisplay>
                                      </EuiButton>
                                    </span>
                                  </EuiToolTip>
                                </EuiSuperUpdateButton>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </EuiCompressedSuperDatePicker>
                    </div>
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </div>
          </EuiFlexItem>
        </PageHeader>
        <EuiFlexItem>
          <div
            className="euiFlexItem"
          >
            <EuiTabbedContent
              autoFocus="initial"
              initialSelectedTab={
                Object {
                  "content": <React.Fragment>
                    <EuiSpacer
                      size="m"
                    />
                    <EuiPanel>
                      <EuiFlexGroup
                        direction="column"
                      >
                        <EuiFlexItem
                          style={
                            Object {
                              "alignSelf": "flex-end",
                            }
                          }
                        >
                          <EuiFlexGroup
                            alignItems="center"
                            justifyContent="flexEnd"
                          >
                            <EuiFlexItem
                              grow={false}
                            >
                              <EuiCompressedSelect
                                id="alert-vis-groupBy"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "text": "Alert status",
                                      "value": "status",
                                    },
                                    Object {
                                      "text": "Alert severity",
                                      "value": "severity",
                                    },
                                  ]
                                }
                                prepend="Group by"
                                value="status"
                              />
                            </EuiFlexItem>
                          </EuiFlexGroup>
                        </EuiFlexItem>
                        <EuiFlexItem>
                          <EuiEmptyPrompt
                            body={
                              <p>
                                <EuiText
                                  size="s"
                                >
                                  Adjust the time range to see more results or create alert triggers in your
                                   
                                  <EuiLink
                                    href="/#/detectors"
                                  >
                                    detectors
                                  </EuiLink>
                                   to generate alerts.
                                </EuiText>
                              </p>
                            }
                            title={
                              <EuiText
                                size="s"
                              >
                                <h2>
                                  No alerts
                                </h2>
                              </EuiText>
                            }
                          />
                        </EuiFlexItem>
                      </EuiFlexGroup>
                    </EuiPanel>
                    <EuiSpacer
                      size="m"
                    />
                    <ContentPanel
                      actions={
                        Array [
                          <EuiSmallButton
                            data-test-subj="acknowledge-button"
                            disabled={true}
                            onClick={[Function]}
                          >
                            Acknowledge
                          </EuiSmallButton>,
                        ]
                      }
                      title="Alerts"
                    >
                      <EuiInMemoryTable
                        columns={
                          Array [
                            Object {
                              "dataType": "date",
                              "field": "start_time",
                              "name": "Start time",
                              "render": [Function],
                              "sortable": true,
                            },
                            Object {
                              "dataType": "string",
                              "field": "trigger_name",
                              "name": "Alert trigger name",
                              "render": [Function],
                              "sortable": false,
                            },
                            Object {
                              "dataType": "string",
                              "field": "detectorName",
                              "name": "Detector",
                              "render": [Function],
                              "sortable": true,
                            },
                            Object {
                              "dataType": "string",
                              "field": "state",
                              "name": "Status",
                              "render": [Function],
                              "sortable": true,
                            },
                            Object {
                              "dataType": "string",
                              "field": "severity",
                              "name": "Alert severity",
                              "render": [Function],
                              "sortable": true,
                            },
                            Object {
                              "actions": Array [
                                Object {
                                  "render": [Function],
                                },
                                Object {
                                  "render": [Function],
                                },
                              ],
                              "name": "Actions",
                              "sortable": false,
                            },
                          ]
                        }
                        isSelectable={true}
                        itemId={[Function]}
                        items={Array []}
                        loading={true}
                        pagination={true}
                        responsive={true}
                        search={
                          Object {
                            "box": Object {
                              "compressed": true,
                              "placeholder": "Search alerts",
                              "schema": true,
                            },
                            "filters": Array [
                              Object {
                                "compressed": true,
                                "field": "severity",
                                "multiSelect": "or",
                                "name": "Alert severity",
                                "options": Array [],
                                "type": "field_value_selection",
                              },
                              Object {
                                "compressed": true,
                                "field": "state",
                                "multiSelect": "or",
                                "name": "Status",
                                "options": Array [],
                                "type": "field_value_selection",
                              },
                            ],
                          }
                        }
                        selection={
                          Object {
                            "onSelectionChange": [Function],
                            "selectable": [Function],
                            "selectableMessage": [Function],
                          }
                        }
                        sorting={
                          Object {
                            "sort": Object {
                              "direction": "dsc",
                              "field": "start_time",
                            },
                          }
                        }
                        tableLayout="fixed"
                      />
                    </ContentPanel>
                  </React.Fragment>,
                  "id": "detection-rules",
                  "name": "Detection rules",
                }
              }
              onTabClick={[Function]}
              size="s"
              tabs={
                Array [
                  Object {
                    "content": <React.Fragment>
                      <EuiSpacer
                        size="m"
                      />
                      <EuiPanel>
                        <EuiFlexGroup
                          direction="column"
                        >
                          <EuiFlexItem
                            style={
                              Object {
                                "alignSelf": "flex-end",
                              }
                            }
                          >
                            <EuiFlexGroup
                              alignItems="center"
                              justifyContent="flexEnd"
                            >
                              <EuiFlexItem
                                grow={false}
                              >
                                <EuiCompressedSelect
                                  id="alert-vis-groupBy"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "text": "Alert status",
                                        "value": "status",
                                      },
                                      Object {
                                        "text": "Alert severity",
                                        "value": "severity",
                                      },
                                    ]
                                  }
                                  prepend="Group by"
                                  value="status"
                                />
                              </EuiFlexItem>
                            </EuiFlexGroup>
                          </EuiFlexItem>
                          <EuiFlexItem>
                            <EuiEmptyPrompt
                              body={
                                <p>
                                  <EuiText
                                    size="s"
                                  >
                                    Adjust the time range to see more results or create alert triggers in your
                                     
                                    <EuiLink
                                      href="/#/detectors"
                                    >
                                      detectors
                                    </EuiLink>
                                     to generate alerts.
                                  </EuiText>
                                </p>
                              }
                              title={
                                <EuiText
                                  size="s"
                                >
                                  <h2>
                                    No alerts
                                  </h2>
                                </EuiText>
                              }
                            />
                          </EuiFlexItem>
                        </EuiFlexGroup>
                      </EuiPanel>
                      <EuiSpacer
                        size="m"
                      />
                      <ContentPanel
                        actions={
                          Array [
                            <EuiSmallButton
                              data-test-subj="acknowledge-button"
                              disabled={true}
                              onClick={[Function]}
                            >
                              Acknowledge
                            </EuiSmallButton>,
                          ]
                        }
                        title="Alerts"
                      >
                        <EuiInMemoryTable
                          columns={
                            Array [
                              Object {
                                "dataType": "date",
                                "field": "start_time",
                                "name": "Start time",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "trigger_name",
                                "name": "Alert trigger name",
                                "render": [Function],
                                "sortable": false,
                              },
                              Object {
                                "dataType": "string",
                                "field": "detectorName",
                                "name": "Detector",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "state",
                                "name": "Status",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "severity",
                                "name": "Alert severity",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "actions": Array [
                                  Object {
                                    "render": [Function],
                                  },
                                  Object {
                                    "render": [Function],
                                  },
                                ],
                                "name": "Actions",
                                "sortable": false,
                              },
                            ]
                          }
                          isSelectable={true}
                          itemId={[Function]}
                          items={Array []}
                          loading={true}
                          pagination={true}
                          responsive={true}
                          search={
                            Object {
                              "box": Object {
                                "compressed": true,
                                "placeholder": "Search alerts",
                                "schema": true,
                              },
                              "filters": Array [
                                Object {
                                  "compressed": true,
                                  "field": "severity",
                                  "multiSelect": "or",
                                  "name": "Alert severity",
                                  "options": Array [],
                                  "type": "field_value_selection",
                                },
                                Object {
                                  "compressed": true,
                                  "field": "state",
                                  "multiSelect": "or",
                                  "name": "Status",
                                  "options": Array [],
                                  "type": "field_value_selection",
                                },
                              ],
                            }
                          }
                          selection={
                            Object {
                              "onSelectionChange": [Function],
                              "selectable": [Function],
                              "selectableMessage": [Function],
                            }
                          }
                          sorting={
                            Object {
                              "sort": Object {
                                "direction": "dsc",
                                "field": "start_time",
                              },
                            }
                          }
                          tableLayout="fixed"
                        />
                      </ContentPanel>
                    </React.Fragment>,
                    "id": "detection-rules",
                    "name": "Detection rules",
                  },
                  Object {
                    "content": <React.Fragment>
                      <EuiSpacer
                        size="m"
                      />
                      <EuiPanel>
                        <EuiFlexGroup
                          direction="column"
                        >
                          <EuiFlexItem
                            style={
                              Object {
                                "alignSelf": "flex-end",
                              }
                            }
                          >
                            <EuiFlexGroup
                              alignItems="center"
                              justifyContent="flexEnd"
                            >
                              <EuiFlexItem
                                grow={false}
                              >
                                <EuiCompressedSelect
                                  id="alert-vis-groupBy"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "text": "Alert status",
                                        "value": "status",
                                      },
                                      Object {
                                        "text": "Alert severity",
                                        "value": "severity",
                                      },
                                    ]
                                  }
                                  prepend="Group by"
                                  value="status"
                                />
                              </EuiFlexItem>
                            </EuiFlexGroup>
                          </EuiFlexItem>
                          <EuiFlexItem>
                            <EuiEmptyPrompt
                              body={
                                <p>
                                  <EuiText
                                    size="s"
                                  >
                                    Adjust the time range to see more results or create alert triggers in your
                                     
                                    <EuiLink
                                      href="/#/detectors"
                                    >
                                      detectors
                                    </EuiLink>
                                     to generate alerts.
                                  </EuiText>
                                </p>
                              }
                              title={
                                <EuiText
                                  size="s"
                                >
                                  <h2>
                                    No alerts
                                  </h2>
                                </EuiText>
                              }
                            />
                          </EuiFlexItem>
                        </EuiFlexGroup>
                      </EuiPanel>
                      <EuiSpacer
                        size="m"
                      />
                      <ContentPanel
                        actions={
                          Array [
                            <EuiSmallButton
                              data-test-subj="acknowledge-button"
                              disabled={true}
                              onClick={[Function]}
                            >
                              Acknowledge
                            </EuiSmallButton>,
                          ]
                        }
                        title="Alerts"
                      >
                        <ThreatIntelAlertsTable
                          alerts={Array []}
                          onAlertStateChange={[Function]}
                          onSelectionChange={[Function]}
                        />
                      </ContentPanel>
                    </React.Fragment>,
                    "id": "threat-intel",
                    "name": "Threat intel",
                  },
                  Object {
                    "content": <React.Fragment>
                      <EuiSpacer
                        size="m"
                      />
                      <EuiPanel>
                        <EuiFlexGroup
                          direction="column"
                        >
                          <EuiFlexItem
                            style={
                              Object {
                                "alignSelf": "flex-end",
                              }
                            }
                          >
                            <EuiFlexGroup
                              alignItems="center"
                              justifyContent="flexEnd"
                            >
                              <EuiFlexItem
                                grow={false}
                              >
                                <EuiCompressedSelect
                                  id="alert-vis-groupBy"
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      Object {
                                        "text": "Alert status",
                                        "value": "status",
                                      },
                                      Object {
                                        "text": "Alert severity",
                                        "value": "severity",
                                      },
                                    ]
                                  }
                                  prepend="Group by"
                                  value="status"
                                />
                              </EuiFlexItem>
                            </EuiFlexGroup>
                          </EuiFlexItem>
                          <EuiFlexItem>
                            <EuiEmptyPrompt
                              body={
                                <p>
                                  <EuiText
                                    size="s"
                                  >
                                    Adjust the time range to see more results or create alert triggers in your
                                     
                                    <EuiLink
                                      href="/#/detectors"
                                    >
                                      detectors
                                    </EuiLink>
                                     to generate alerts.
                                  </EuiText>
                                </p>
                              }
                              title={
                                <EuiText
                                  size="s"
                                >
                                  <h2>
                                    No alerts
                                  </h2>
                                </EuiText>
                              }
                            />
                          </EuiFlexItem>
                        </EuiFlexGroup>
                      </EuiPanel>
                      <EuiSpacer
                        size="m"
                      />
                      <ContentPanel
                        actions={
                          Array [
                            <EuiSmallButton
                              data-test-subj="acknowledge-button"
                              disabled={true}
                              onClick={[Function]}
                            >
                              Acknowledge
                            </EuiSmallButton>,
                          ]
                        }
                        title="Alerts"
                      >
                        <EuiInMemoryTable
                          columns={
                            Array [
                              Object {
                                "dataType": "date",
                                "field": "start_time",
                                "name": "Start time",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "trigger_name",
                                "name": "Alert trigger name",
                                "render": [Function],
                                "sortable": false,
                              },
                              Object {
                                "dataType": "string",
                                "field": "correlation_rule_name",
                                "name": "Correlation Rule Name",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "correlation_rule_categories",
                                "name": "Log Types",
                                "render": [Function],
                                "sortable": false,
                              },
                              Object {
                                "dataType": "string",
                                "field": "state",
                                "name": "Status",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "dataType": "string",
                                "field": "severity",
                                "name": "Alert severity",
                                "render": [Function],
                                "sortable": true,
                              },
                              Object {
                                "actions": Array [
                                  Object {
                                    "render": [Function],
                                  },
                                  Object {
                                    "render": [Function],
                                  },
                                ],
                                "name": "Actions",
                                "sortable": false,
                              },
                            ]
                          }
                          isSelectable={true}
                          itemId={[Function]}
                          items={Array []}
                          loading={true}
                          pagination={true}
                          responsive={true}
                          search={
                            Object {
                              "box": Object {
                                "compressed": true,
                                "placeholder": "Search alerts",
                                "schema": true,
                              },
                              "filters": Array [
                                Object {
                                  "compressed": true,
                                  "field": "severity",
                                  "multiSelect": "or",
                                  "name": "Alert severity",
                                  "options": Array [],
                                  "type": "field_value_selection",
                                },
                                Object {
                                  "compressed": true,
                                  "field": "state",
                                  "multiSelect": "or",
                                  "name": "Status",
                                  "options": Array [],
                                  "type": "field_value_selection",
                                },
                              ],
                            }
                          }
                          selection={
                            Object {
                              "onSelectionChange": [Function],
                              "selectable": [Function],
                              "selectableMessage": [Function],
                            }
                          }
                          sorting={
                            Object {
                              "sort": Object {
                                "direction": "dsc",
                                "field": "start_time",
                              },
                            }
                          }
                          tableLayout="fixed"
                        />
                      </ContentPanel>
                    </React.Fragment>,
                    "id": "correlations",
                    "name": <EuiToolTip
                      content="This object was created using an experimental feature. It may not appear in view if the feature is discontinued."
                      delay="regular"
                      position="top"
                    >
                      <div
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "marginRight": "4px",
                            }
                          }
                        >
                          Correlations
                        </span>
                        <EuiIcon
                          type="beaker"
                        />
                      </div>
                    </EuiToolTip>,
                  },
                ]
              }
            >
              <div>
                <EuiTabs
                  onFocus={[Function]}
                  size="s"
                >
                  <div
                    className="euiTabs euiTabs--small"
                    onFocus={[Function]}
                    role="tablist"
                  >
                    <EuiTab
                      aria-controls="some_html_id"
                      id="detection-rules"
                      isSelected={true}
                      key="detection-rules"
                      onClick={[Function]}
                    >
                      <button
                        aria-controls="some_html_id"
                        aria-selected={true}
                        className="euiTab euiTab-isSelected"
                        disabled={false}
                        id="detection-rules"
                        onClick={[Function]}
                        role="tab"
                        type="button"
                      >
                        <span
                          className="euiTab__content"
                        >
                          Detection rules
                        </span>
                      </button>
                    </EuiTab>
                    <EuiTab
                      aria-controls="some_html_id"
                      id="threat-intel"
                      isSelected={false}
                      key="threat-intel"
                      onClick={[Function]}
                    >
                      <button
                        aria-controls="some_html_id"
                        aria-selected={false}
                        className="euiTab"
                        disabled={false}
                        id="threat-intel"
                        onClick={[Function]}
                        role="tab"
                        type="button"
                      >
                        <span
                          className="euiTab__content"
                        >
                          Threat intel
                        </span>
                      </button>
                    </EuiTab>
                    <EuiTab
                      aria-controls="some_html_id"
                      id="correlations"
                      isSelected={false}
                      key="correlations"
                      onClick={[Function]}
                    >
                      <button
                        aria-controls="some_html_id"
                        aria-selected={false}
                        className="euiTab"
                        disabled={false}
                        id="correlations"
                        onClick={[Function]}
                        role="tab"
                        type="button"
                      >
                        <span
                          className="euiTab__content"
                        >
                          <EuiToolTip
                            content="This object was created using an experimental feature. It may not appear in view if the feature is discontinued."
                            delay="regular"
                            position="top"
                          >
                            <span
                              className="euiToolTipAnchor"
                              onKeyUp={[Function]}
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <div
                                onBlur={[Function]}
                                onFocus={[Function]}
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                  }
                                }
                              >
                                <span
                                  style={
                                    Object {
                                      "marginRight": "4px",
                                    }
                                  }
                                >
                                  Correlations
                                </span>
                                <EuiIcon
                                  type="beaker"
                                >
                                  EuiIconMock
                                </EuiIcon>
                              </div>
                            </span>
                          </EuiToolTip>
                        </span>
                      </button>
                    </EuiTab>
                  </div>
                </EuiTabs>
                <div
                  aria-labelledby="detection-rules"
                  id="some_html_id"
                  role="tabpanel"
                >
                  <EuiSpacer
                    size="m"
                  >
                    <div
                      className="euiSpacer euiSpacer--m"
                    />
                  </EuiSpacer>
                  <EuiPanel>
                    <div
                      className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
                    >
                      <EuiFlexGroup
                        direction="column"
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionColumn euiFlexGroup--responsive"
                        >
                          <EuiFlexItem
                            style={
                              Object {
                                "alignSelf": "flex-end",
                              }
                            }
                          >
                            <div
                              className="euiFlexItem"
                              style={
                                Object {
                                  "alignSelf": "flex-end",
                                }
                              }
                            >
                              <EuiFlexGroup
                                alignItems="center"
                                justifyContent="flexEnd"
                              >
                                <div
                                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                                >
                                  <EuiFlexItem
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero"
                                    >
                                      <EuiCompressedSelect
                                        id="alert-vis-groupBy"
                                        onChange={[Function]}
                                        options={
                                          Array [
                                            Object {
                                              "text": "Alert status",
                                              "value": "status",
                                            },
                                            Object {
                                              "text": "Alert severity",
                                              "value": "severity",
                                            },
                                          ]
                                        }
                                        prepend="Group by"
                                        value="status"
                                      >
                                        <EuiSelect
                                          compressed={true}
                                          id="alert-vis-groupBy"
                                          onChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "text": "Alert status",
                                                "value": "status",
                                              },
                                              Object {
                                                "text": "Alert severity",
                                                "value": "severity",
                                              },
                                            ]
                                          }
                                          prepend="Group by"
                                          value="status"
                                        >
                                          <EuiFormControlLayout
                                            compressed={true}
                                            fullWidth={false}
                                            icon={
                                              Object {
                                                "side": "right",
                                                "type": "arrowDown",
                                              }
                                            }
                                            inputId="alert-vis-groupBy"
                                            isLoading={false}
                                            prepend="Group by"
                                          >
                                            <div
                                              className="euiFormControlLayout euiFormControlLayout--compressed euiFormControlLayout--group"
                                            >
                                              <EuiFormLabel
                                                className="euiFormControlLayout__prepend"
                                                htmlFor="alert-vis-groupBy"
                                              >
                                                <label
                                                  className="euiFormLabel euiFormControlLayout__prepend"
                                                  htmlFor="alert-vis-groupBy"
                                                >
                                                  Group by
                                                </label>
                                              </EuiFormLabel>
                                              <div
                                                className="euiFormControlLayout__childrenWrapper"
                                              >
                                                <EuiValidatableControl>
                                                  <select
                                                    className="euiSelect euiSelect--compressed euiSelect--inGroup"
                                                    id="alert-vis-groupBy"
                                                    onChange={[Function]}
                                                    onMouseUp={[Function]}
                                                    value="status"
                                                  >
                                                    <option
                                                      key="0"
                                                      value="status"
                                                    >
                                                      Alert status
                                                    </option>
                                                    <option
                                                      key="1"
                                                      value="severity"
                                                    >
                                                      Alert severity
                                                    </option>
                                                  </select>
                                                </EuiValidatableControl>
                                                <EuiFormControlLayoutIcons
                                                  compressed={true}
                                                  icon={
                                                    Object {
                                                      "side": "right",
                                                      "type": "arrowDown",
                                                    }
                                                  }
                                                  isLoading={false}
                                                >
                                                  <div
                                                    className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                  >
                                                    <EuiFormControlLayoutCustomIcon
                                                      size="s"
                                                      type="arrowDown"
                                                    >
                                                      <span
                                                        className="euiFormControlLayoutCustomIcon"
                                                      >
                                                        <EuiIcon
                                                          aria-hidden="true"
                                                          className="euiFormControlLayoutCustomIcon__icon"
                                                          size="s"
                                                          type="arrowDown"
                                                        >
                                                          EuiIconMock
                                                        </EuiIcon>
                                                      </span>
                                                    </EuiFormControlLayoutCustomIcon>
                                                  </div>
                                                </EuiFormControlLayoutIcons>
                                              </div>
                                            </div>
                                          </EuiFormControlLayout>
                                        </EuiSelect>
                                      </EuiCompressedSelect>
                                    </div>
                                  </EuiFlexItem>
                                </div>
                              </EuiFlexGroup>
                            </div>
                          </EuiFlexItem>
                          <EuiFlexItem>
                            <div
                              className="euiFlexItem"
                            >
                              <EuiEmptyPrompt
                                body={
                                  <p>
                                    <EuiText
                                      size="s"
                                    >
                                      Adjust the time range to see more results or create alert triggers in your
                                       
                                      <EuiLink
                                        href="/#/detectors"
                                      >
                                        detectors
                                      </EuiLink>
                                       to generate alerts.
                                    </EuiText>
                                  </p>
                                }
                                title={
                                  <EuiText
                                    size="s"
                                  >
                                    <h2>
                                      No alerts
                                    </h2>
                                  </EuiText>
                                }
                              >
                                <div
                                  className="euiEmptyPrompt"
                                >
                                  <EuiTitle
                                    size="m"
                                  >
                                    <EuiText
                                      className="euiTitle euiTitle--medium"
                                      size="s"
                                    >
                                      <div
                                        className="euiText euiText--small euiTitle euiTitle--medium"
                                      >
                                        <h2>
                                          No alerts
                                        </h2>
                                      </div>
                                    </EuiText>
                                  </EuiTitle>
                                  <EuiTextColor
                                    color="subdued"
                                  >
                                    <span
                                      className="euiTextColor euiTextColor--subdued"
                                    >
                                      <EuiSpacer
                                        size="m"
                                      >
                                        <div
                                          className="euiSpacer euiSpacer--m"
                                        />
                                      </EuiSpacer>
                                      <EuiText>
                                        <div
                                          className="euiText euiText--medium"
                                        >
                                          <p>
                                            <EuiText
                                              size="s"
                                            >
                                              <div
                                                className="euiText euiText--small"
                                              >
                                                Adjust the time range to see more results or create alert triggers in your
                                                 
                                                <EuiLink
                                                  href="/#/detectors"
                                                >
                                                  <a
                                                    className="euiLink euiLink--primary"
                                                    href="/#/detectors"
                                                    rel="noreferrer"
                                                  >
                                                    detectors
                                                  </a>
                                                </EuiLink>
                                                 to generate alerts.
                                              </div>
                                            </EuiText>
                                          </p>
                                        </div>
                                      </EuiText>
                                    </span>
                                  </EuiTextColor>
                                </div>
                              </EuiEmptyPrompt>
                            </div>
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </div>
                  </EuiPanel>
                  <EuiSpacer
                    size="m"
                  >
                    <div
                      className="euiSpacer euiSpacer--m"
                    />
                  </EuiSpacer>
                  <ContentPanel
                    actions={
                      Array [
                        <EuiSmallButton
                          data-test-subj="acknowledge-button"
                          disabled={true}
                          onClick={[Function]}
                        >
                          Acknowledge
                        </EuiSmallButton>,
                      ]
                    }
                    title="Alerts"
                  >
                    <EuiPanel
                      className=""
                      style={
                        Object {
                          "padding": "16px",
                        }
                      }
                    >
                      <div
                        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
                        style={
                          Object {
                            "padding": "16px",
                          }
                        }
                      >
                        <EuiFlexGroup
                          alignItems="center"
                          justifyContent="spaceBetween"
                          style={
                            Object {
                              "padding": "0px 10px",
                            }
                          }
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                            style={
                              Object {
                                "padding": "0px 10px",
                              }
                            }
                          >
                            <EuiFlexItem>
                              <div
                                className="euiFlexItem"
                              >
                                <EuiText
                                  size="s"
                                >
                                  <div
                                    className="euiText euiText--small"
                                  >
                                    <h3>
                                      Alerts
                                    </h3>
                                  </div>
                                </EuiText>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiFlexGroup
                                  alignItems="center"
                                  justifyContent="spaceBetween"
                                >
                                  <div
                                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                                  >
                                    <EuiFlexItem
                                      key="0"
                                    >
                                      <div
                                        className="euiFlexItem"
                                      >
                                        <EuiSmallButton
                                          data-test-subj="acknowledge-button"
                                          disabled={true}
                                          onClick={[Function]}
                                        >
                                          <EuiButton
                                            data-test-subj="acknowledge-button"
                                            disabled={true}
                                            onClick={[Function]}
                                            size="s"
                                          >
                                            <EuiButtonDisplay
                                              baseClassName="euiButton"
                                              data-test-subj="acknowledge-button"
                                              disabled={true}
                                              element="button"
                                              isDisabled={true}
                                              onClick={[Function]}
                                              size="s"
                                              type="button"
                                            >
                                              <button
                                                className="euiButton euiButton--primary euiButton--small euiButton-isDisabled"
                                                data-test-subj="acknowledge-button"
                                                disabled={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "minWidth": undefined,
                                                  }
                                                }
                                                type="button"
                                              >
                                                <EuiButtonContent
                                                  className="euiButton__content"
                                                  iconGap="m"
                                                  iconSide="left"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButton__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButton__content"
                                                  >
                                                    <span
                                                      className="euiButton__text"
                                                    >
                                                      Acknowledge
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </button>
                                            </EuiButtonDisplay>
                                          </EuiButton>
                                        </EuiSmallButton>
                                      </div>
                                    </EuiFlexItem>
                                  </div>
                                </EuiFlexGroup>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                        <EuiHorizontalRule
                          margin="xs"
                        >
                          <hr
                            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
                          />
                        </EuiHorizontalRule>
                        <div
                          style={
                            Object {
                              "padding": "0px 10px",
                            }
                          }
                        >
                          <EuiInMemoryTable
                            columns={
                              Array [
                                Object {
                                  "dataType": "date",
                                  "field": "start_time",
                                  "name": "Start time",
                                  "render": [Function],
                                  "sortable": true,
                                },
                                Object {
                                  "dataType": "string",
                                  "field": "trigger_name",
                                  "name": "Alert trigger name",
                                  "render": [Function],
                                  "sortable": false,
                                },
                                Object {
                                  "dataType": "string",
                                  "field": "detectorName",
                                  "name": "Detector",
                                  "render": [Function],
                                  "sortable": true,
                                },
                                Object {
                                  "dataType": "string",
                                  "field": "state",
                                  "name": "Status",
                                  "render": [Function],
                                  "sortable": true,
                                },
                                Object {
                                  "dataType": "string",
                                  "field": "severity",
                                  "name": "Alert severity",
                                  "render": [Function],
                                  "sortable": true,
                                },
                                Object {
                                  "actions": Array [
                                    Object {
                                      "render": [Function],
                                    },
                                    Object {
                                      "render": [Function],
                                    },
                                  ],
                                  "name": "Actions",
                                  "sortable": false,
                                },
                              ]
                            }
                            isSelectable={true}
                            itemId={[Function]}
                            items={Array []}
                            loading={true}
                            pagination={true}
                            responsive={true}
                            search={
                              Object {
                                "box": Object {
                                  "compressed": true,
                                  "placeholder": "Search alerts",
                                  "schema": true,
                                },
                                "filters": Array [
                                  Object {
                                    "compressed": true,
                                    "field": "severity",
                                    "multiSelect": "or",
                                    "name": "Alert severity",
                                    "options": Array [],
                                    "type": "field_value_selection",
                                  },
                                  Object {
                                    "compressed": true,
                                    "field": "state",
                                    "multiSelect": "or",
                                    "name": "Status",
                                    "options": Array [],
                                    "type": "field_value_selection",
                                  },
                                ],
                              }
                            }
                            selection={
                              Object {
                                "onSelectionChange": [Function],
                                "selectable": [Function],
                                "selectableMessage": [Function],
                              }
                            }
                            sorting={
                              Object {
                                "sort": Object {
                                  "direction": "dsc",
                                  "field": "start_time",
                                },
                              }
                            }
                            tableLayout="fixed"
                          >
                            <div>
                              <EuiSearchBar
                                box={
                                  Object {
                                    "compressed": true,
                                    "placeholder": "Search alerts",
                                    "schema": Object {
                                      "fields": Object {
                                        "detectorName": Object {
                                          "type": "string",
                                        },
                                        "severity": Object {
                                          "type": "string",
                                        },
                                        "start_time": Object {
                                          "type": "date",
                                        },
                                        "state": Object {
                                          "type": "string",
                                        },
                                        "trigger_name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "strict": true,
                                    },
                                  }
                                }
                                filters={
                                  Array [
                                    Object {
                                      "compressed": true,
                                      "field": "severity",
                                      "multiSelect": "or",
                                      "name": "Alert severity",
                                      "options": Array [],
                                      "type": "field_value_selection",
                                    },
                                    Object {
                                      "compressed": true,
                                      "field": "state",
                                      "multiSelect": "or",
                                      "name": "Status",
                                      "options": Array [],
                                      "type": "field_value_selection",
                                    },
                                  ]
                                }
                                onChange={[Function]}
                              >
                                <EuiFlexGroup
                                  alignItems="center"
                                  gutterSize="m"
                                  wrap={true}
                                >
                                  <div
                                    className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                                  >
                                    <EuiFlexItem
                                      className="euiSearchBar__searchHolder"
                                      grow={true}
                                    >
                                      <div
                                        className="euiFlexItem euiSearchBar__searchHolder"
                                      >
                                        <EuiSearchBox
                                          compressed={true}
                                          incremental={false}
                                          isInvalid={false}
                                          onSearch={[Function]}
                                          placeholder="Search alerts"
                                          query=""
                                        >
                                          <EuiFieldSearch
                                            aria-label="This is a search bar. After typing your query, hit enter to filter the results lower in the page."
                                            compressed={true}
                                            defaultValue=""
                                            fullWidth={true}
                                            incremental={false}
                                            inputRef={[Function]}
                                            isClearable={true}
                                            isInvalid={false}
                                            isLoading={false}
                                            onSearch={[Function]}
                                            placeholder="Search alerts"
                                          >
                                            <EuiFormControlLayout
                                              compressed={true}
                                              fullWidth={true}
                                              icon="search"
                                              isLoading={false}
                                            >
                                              <div
                                                className="euiFormControlLayout euiFormControlLayout--fullWidth euiFormControlLayout--compressed"
                                              >
                                                <div
                                                  className="euiFormControlLayout__childrenWrapper"
                                                >
                                                  <EuiValidatableControl
                                                    isInvalid={false}
                                                  >
                                                    <input
                                                      aria-label="This is a search bar. After typing your query, hit enter to filter the results lower in the page."
                                                      className="euiFieldSearch euiFieldSearch--fullWidth euiFieldSearch--compressed"
                                                      defaultValue=""
                                                      onKeyUp={[Function]}
                                                      placeholder="Search alerts"
                                                      type="search"
                                                    />
                                                  </EuiValidatableControl>
                                                  <EuiFormControlLayoutIcons
                                                    compressed={true}
                                                    icon="search"
                                                    isLoading={false}
                                                  >
                                                    <div
                                                      className="euiFormControlLayoutIcons"
                                                    >
                                                      <EuiFormControlLayoutCustomIcon
                                                        size="s"
                                                        type="search"
                                                      >
                                                        <span
                                                          className="euiFormControlLayoutCustomIcon"
                                                        >
                                                          <EuiIcon
                                                            aria-hidden="true"
                                                            className="euiFormControlLayoutCustomIcon__icon"
                                                            size="s"
                                                            type="search"
                                                          >
                                                            EuiIconMock
                                                          </EuiIcon>
                                                        </span>
                                                      </EuiFormControlLayoutCustomIcon>
                                                    </div>
                                                  </EuiFormControlLayoutIcons>
                                                </div>
                                              </div>
                                            </EuiFormControlLayout>
                                          </EuiFieldSearch>
                                        </EuiSearchBox>
                                      </div>
                                    </EuiFlexItem>
                                    <EuiFlexItem
                                      className="euiSearchBar__filtersHolder"
                                      grow={false}
                                    >
                                      <div
                                        className="euiFlexItem euiFlexItem--flexGrowZero euiSearchBar__filtersHolder"
                                      >
                                        <EuiSearchFilters
                                          filters={
                                            Array [
                                              Object {
                                                "compressed": true,
                                                "field": "severity",
                                                "multiSelect": "or",
                                                "name": "Alert severity",
                                                "options": Array [],
                                                "type": "field_value_selection",
                                              },
                                              Object {
                                                "compressed": true,
                                                "field": "state",
                                                "multiSelect": "or",
                                                "name": "Status",
                                                "options": Array [],
                                                "type": "field_value_selection",
                                              },
                                            ]
                                          }
                                          onChange={[Function]}
                                          query={
                                            Query {
                                              "ast": _AST {
                                                "_clauses": Array [],
                                                "_indexedClauses": Object {
                                                  "field": Object {},
                                                  "group": Array [],
                                                  "is": Object {},
                                                  "term": Array [],
                                                },
                                              },
                                              "syntax": Object {
                                                "parse": [Function],
                                                "print": [Function],
                                                "printClause": [Function],
                                              },
                                              "text": "",
                                            }
                                          }
                                        >
                                          <EuiFilterGroup>
                                            <div
                                              className="euiFilterGroup"
                                            >
                                              <FieldValueSelectionFilter
                                                config={
                                                  Object {
                                                    "compressed": true,
                                                    "field": "severity",
                                                    "multiSelect": "or",
                                                    "name": "Alert severity",
                                                    "options": Array [],
                                                    "type": "field_value_selection",
                                                  }
                                                }
                                                index={0}
                                                onChange={[Function]}
                                                query={
                                                  Query {
                                                    "ast": _AST {
                                                      "_clauses": Array [],
                                                      "_indexedClauses": Object {
                                                        "field": Object {},
                                                        "group": Array [],
                                                        "is": Object {},
                                                        "term": Array [],
                                                      },
                                                    },
                                                    "syntax": Object {
                                                      "parse": [Function],
                                                      "print": [Function],
                                                      "printClause": [Function],
                                                    },
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <EuiPopover
                                                  anchorPosition="downCenter"
                                                  button={
                                                    <EuiFilterButton
                                                      grow={true}
                                                      hasActiveFilters={false}
                                                      iconSide="right"
                                                      iconType="arrowDown"
                                                      onClick={[Function]}
                                                      size="s"
                                                    >
                                                      Alert severity
                                                    </EuiFilterButton>
                                                  }
                                                  closePopover={[Function]}
                                                  display="inlineBlock"
                                                  hasArrow={true}
                                                  id="field_value_selection_0"
                                                  isOpen={false}
                                                  ownFocus={true}
                                                  panelClassName="euiFilterGroup__popoverPanel"
                                                  panelPaddingSize="none"
                                                >
                                                  <div
                                                    className="euiPopover euiPopover--anchorDownCenter"
                                                    id="field_value_selection_0"
                                                  >
                                                    <div
                                                      className="euiPopover__anchor"
                                                    >
                                                      <EuiFilterButton
                                                        grow={true}
                                                        hasActiveFilters={false}
                                                        iconSide="right"
                                                        iconType="arrowDown"
                                                        onClick={[Function]}
                                                        size="s"
                                                      >
                                                        <EuiButtonEmpty
                                                          className="euiFilterButton euiFilterButton--hasIcon"
                                                          color="text"
                                                          iconSide="right"
                                                          iconType="arrowDown"
                                                          onClick={[Function]}
                                                          size="s"
                                                          textProps={
                                                            Object {
                                                              "className": "",
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <button
                                                            className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiFilterButton euiFilterButton--hasIcon"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <EuiButtonContent
                                                              className="euiButtonEmpty__content"
                                                              iconGap="m"
                                                              iconSide="right"
                                                              iconSize="m"
                                                              iconType="arrowDown"
                                                              textProps={
                                                                Object {
                                                                  "className": "euiButtonEmpty__text",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                              >
                                                                <EuiIcon
                                                                  className="euiButtonContent__icon"
                                                                  color="inherit"
                                                                  size="m"
                                                                  type="arrowDown"
                                                                >
                                                                  EuiIconMock
                                                                </EuiIcon>
                                                                <span
                                                                  className="euiButtonEmpty__text"
                                                                >
                                                                  <span
                                                                    className="euiFilterButton__textShift"
                                                                    data-text="Alert severity"
                                                                    title="Alert severity"
                                                                  >
                                                                    Alert severity
                                                                  </span>
                                                                </span>
                                                              </span>
                                                            </EuiButtonContent>
                                                          </button>
                                                        </EuiButtonEmpty>
                                                      </EuiFilterButton>
                                                    </div>
                                                  </div>
                                                </EuiPopover>
                                              </FieldValueSelectionFilter>
                                              <FieldValueSelectionFilter
                                                config={
                                                  Object {
                                                    "compressed": true,
                                                    "field": "state",
                                                    "multiSelect": "or",
                                                    "name": "Status",
                                                    "options": Array [],
                                                    "type": "field_value_selection",
                                                  }
                                                }
                                                index={1}
                                                onChange={[Function]}
                                                query={
                                                  Query {
                                                    "ast": _AST {
                                                      "_clauses": Array [],
                                                      "_indexedClauses": Object {
                                                        "field": Object {},
                                                        "group": Array [],
                                                        "is": Object {},
                                                        "term": Array [],
                                                      },
                                                    },
                                                    "syntax": Object {
                                                      "parse": [Function],
                                                      "print": [Function],
                                                      "printClause": [Function],
                                                    },
                                                    "text": "",
                                                  }
                                                }
                                              >
                                                <EuiPopover
                                                  anchorPosition="downCenter"
                                                  button={
                                                    <EuiFilterButton
                                                      grow={true}
                                                      hasActiveFilters={false}
                                                      iconSide="right"
                                                      iconType="arrowDown"
                                                      onClick={[Function]}
                                                      size="s"
                                                    >
                                                      Status
                                                    </EuiFilterButton>
                                                  }
                                                  closePopover={[Function]}
                                                  display="inlineBlock"
                                                  hasArrow={true}
                                                  id="field_value_selection_1"
                                                  isOpen={false}
                                                  ownFocus={true}
                                                  panelClassName="euiFilterGroup__popoverPanel"
                                                  panelPaddingSize="none"
                                                >
                                                  <div
                                                    className="euiPopover euiPopover--anchorDownCenter"
                                                    id="field_value_selection_1"
                                                  >
                                                    <div
                                                      className="euiPopover__anchor"
                                                    >
                                                      <EuiFilterButton
                                                        grow={true}
                                                        hasActiveFilters={false}
                                                        iconSide="right"
                                                        iconType="arrowDown"
                                                        onClick={[Function]}
                                                        size="s"
                                                      >
                                                        <EuiButtonEmpty
                                                          className="euiFilterButton euiFilterButton--hasIcon"
                                                          color="text"
                                                          iconSide="right"
                                                          iconType="arrowDown"
                                                          onClick={[Function]}
                                                          size="s"
                                                          textProps={
                                                            Object {
                                                              "className": "",
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <button
                                                            className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiFilterButton euiFilterButton--hasIcon"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <EuiButtonContent
                                                              className="euiButtonEmpty__content"
                                                              iconGap="m"
                                                              iconSide="right"
                                                              iconSize="m"
                                                              iconType="arrowDown"
                                                              textProps={
                                                                Object {
                                                                  "className": "euiButtonEmpty__text",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                              >
                                                                <EuiIcon
                                                                  className="euiButtonContent__icon"
                                                                  color="inherit"
                                                                  size="m"
                                                                  type="arrowDown"
                                                                >
                                                                  EuiIconMock
                                                                </EuiIcon>
                                                                <span
                                                                  className="euiButtonEmpty__text"
                                                                >
                                                                  <span
                                                                    className="euiFilterButton__textShift"
                                                                    data-text="Status"
                                                                    title="Status"
                                                                  >
                                                                    Status
                                                                  </span>
                                                                </span>
                                                              </span>
                                                            </EuiButtonContent>
                                                          </button>
                                                        </EuiButtonEmpty>
                                                      </EuiFilterButton>
                                                    </div>
                                                  </div>
                                                </EuiPopover>
                                              </FieldValueSelectionFilter>
                                            </div>
                                          </EuiFilterGroup>
                                        </EuiSearchFilters>
                                      </div>
                                    </EuiFlexItem>
                                  </div>
                                </EuiFlexGroup>
                              </EuiSearchBar>
                              <EuiSpacer
                                size="l"
                              >
                                <div
                                  className="euiSpacer euiSpacer--l"
                                />
                              </EuiSpacer>
                              <EuiBasicTable
                                columns={
                                  Array [
                                    Object {
                                      "dataType": "date",
                                      "field": "start_time",
                                      "name": "Start time",
                                      "render": [Function],
                                      "sortable": true,
                                    },
                                    Object {
                                      "dataType": "string",
                                      "field": "trigger_name",
                                      "name": "Alert trigger name",
                                      "render": [Function],
                                      "sortable": false,
                                    },
                                    Object {
                                      "dataType": "string",
                                      "field": "detectorName",
                                      "name": "Detector",
                                      "render": [Function],
                                      "sortable": true,
                                    },
                                    Object {
                                      "dataType": "string",
                                      "field": "state",
                                      "name": "Status",
                                      "render": [Function],
                                      "sortable": true,
                                    },
                                    Object {
                                      "dataType": "string",
                                      "field": "severity",
                                      "name": "Alert severity",
                                      "render": [Function],
                                      "sortable": true,
                                    },
                                    Object {
                                      "actions": Array [
                                        Object {
                                          "render": [Function],
                                        },
                                        Object {
                                          "render": [Function],
                                        },
                                      ],
                                      "name": "Actions",
                                      "sortable": false,
                                    },
                                  ]
                                }
                                isSelectable={true}
                                itemId={[Function]}
                                items={Array []}
                                loading={true}
                                noItemsMessage="No items found"
                                onChange={[Function]}
                                pagination={
                                  Object {
                                    "hidePerPageOptions": undefined,
                                    "pageIndex": 0,
                                    "pageSize": 10,
                                    "pageSizeOptions": Array [
                                      10,
                                      25,
                                      50,
                                    ],
                                    "totalItemCount": 0,
                                  }
                                }
                                responsive={true}
                                selection={
                                  Object {
                                    "onSelectionChange": [Function],
                                    "selectable": [Function],
                                    "selectableMessage": [Function],
                                  }
                                }
                                sorting={
                                  Object {
                                    "allowNeutralSort": true,
                                    "sort": Object {
                                      "direction": "dsc",
                                      "field": "Start time",
                                    },
                                  }
                                }
                                tableLayout="fixed"
                              >
                                <div
                                  className="euiBasicTable euiBasicTable-loading"
                                >
                                  <div>
                                    <EuiTableHeaderMobile>
                                      <div
                                        className="euiTableHeaderMobile"
                                      >
                                        <EuiFlexGroup
                                          alignItems="baseline"
                                          justifyContent="spaceBetween"
                                          responsive={false}
                                        >
                                          <div
                                            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                                          >
                                            <EuiFlexItem
                                              grow={false}
                                            >
                                              <div
                                                className="euiFlexItem euiFlexItem--flexGrowZero"
                                              >
                                                <EuiI18n
                                                  default="Select all rows"
                                                  token="euiBasicTable.selectAllRows"
                                                >
                                                  <EuiCheckbox
                                                    aria-label="Select all rows"
                                                    checked={false}
                                                    compressed={false}
                                                    disabled={true}
                                                    id="_selection_column-checkbox_some_html_id"
                                                    indeterminate={false}
                                                    label="Select all rows"
                                                    onChange={[Function]}
                                                  >
                                                    <div
                                                      className="euiCheckbox"
                                                    >
                                                      <input
                                                        aria-label="Select all rows"
                                                        checked={false}
                                                        className="euiCheckbox__input"
                                                        disabled={true}
                                                        id="_selection_column-checkbox_some_html_id"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                      <div
                                                        className="euiCheckbox__square"
                                                      />
                                                      <label
                                                        className="euiCheckbox__label"
                                                        htmlFor="_selection_column-checkbox_some_html_id"
                                                      >
                                                        Select all rows
                                                      </label>
                                                    </div>
                                                  </EuiCheckbox>
                                                </EuiI18n>
                                              </div>
                                            </EuiFlexItem>
                                            <EuiFlexItem
                                              grow={false}
                                            >
                                              <div
                                                className="euiFlexItem euiFlexItem--flexGrowZero"
                                              >
                                                <EuiTableSortMobile
                                                  items={
                                                    Array [
                                                      Object {
                                                        "isSortAscending": false,
                                                        "isSorted": true,
                                                        "key": "_data_s_start_time_0",
                                                        "name": "Start time",
                                                        "onSort": [Function],
                                                      },
                                                      Object {
                                                        "isSortAscending": undefined,
                                                        "isSorted": false,
                                                        "key": "_data_s_detectorName_2",
                                                        "name": "Detector",
                                                        "onSort": [Function],
                                                      },
                                                      Object {
                                                        "isSortAscending": undefined,
                                                        "isSorted": false,
                                                        "key": "_data_s_state_3",
                                                        "name": "Status",
                                                        "onSort": [Function],
                                                      },
                                                      Object {
                                                        "isSortAscending": undefined,
                                                        "isSorted": false,
                                                        "key": "_data_s_severity_4",
                                                        "name": "Alert severity",
                                                        "onSort": [Function],
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="euiTableSortMobile"
                                                  >
                                                    <EuiPopover
                                                      anchorPosition="downRight"
                                                      button={
                                                        <EuiButtonEmpty
                                                          flush="right"
                                                          iconSide="right"
                                                          iconType="arrowDown"
                                                          onClick={[Function]}
                                                          size="xs"
                                                        >
                                                          <EuiI18n
                                                            default="Sorting"
                                                            token="euiTableSortMobile.sorting"
                                                          />
                                                        </EuiButtonEmpty>
                                                      }
                                                      closePopover={[Function]}
                                                      display="inlineBlock"
                                                      hasArrow={true}
                                                      isOpen={false}
                                                      ownFocus={true}
                                                      panelPaddingSize="none"
                                                    >
                                                      <div
                                                        className="euiPopover euiPopover--anchorDownRight"
                                                      >
                                                        <div
                                                          className="euiPopover__anchor"
                                                        >
                                                          <EuiButtonEmpty
                                                            flush="right"
                                                            iconSide="right"
                                                            iconType="arrowDown"
                                                            onClick={[Function]}
                                                            size="xs"
                                                          >
                                                            <button
                                                              className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                                              disabled={false}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <EuiButtonContent
                                                                className="euiButtonEmpty__content"
                                                                iconGap="m"
                                                                iconSide="right"
                                                                iconSize="s"
                                                                iconType="arrowDown"
                                                                textProps={
                                                                  Object {
                                                                    "className": "euiButtonEmpty__text",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                                                >
                                                                  <EuiIcon
                                                                    className="euiButtonContent__icon"
                                                                    color="inherit"
                                                                    size="s"
                                                                    type="arrowDown"
                                                                  >
                                                                    EuiIconMock
                                                                  </EuiIcon>
                                                                  <span
                                                                    className="euiButtonEmpty__text"
                                                                  >
                                                                    <EuiI18n
                                                                      default="Sorting"
                                                                      token="euiTableSortMobile.sorting"
                                                                    >
                                                                      Sorting
                                                                    </EuiI18n>
                                                                  </span>
                                                                </span>
                                                              </EuiButtonContent>
                                                            </button>
                                                          </EuiButtonEmpty>
                                                        </div>
                                                      </div>
                                                    </EuiPopover>
                                                  </div>
                                                </EuiTableSortMobile>
                                              </div>
                                            </EuiFlexItem>
                                          </div>
                                        </EuiFlexGroup>
                                      </div>
                                    </EuiTableHeaderMobile>
                                    <EuiTable
                                      id="some_html_id"
                                      responsive={true}
                                      tableLayout="fixed"
                                    >
                                      <table
                                        className="euiTable euiTable--responsive"
                                        id="some_html_id"
                                        tabIndex={-1}
                                      >
                                        <EuiScreenReaderOnly>
                                          <caption
                                            className="euiScreenReaderOnly euiTableCaption"
                                          >
                                            <EuiDelayRender
                                              delay={500}
                                            />
                                          </caption>
                                        </EuiScreenReaderOnly>
                                        <EuiTableHeader>
                                          <thead>
                                            <tr>
                                              <EuiTableHeaderCellCheckbox
                                                key="_selection_column_h"
                                              >
                                                <th
                                                  className="euiTableHeaderCellCheckbox"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="euiTableCellContent"
                                                  >
                                                    <EuiI18n
                                                      default="Select all rows"
                                                      token="euiBasicTable.selectAllRows"
                                                    >
                                                      <EuiCheckbox
                                                        aria-label="Select all rows"
                                                        checked={false}
                                                        compressed={false}
                                                        data-test-subj="checkboxSelectAll"
                                                        disabled={true}
                                                        id="_selection_column-checkbox_some_html_id"
                                                        indeterminate={false}
                                                        label={null}
                                                        onChange={[Function]}
                                                        type="inList"
                                                      >
                                                        <div
                                                          className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                                        >
                                                          <input
                                                            aria-label="Select all rows"
                                                            checked={false}
                                                            className="euiCheckbox__input"
                                                            data-test-subj="checkboxSelectAll"
                                                            disabled={true}
                                                            id="_selection_column-checkbox_some_html_id"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <div
                                                            className="euiCheckbox__square"
                                                          />
                                                        </div>
                                                      </EuiCheckbox>
                                                    </EuiI18n>
                                                  </div>
                                                </th>
                                              </EuiTableHeaderCellCheckbox>
                                              <EuiTableHeaderCell
                                                align="left"
                                                data-test-subj="tableHeaderCell_start_time_0"
                                                isSortAscending={false}
                                                isSorted={true}
                                                key="_data_h_start_time_0"
                                                onSort={[Function]}
                                              >
                                                <th
                                                  aria-live="polite"
                                                  aria-sort="descending"
                                                  className="euiTableHeaderCell"
                                                  data-test-subj="tableHeaderCell_start_time_0"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <button
                                                    className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                                    data-test-subj="tableHeaderSortButton"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <CellContents
                                                      className="euiTableCellContent"
                                                      isSortAscending={false}
                                                      isSorted={true}
                                                      showSortMsg={true}
                                                    >
                                                      <span
                                                        className="euiTableCellContent"
                                                      >
                                                        <EuiInnerText>
                                                          <EuiI18n
                                                            default="{innerText}; {description}"
                                                            token="euiTableHeaderCell.titleTextWithDesc"
                                                            values={
                                                              Object {
                                                                "description": undefined,
                                                                "innerText": "Start time",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiTableCellContent__text"
                                                              title="Start time"
                                                            >
                                                              Start time
                                                            </span>
                                                          </EuiI18n>
                                                        </EuiInnerText>
                                                        <EuiIcon
                                                          className="euiTableSortIcon"
                                                          size="m"
                                                          type="sortDown"
                                                        >
                                                          EuiIconMock
                                                        </EuiIcon>
                                                      </span>
                                                    </CellContents>
                                                  </button>
                                                </th>
                                              </EuiTableHeaderCell>
                                              <EuiTableHeaderCell
                                                align="left"
                                                data-test-subj="tableHeaderCell_trigger_name_1"
                                                key="_data_h_trigger_name_1"
                                              >
                                                <th
                                                  className="euiTableHeaderCell"
                                                  data-test-subj="tableHeaderCell_trigger_name_1"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <CellContents
                                                    className="euiTableCellContent"
                                                    showSortMsg={false}
                                                  >
                                                    <span
                                                      className="euiTableCellContent"
                                                    >
                                                      <EuiInnerText>
                                                        <EuiI18n
                                                          default="{innerText}; {description}"
                                                          token="euiTableHeaderCell.titleTextWithDesc"
                                                          values={
                                                            Object {
                                                              "description": undefined,
                                                              "innerText": "Alert trigger name",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiTableCellContent__text"
                                                            title="Alert trigger name"
                                                          >
                                                            Alert trigger name
                                                          </span>
                                                        </EuiI18n>
                                                      </EuiInnerText>
                                                    </span>
                                                  </CellContents>
                                                </th>
                                              </EuiTableHeaderCell>
                                              <EuiTableHeaderCell
                                                align="left"
                                                data-test-subj="tableHeaderCell_detectorName_2"
                                                isSorted={false}
                                                key="_data_h_detectorName_2"
                                                onSort={[Function]}
                                              >
                                                <th
                                                  aria-live="polite"
                                                  aria-sort="none"
                                                  className="euiTableHeaderCell"
                                                  data-test-subj="tableHeaderCell_detectorName_2"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <button
                                                    className="euiTableHeaderButton"
                                                    data-test-subj="tableHeaderSortButton"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <CellContents
                                                      className="euiTableCellContent"
                                                      isSorted={false}
                                                      showSortMsg={true}
                                                    >
                                                      <span
                                                        className="euiTableCellContent"
                                                      >
                                                        <EuiInnerText>
                                                          <EuiI18n
                                                            default="{innerText}; {description}"
                                                            token="euiTableHeaderCell.titleTextWithDesc"
                                                            values={
                                                              Object {
                                                                "description": undefined,
                                                                "innerText": "Detector",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiTableCellContent__text"
                                                              title="Detector"
                                                            >
                                                              Detector
                                                            </span>
                                                          </EuiI18n>
                                                        </EuiInnerText>
                                                      </span>
                                                    </CellContents>
                                                  </button>
                                                </th>
                                              </EuiTableHeaderCell>
                                              <EuiTableHeaderCell
                                                align="left"
                                                data-test-subj="tableHeaderCell_state_3"
                                                isSorted={false}
                                                key="_data_h_state_3"
                                                onSort={[Function]}
                                              >
                                                <th
                                                  aria-live="polite"
                                                  aria-sort="none"
                                                  className="euiTableHeaderCell"
                                                  data-test-subj="tableHeaderCell_state_3"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <button
                                                    className="euiTableHeaderButton"
                                                    data-test-subj="tableHeaderSortButton"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <CellContents
                                                      className="euiTableCellContent"
                                                      isSorted={false}
                                                      showSortMsg={true}
                                                    >
                                                      <span
                                                        className="euiTableCellContent"
                                                      >
                                                        <EuiInnerText>
                                                          <EuiI18n
                                                            default="{innerText}; {description}"
                                                            token="euiTableHeaderCell.titleTextWithDesc"
                                                            values={
                                                              Object {
                                                                "description": undefined,
                                                                "innerText": "Status",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiTableCellContent__text"
                                                              title="Status"
                                                            >
                                                              Status
                                                            </span>
                                                          </EuiI18n>
                                                        </EuiInnerText>
                                                      </span>
                                                    </CellContents>
                                                  </button>
                                                </th>
                                              </EuiTableHeaderCell>
                                              <EuiTableHeaderCell
                                                align="left"
                                                data-test-subj="tableHeaderCell_severity_4"
                                                isSorted={false}
                                                key="_data_h_severity_4"
                                                onSort={[Function]}
                                              >
                                                <th
                                                  aria-live="polite"
                                                  aria-sort="none"
                                                  className="euiTableHeaderCell"
                                                  data-test-subj="tableHeaderCell_severity_4"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <button
                                                    className="euiTableHeaderButton"
                                                    data-test-subj="tableHeaderSortButton"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <CellContents
                                                      className="euiTableCellContent"
                                                      isSorted={false}
                                                      showSortMsg={true}
                                                    >
                                                      <span
                                                        className="euiTableCellContent"
                                                      >
                                                        <EuiInnerText>
                                                          <EuiI18n
                                                            default="{innerText}; {description}"
                                                            token="euiTableHeaderCell.titleTextWithDesc"
                                                            values={
                                                              Object {
                                                                "description": undefined,
                                                                "innerText": "Alert severity",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="euiTableCellContent__text"
                                                              title="Alert severity"
                                                            >
                                                              Alert severity
                                                            </span>
                                                          </EuiI18n>
                                                        </EuiInnerText>
                                                      </span>
                                                    </CellContents>
                                                  </button>
                                                </th>
                                              </EuiTableHeaderCell>
                                              <EuiTableHeaderCell
                                                align="right"
                                                key="_actions_h_5"
                                              >
                                                <th
                                                  className="euiTableHeaderCell"
                                                  role="columnheader"
                                                  scope="col"
                                                  style={
                                                    Object {
                                                      "width": undefined,
                                                    }
                                                  }
                                                >
                                                  <CellContents
                                                    className="euiTableCellContent euiTableCellContent--alignRight"
                                                    showSortMsg={false}
                                                  >
                                                    <span
                                                      className="euiTableCellContent euiTableCellContent--alignRight"
                                                    >
                                                      <EuiInnerText>
                                                        <EuiI18n
                                                          default="{innerText}; {description}"
                                                          token="euiTableHeaderCell.titleTextWithDesc"
                                                          values={
                                                            Object {
                                                              "description": undefined,
                                                              "innerText": "Actions",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="euiTableCellContent__text"
                                                            title="Actions"
                                                          >
                                                            Actions
                                                          </span>
                                                        </EuiI18n>
                                                      </EuiInnerText>
                                                    </span>
                                                  </CellContents>
                                                </th>
                                              </EuiTableHeaderCell>
                                            </tr>
                                          </thead>
                                        </EuiTableHeader>
                                        <EuiTableBody>
                                          <tbody>
                                            <EuiTableRow>
                                              <tr
                                                className="euiTableRow"
                                              >
                                                <EuiTableRowCell
                                                  align="center"
                                                  colSpan={7}
                                                  isMobileFullWidth={true}
                                                >
                                                  <td
                                                    className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                                    colSpan={7}
                                                    style={
                                                      Object {
                                                        "width": undefined,
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="euiTableCellContent euiTableCellContent--alignCenter"
                                                    >
                                                      <span
                                                        className="euiTableCellContent__text"
                                                      >
                                                        No items found
                                                      </span>
                                                    </div>
                                                  </td>
                                                </EuiTableRowCell>
                                              </tr>
                                            </EuiTableRow>
                                          </tbody>
                                        </EuiTableBody>
                                      </table>
                                    </EuiTable>
                                  </div>
                                </div>
                              </EuiBasicTable>
                            </div>
                          </EuiInMemoryTable>
                        </div>
                      </div>
                    </EuiPanel>
                  </ContentPanel>
                </div>
              </div>
            </EuiTabbedContent>
          </div>
        </EuiFlexItem>
      </div>
    </EuiFlexGroup>
  </Alerts>
</withRouter(Alerts)>
`;
